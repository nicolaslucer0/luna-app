{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adjustPaddingOut = exports.adjustPaddingFlat = void 0;\nexports.calculateFlatAffixTopPosition = calculateFlatAffixTopPosition;\nexports.calculateLabelTopPosition = exports.calculateInputHeight = exports.calculateFlatInputHorizontalPadding = void 0;\nexports.calculateOutlinedIconAndAffixTopPosition = calculateOutlinedIconAndAffixTopPosition;\nexports.interpolatePlaceholder = exports.getOutlinedInputColors = exports.getFlatInputColors = exports.getConstants = exports.calculatePadding = void 0;\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _constants = require(\"./constants\");\n\nvar _enums = require(\"./Adornment/enums\");\n\nvar _themes = require(\"../../styles/themes\");\n\nvar calculateLabelTopPosition = function calculateLabelTopPosition(labelHeight) {\n  var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var optionalPadding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var customHeight = height > 0 ? height : 0;\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\n\nexports.calculateLabelTopPosition = calculateLabelTopPosition;\n\nvar calculateInputHeight = function calculateInputHeight(labelHeight) {\n  var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var minHeight = arguments.length > 2 ? arguments[2] : undefined;\n  var finalHeight = height > 0 ? height : labelHeight;\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\n\nexports.calculateInputHeight = calculateInputHeight;\n\nvar calculatePadding = function calculatePadding(props) {\n  var height = props.height,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline;\n  var result = 0;\n\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n\n  return Math.max(0, result);\n};\n\nexports.calculatePadding = calculatePadding;\n\nvar calculateTextAreaPadding = function calculateTextAreaPadding(props) {\n  var dense = props.dense;\n  return dense ? 10 : 20;\n};\n\nvar calculateInputPadding = function calculateInputPadding(_ref) {\n  var topPosition = _ref.topPosition,\n      fontSize = _ref.fontSize,\n      multiline = _ref.multiline,\n      scale = _ref.scale,\n      dense = _ref.dense,\n      offset = _ref.offset,\n      isAndroid = _ref.isAndroid;\n  var refFontSize = scale * fontSize;\n  var result = Math.floor(topPosition / 2);\n  result = result + Math.floor((refFontSize - fontSize) / 2) - (scale < 1 ? offset / 2 : 0);\n  if (multiline && isAndroid) result = Math.min(dense ? offset / 2 : offset, result);\n  return result;\n};\n\nvar adjustPaddingOut = function adjustPaddingOut(_ref2) {\n  var pad = _ref2.pad,\n      multiline = _ref2.multiline,\n      label = _ref2.label,\n      scale = _ref2.scale,\n      height = _ref2.height,\n      fontSize = _ref2.fontSize,\n      lineHeight = _ref2.lineHeight,\n      dense = _ref2.dense,\n      offset = _ref2.offset,\n      isAndroid = _ref2.isAndroid;\n  var fontHeight = lineHeight !== null && lineHeight !== void 0 ? lineHeight : fontSize;\n  var refFontHeight = scale * fontSize;\n  var result = pad;\n\n  if (height && !multiline) {\n    return {\n      paddingTop: Math.max(0, (height - fontHeight) / 2),\n      paddingBottom: Math.max(0, (height - fontHeight) / 2)\n    };\n  }\n\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, refFontHeight / 2 * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n\n    if (!dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, refFontHeight * scale) : Math.min(offset / 2, refFontHeight * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontHeight * scale) : 0;\n      }\n    }\n\n    result = Math.floor(result);\n  }\n\n  return {\n    paddingTop: result,\n    paddingBottom: result\n  };\n};\n\nexports.adjustPaddingOut = adjustPaddingOut;\n\nvar adjustPaddingFlat = function adjustPaddingFlat(_ref3) {\n  var pad = _ref3.pad,\n      scale = _ref3.scale,\n      multiline = _ref3.multiline,\n      label = _ref3.label,\n      height = _ref3.height,\n      offset = _ref3.offset,\n      dense = _ref3.dense,\n      fontSize = _ref3.fontSize,\n      isAndroid = _ref3.isAndroid,\n      styles = _ref3.styles;\n  var result = pad;\n  var topResult = result;\n  var bottomResult = result;\n  var paddingTop = styles.paddingTop,\n      paddingBottom = styles.paddingBottom;\n  var refFontSize = scale * fontSize;\n\n  if (!multiline) {\n    if (label) {\n      return {\n        paddingTop: paddingTop,\n        paddingBottom: paddingBottom\n      };\n    }\n\n    return {\n      paddingTop: result,\n      paddingBottom: result\n    };\n  }\n\n  if (label) {\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n\n    if (!isAndroid) {\n      if (dense) {\n        topResult += scale < 1 ? Math.min(result, refFontSize * scale) - result / 2 : Math.min(result, refFontSize * scale) - result / 2;\n      }\n\n      if (!dense) {\n        topResult += scale < 1 ? Math.min(offset / 2, refFontSize * scale) : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2)\n      };\n    }\n\n    if (!isAndroid) {\n      if (dense) {\n        result += scale < 1 ? Math.min(offset / 2, fontSize / 2 * scale) : Math.min(offset / 2, scale);\n      }\n\n      if (!dense) {\n        result += scale < 1 ? Math.min(offset, fontSize * scale) : Math.min(fontSize, offset / 2 * scale);\n      }\n\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult)\n  };\n};\n\nexports.adjustPaddingFlat = adjustPaddingFlat;\n\nvar interpolatePlaceholder = function interpolatePlaceholder(labeled, hasActiveOutline) {\n  return labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasActiveOutline ? 0 : 1, 1]\n  });\n};\n\nexports.interpolatePlaceholder = interpolatePlaceholder;\n\nfunction calculateFlatAffixTopPosition(_ref4) {\n  var height = _ref4.height,\n      paddingTop = _ref4.paddingTop,\n      paddingBottom = _ref4.paddingBottom,\n      affixHeight = _ref4.affixHeight;\n  var inputHeightWithoutPadding = height - paddingTop - paddingBottom;\n  var halfOfTheInputHeightDecreasedByAffixHeight = (inputHeightWithoutPadding - affixHeight) / 2;\n  return paddingTop + halfOfTheInputHeightDecreasedByAffixHeight;\n}\n\nfunction calculateOutlinedIconAndAffixTopPosition(_ref5) {\n  var height = _ref5.height,\n      affixHeight = _ref5.affixHeight,\n      labelYOffset = _ref5.labelYOffset;\n  return (height - affixHeight + labelYOffset) / 2;\n}\n\nvar calculateFlatInputHorizontalPadding = function calculateFlatInputHorizontalPadding(_ref6) {\n  var adornmentConfig = _ref6.adornmentConfig,\n      isV3 = _ref6.isV3;\n\n  var _getConstants = getConstants(isV3),\n      LABEL_PADDING_HORIZONTAL = _getConstants.LABEL_PADDING_HORIZONTAL,\n      ADORNMENT_OFFSET = _getConstants.ADORNMENT_OFFSET,\n      FLAT_INPUT_OFFSET = _getConstants.FLAT_INPUT_OFFSET;\n\n  var paddingLeft = LABEL_PADDING_HORIZONTAL;\n  var paddingRight = LABEL_PADDING_HORIZONTAL;\n  adornmentConfig.forEach(function (_ref7) {\n    var type = _ref7.type,\n        side = _ref7.side;\n\n    if (type === _enums.AdornmentType.Icon && side === _enums.AdornmentSide.Left) {\n      paddingLeft = _constants.ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n    } else if (side === _enums.AdornmentSide.Right) {\n      if (type === _enums.AdornmentType.Affix) {\n        paddingRight = _constants.ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      } else if (type === _enums.AdornmentType.Icon) {\n        paddingRight = _constants.ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      }\n    }\n  });\n  return {\n    paddingLeft: paddingLeft,\n    paddingRight: paddingRight\n  };\n};\n\nexports.calculateFlatInputHorizontalPadding = calculateFlatInputHorizontalPadding;\n\nvar getInputTextColor = function getInputTextColor(_ref8) {\n  var theme = _ref8.theme,\n      disabled = _ref8.disabled,\n      mode = _ref8.mode;\n  var isFlat = mode === 'flat';\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isFlat) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return (0, _color.default)(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.text;\n};\n\nvar getActiveColor = function getActiveColor(_ref9) {\n  var theme = _ref9.theme,\n      disabled = _ref9.disabled,\n      error = _ref9.error,\n      activeUnderlineColor = _ref9.activeUnderlineColor,\n      activeOutlineColor = _ref9.activeOutlineColor,\n      mode = _ref9.mode;\n  var isFlat = mode === 'flat';\n  var modeColor = isFlat ? activeUnderlineColor : activeOutlineColor;\n\n  if (error) {\n    return theme.colors.error;\n  }\n\n  if (modeColor) {\n    return modeColor;\n  }\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return (0, _color.default)(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.primary;\n};\n\nvar getPlaceholderColor = function getPlaceholderColor(_ref10) {\n  var theme = _ref10.theme,\n      disabled = _ref10.disabled;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  return theme.colors.placeholder;\n};\n\nvar getFlatBackgroundColor = function getFlatBackgroundColor(_ref11) {\n  var _theme$colors, _theme$colors2;\n\n  var theme = _ref11.theme,\n      disabled = _ref11.disabled;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return (0, _color.default)(_themes.MD3LightTheme.colors.onSecondaryContainer).alpha(0.08).rgb().string();\n    } else {\n      return theme.colors.surfaceVariant;\n    }\n  }\n\n  if (disabled) {\n    return undefined;\n  }\n\n  return theme.dark ? (0, _color.default)((_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.background).lighten(0.24).rgb().string() : (0, _color.default)((_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : _theme$colors2.background).darken(0.06).rgb().string();\n};\n\nvar getFlatUnderlineColor = function getFlatUnderlineColor(_ref12) {\n  var theme = _ref12.theme,\n      disabled = _ref12.disabled,\n      underlineColor = _ref12.underlineColor;\n\n  if (!disabled && underlineColor) {\n    return underlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return 'transparent';\n  }\n\n  return theme.colors.disabled;\n};\n\nvar getOutlinedOutlineInputColor = function getOutlinedOutlineInputColor(_ref13) {\n  var theme = _ref13.theme,\n      disabled = _ref13.disabled,\n      customOutlineColor = _ref13.customOutlineColor;\n  var isTransparent = (0, _color.default)(customOutlineColor).alpha() === 0;\n\n  if (!disabled && customOutlineColor) {\n    return customOutlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (theme.dark) {\n        return 'transparent';\n      }\n\n      return theme.colors.surfaceDisabled;\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (disabled) {\n    if (isTransparent) {\n      return customOutlineColor;\n    }\n\n    return theme.colors.disabled;\n  }\n\n  return theme.colors.placeholder;\n};\n\nvar getFlatInputColors = function getFlatInputColors(_ref14) {\n  var underlineColor = _ref14.underlineColor,\n      activeUnderlineColor = _ref14.activeUnderlineColor,\n      disabled = _ref14.disabled,\n      error = _ref14.error,\n      theme = _ref14.theme;\n  var baseFlatColorProps = {\n    theme: theme,\n    disabled: disabled\n  };\n  return {\n    inputTextColor: getInputTextColor(Object.assign({}, baseFlatColorProps, {\n      mode: 'flat'\n    })),\n    activeColor: getActiveColor(Object.assign({}, baseFlatColorProps, {\n      error: error,\n      activeUnderlineColor: activeUnderlineColor,\n      mode: 'flat'\n    })),\n    underlineColorCustom: getFlatUnderlineColor(Object.assign({}, baseFlatColorProps, {\n      underlineColor: underlineColor\n    })),\n    placeholderColor: getPlaceholderColor(baseFlatColorProps),\n    errorColor: theme.colors.error,\n    backgroundColor: getFlatBackgroundColor(baseFlatColorProps)\n  };\n};\n\nexports.getFlatInputColors = getFlatInputColors;\n\nvar getOutlinedInputColors = function getOutlinedInputColors(_ref15) {\n  var activeOutlineColor = _ref15.activeOutlineColor,\n      customOutlineColor = _ref15.customOutlineColor,\n      disabled = _ref15.disabled,\n      error = _ref15.error,\n      theme = _ref15.theme;\n  var baseOutlinedColorProps = {\n    theme: theme,\n    disabled: disabled\n  };\n  return {\n    inputTextColor: getInputTextColor(Object.assign({}, baseOutlinedColorProps, {\n      mode: 'outlined'\n    })),\n    activeColor: getActiveColor(Object.assign({}, baseOutlinedColorProps, {\n      error: error,\n      activeOutlineColor: activeOutlineColor,\n      mode: 'outlined'\n    })),\n    outlineColor: getOutlinedOutlineInputColor(Object.assign({}, baseOutlinedColorProps, {\n      customOutlineColor: customOutlineColor\n    })),\n    placeholderColor: getPlaceholderColor(baseOutlinedColorProps),\n    errorColor: theme.colors.error\n  };\n};\n\nexports.getOutlinedInputColors = getOutlinedInputColors;\n\nvar getConstants = function getConstants(isV3) {\n  var AFFIX_OFFSET;\n  var ICON_OFFSET;\n  var LABEL_PADDING_TOP;\n  var LABEL_PADDING_HORIZONTAL;\n  var FLAT_INPUT_OFFSET;\n  var MIN_HEIGHT;\n  var INPUT_PADDING_HORIZONTAL;\n  var ADORNMENT_OFFSET;\n  var OUTLINED_INPUT_OFFSET;\n\n  if (isV3) {\n    AFFIX_OFFSET = _constants.MD3_AFFIX_OFFSET;\n    ICON_OFFSET = _constants.MD3_ICON_OFFSET;\n    LABEL_PADDING_TOP = _constants.MD3_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = _constants.MD3_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = _constants.MD3_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = _constants.MD3_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = _constants.MD3_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = _constants.MD3_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = _constants.MD3_OUTLINED_INPUT_OFFSET;\n  } else {\n    AFFIX_OFFSET = _constants.MD2_AFFIX_OFFSET;\n    ICON_OFFSET = _constants.MD2_ICON_OFFSET;\n    LABEL_PADDING_TOP = _constants.MD2_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = _constants.MD2_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = _constants.MD2_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = _constants.MD2_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = _constants.MD2_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = _constants.MD2_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = _constants.MD2_OUTLINED_INPUT_OFFSET;\n  }\n\n  return {\n    AFFIX_OFFSET: AFFIX_OFFSET,\n    ICON_OFFSET: ICON_OFFSET,\n    LABEL_PADDING_TOP: LABEL_PADDING_TOP,\n    LABEL_PADDING_HORIZONTAL: LABEL_PADDING_HORIZONTAL,\n    FLAT_INPUT_OFFSET: FLAT_INPUT_OFFSET,\n    MIN_HEIGHT: MIN_HEIGHT,\n    INPUT_PADDING_HORIZONTAL: INPUT_PADDING_HORIZONTAL,\n    ADORNMENT_OFFSET: ADORNMENT_OFFSET,\n    OUTLINED_INPUT_OFFSET: OUTLINED_INPUT_OFFSET\n  };\n};\n\nexports.getConstants = getConstants;","map":{"version":3,"sources":["helpers.tsx"],"names":["calculateLabelTopPosition","height","optionalPadding","customHeight","Math","calculateInputHeight","minHeight","finalHeight","calculatePadding","props","multiline","result","calculateTextAreaPadding","calculateInputPadding","dense","isAndroid","refFontSize","scale","topPosition","offset","adjustPaddingOut","fontHeight","lineHeight","refFontHeight","paddingTop","paddingBottom","adjustPaddingFlat","styles","topResult","bottomResult","fontSize","interpolatePlaceholder","inputRange","outputRange","hasActiveOutline","affixHeight","inputHeightWithoutPadding","halfOfTheInputHeightDecreasedByAffixHeight","labelYOffset","calculateFlatInputHorizontalPadding","isV3","FLAT_INPUT_OFFSET","getConstants","paddingLeft","paddingRight","adornmentConfig","side","type","AdornmentType","AdornmentSide","ADORNMENT_SIZE","getInputTextColor","mode","isFlat","theme","color","getActiveColor","modeColor","getPlaceholderColor","disabled","getFlatBackgroundColor","MD3LightTheme","getFlatUnderlineColor","underlineColor","getOutlinedOutlineInputColor","customOutlineColor","isTransparent","getFlatInputColors","baseFlatColorProps","inputTextColor","activeColor","error","activeUnderlineColor","underlineColorCustom","placeholderColor","errorColor","backgroundColor","getOutlinedInputColors","baseOutlinedColorProps","activeOutlineColor","outlineColor","AFFIX_OFFSET","ICON_OFFSET","LABEL_PADDING_TOP","LABEL_PADDING_HORIZONTAL","MIN_HEIGHT","INPUT_PADDING_HORIZONTAL","ADORNMENT_OFFSET","OUTLINED_INPUT_OFFSET"],"mappings":"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","sourcesContent":["import type { Animated } from 'react-native';\nimport color from 'color';\nimport type { AdornmentConfig } from './Adornment/types';\nimport {\n  ADORNMENT_SIZE,\n  MD3_LABEL_PADDING_HORIZONTAL,\n  MD2_LABEL_PADDING_HORIZONTAL,\n  MD3_ADORNMENT_OFFSET,\n  MD2_ADORNMENT_OFFSET,\n  MD3_FLAT_INPUT_OFFSET,\n  MD2_FLAT_INPUT_OFFSET,\n  MD3_AFFIX_OFFSET,\n  MD2_AFFIX_OFFSET,\n  MD3_ICON_OFFSET,\n  MD2_ICON_OFFSET,\n  MD3_LABEL_PADDING_TOP,\n  MD2_LABEL_PADDING_TOP,\n  MD3_MIN_HEIGHT,\n  MD2_MIN_HEIGHT,\n  MD3_INPUT_PADDING_HORIZONTAL,\n  MD2_INPUT_PADDING_HORIZONTAL,\n  MD3_OUTLINED_INPUT_OFFSET,\n  MD2_OUTLINED_INPUT_OFFSET,\n} from './constants';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport type { TextInputLabelProp } from './types';\nimport { MD3LightTheme } from '../../styles/themes';\nimport type { Theme } from '../../types';\n\ntype PaddingProps = {\n  height: number | null;\n  labelHalfHeight: number;\n  multiline: boolean | null;\n  dense: boolean | null;\n  topPosition: number;\n  fontSize: number;\n  lineHeight?: number;\n  label?: TextInputLabelProp | null;\n  scale: number;\n  offset: number;\n  isAndroid: boolean;\n  styles: { paddingTop: number; paddingBottom: number };\n};\n\ntype AdjProps = PaddingProps & {\n  pad: number;\n};\n\nexport type Padding = { paddingTop: number; paddingBottom: number };\n\nexport const calculateLabelTopPosition = (\n  labelHeight: number,\n  height: number = 0,\n  optionalPadding: number = 0\n): number => {\n  const customHeight = height > 0 ? height : 0;\n\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\n\nexport const calculateInputHeight = (\n  labelHeight: number,\n  height: any = 0,\n  minHeight: number\n): number => {\n  const finalHeight = height > 0 ? height : labelHeight;\n\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\n\nexport const calculatePadding = (props: PaddingProps): number => {\n  const { height, multiline = false } = props;\n\n  let result = 0;\n\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n\n  return Math.max(0, result);\n};\n\nconst calculateTextAreaPadding = (props: PaddingProps) => {\n  const { dense } = props;\n\n  return dense ? 10 : 20;\n};\n\nconst calculateInputPadding = ({\n  topPosition,\n  fontSize,\n  multiline,\n  scale,\n  dense,\n  offset,\n  isAndroid,\n}: PaddingProps): number => {\n  const refFontSize = scale * fontSize;\n  let result = Math.floor(topPosition / 2);\n\n  result =\n    result +\n    Math.floor((refFontSize - fontSize) / 2) -\n    (scale < 1 ? offset / 2 : 0);\n\n  if (multiline && isAndroid)\n    result = Math.min(dense ? offset / 2 : offset, result);\n\n  return result;\n};\n\nexport const adjustPaddingOut = ({\n  pad,\n  multiline,\n  label,\n  scale,\n  height,\n  fontSize,\n  lineHeight,\n  dense,\n  offset,\n  isAndroid,\n}: AdjProps): Padding => {\n  const fontHeight = lineHeight ?? fontSize;\n  const refFontHeight = scale * fontSize;\n  let result = pad;\n\n  if (height && !multiline) {\n    return {\n      paddingTop: Math.max(0, (height - fontHeight) / 2),\n      paddingBottom: Math.max(0, (height - fontHeight) / 2),\n    };\n  }\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, (refFontHeight / 2) * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n    if (!dense) {\n      if (label) {\n        result +=\n          scale < 1\n            ? Math.min(offset, refFontHeight * scale)\n            : Math.min(offset / 2, refFontHeight * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontHeight * scale) : 0;\n      }\n    }\n    result = Math.floor(result);\n  }\n  return { paddingTop: result, paddingBottom: result };\n};\n\nexport const adjustPaddingFlat = ({\n  pad,\n  scale,\n  multiline,\n  label,\n  height,\n  offset,\n  dense,\n  fontSize,\n  isAndroid,\n  styles,\n}: AdjProps): Padding => {\n  let result = pad;\n  let topResult = result;\n  let bottomResult = result;\n  const { paddingTop, paddingBottom } = styles;\n  const refFontSize = scale * fontSize;\n\n  if (!multiline) {\n    // do not modify padding if input is not multiline\n    if (label) {\n      // return const style for flat input with label\n      return { paddingTop, paddingBottom };\n    }\n    // return pad for flat input without label\n    return { paddingTop: result, paddingBottom: result };\n  }\n\n  if (label) {\n    // add paddings passed from styles\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n\n    // adjust top padding for iOS\n    if (!isAndroid) {\n      if (dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(result, refFontSize * scale) - result / 2\n            : Math.min(result, refFontSize * scale) - result / 2;\n      }\n      if (!dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(offset / 2, refFontSize * scale)\n            : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      // center text when height is passed\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2),\n      };\n    }\n    // adjust paddings for iOS if no label\n    if (!isAndroid) {\n      if (dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset / 2, (fontSize / 2) * scale)\n            : Math.min(offset / 2, scale);\n      }\n      if (!dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset, fontSize * scale)\n            : Math.min(fontSize, (offset / 2) * scale);\n      }\n\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult),\n  };\n};\n\nexport const interpolatePlaceholder = (\n  labeled: Animated.Value,\n  hasActiveOutline: boolean | undefined\n) =>\n  labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasActiveOutline ? 0 : 1, 1],\n  });\n\nexport function calculateFlatAffixTopPosition({\n  height,\n  paddingTop,\n  paddingBottom,\n  affixHeight,\n}: {\n  height: number;\n  paddingTop: number;\n  paddingBottom: number;\n  affixHeight: number;\n}): number {\n  const inputHeightWithoutPadding = height - paddingTop - paddingBottom;\n\n  const halfOfTheInputHeightDecreasedByAffixHeight =\n    (inputHeightWithoutPadding - affixHeight) / 2;\n\n  return paddingTop + halfOfTheInputHeightDecreasedByAffixHeight;\n}\n\nexport function calculateOutlinedIconAndAffixTopPosition({\n  height,\n  affixHeight,\n  labelYOffset,\n}: {\n  height: number;\n  affixHeight: number;\n  labelYOffset: number;\n}): number {\n  return (height - affixHeight + labelYOffset) / 2;\n}\n\nexport const calculateFlatInputHorizontalPadding = ({\n  adornmentConfig,\n  isV3,\n}: {\n  adornmentConfig: AdornmentConfig[];\n  isV3?: boolean;\n}) => {\n  const { LABEL_PADDING_HORIZONTAL, ADORNMENT_OFFSET, FLAT_INPUT_OFFSET } =\n    getConstants(isV3);\n\n  let paddingLeft = LABEL_PADDING_HORIZONTAL;\n  let paddingRight = LABEL_PADDING_HORIZONTAL;\n\n  adornmentConfig.forEach(({ type, side }) => {\n    if (type === AdornmentType.Icon && side === AdornmentSide.Left) {\n      paddingLeft = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n    } else if (side === AdornmentSide.Right) {\n      if (type === AdornmentType.Affix) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      } else if (type === AdornmentType.Icon) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      }\n    }\n  });\n\n  return { paddingLeft, paddingRight };\n};\n\ntype BaseProps = {\n  theme: Theme;\n  disabled?: boolean;\n};\n\ntype Mode = 'flat' | 'outlined';\n\nconst getInputTextColor = ({\n  theme,\n  disabled,\n  mode,\n}: BaseProps & { mode: Mode }) => {\n  const isFlat = mode === 'flat';\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isFlat) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.text;\n};\n\nconst getActiveColor = ({\n  theme,\n  disabled,\n  error,\n  activeUnderlineColor,\n  activeOutlineColor,\n  mode,\n}: BaseProps & {\n  error?: boolean;\n  activeUnderlineColor?: string;\n  activeOutlineColor?: string;\n  mode?: Mode;\n}) => {\n  const isFlat = mode === 'flat';\n  const modeColor = isFlat ? activeUnderlineColor : activeOutlineColor;\n\n  if (error) {\n    return theme.colors.error;\n  }\n\n  if (modeColor) {\n    return modeColor;\n  }\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.primary;\n};\n\nconst getPlaceholderColor = ({ theme, disabled }: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  return theme.colors.placeholder;\n};\n\nconst getFlatBackgroundColor = ({ theme, disabled }: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      // @ts-ignore According to Figma for both themes the base color for disabled in `onSecondaryContainer`\n      return color(MD3LightTheme.colors.onSecondaryContainer)\n        .alpha(0.08)\n        .rgb()\n        .string();\n    } else {\n      return theme.colors.surfaceVariant;\n    }\n  }\n\n  if (disabled) {\n    return undefined;\n  }\n\n  return theme.dark\n    ? color(theme.colors?.background).lighten(0.24).rgb().string()\n    : color(theme.colors?.background).darken(0.06).rgb().string();\n};\n\nconst getFlatUnderlineColor = ({\n  theme,\n  disabled,\n  underlineColor,\n}: BaseProps & { underlineColor?: string }) => {\n  if (!disabled && underlineColor) {\n    return underlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return 'transparent';\n  }\n\n  return theme.colors.disabled;\n};\n\nconst getOutlinedOutlineInputColor = ({\n  theme,\n  disabled,\n  customOutlineColor,\n}: BaseProps & { customOutlineColor?: string }) => {\n  const isTransparent = color(customOutlineColor).alpha() === 0;\n\n  if (!disabled && customOutlineColor) {\n    return customOutlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (theme.dark) {\n        return 'transparent';\n      }\n      return theme.colors.surfaceDisabled;\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (disabled) {\n    if (isTransparent) {\n      return customOutlineColor;\n    }\n    return theme.colors.disabled;\n  }\n  return theme.colors.placeholder;\n};\n\nexport const getFlatInputColors = ({\n  underlineColor,\n  activeUnderlineColor,\n  disabled,\n  error,\n  theme,\n}: {\n  underlineColor?: string;\n  activeUnderlineColor?: string;\n  disabled?: boolean;\n  error?: boolean;\n  theme: Theme;\n}) => {\n  const baseFlatColorProps = { theme, disabled };\n  return {\n    inputTextColor: getInputTextColor({ ...baseFlatColorProps, mode: 'flat' }),\n    activeColor: getActiveColor({\n      ...baseFlatColorProps,\n      error,\n      activeUnderlineColor,\n      mode: 'flat',\n    }),\n    underlineColorCustom: getFlatUnderlineColor({\n      ...baseFlatColorProps,\n      underlineColor,\n    }),\n    placeholderColor: getPlaceholderColor(baseFlatColorProps),\n    errorColor: theme.colors.error,\n    backgroundColor: getFlatBackgroundColor(baseFlatColorProps),\n  };\n};\n\nexport const getOutlinedInputColors = ({\n  activeOutlineColor,\n  customOutlineColor,\n  disabled,\n  error,\n  theme,\n}: {\n  activeOutlineColor?: string;\n  customOutlineColor?: string;\n  disabled?: boolean;\n  error?: boolean;\n  theme: Theme;\n}) => {\n  const baseOutlinedColorProps = { theme, disabled };\n\n  return {\n    inputTextColor: getInputTextColor({\n      ...baseOutlinedColorProps,\n      mode: 'outlined',\n    }),\n    activeColor: getActiveColor({\n      ...baseOutlinedColorProps,\n      error,\n      activeOutlineColor,\n      mode: 'outlined',\n    }),\n    outlineColor: getOutlinedOutlineInputColor({\n      ...baseOutlinedColorProps,\n      customOutlineColor,\n    }),\n    placeholderColor: getPlaceholderColor(baseOutlinedColorProps),\n    errorColor: theme.colors.error,\n  };\n};\n\nexport const getConstants = (isV3?: boolean) => {\n  // Text input affix\n  let AFFIX_OFFSET;\n  // Text input icon\n  let ICON_OFFSET;\n  //Text input flat\n  let LABEL_PADDING_TOP;\n  let LABEL_PADDING_HORIZONTAL;\n  let FLAT_INPUT_OFFSET;\n  let MIN_HEIGHT;\n  // Text input outlined;\n  let INPUT_PADDING_HORIZONTAL;\n  let ADORNMENT_OFFSET;\n  let OUTLINED_INPUT_OFFSET;\n\n  if (isV3) {\n    AFFIX_OFFSET = MD3_AFFIX_OFFSET;\n    ICON_OFFSET = MD3_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD3_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD3_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD3_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD3_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD3_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD3_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD3_OUTLINED_INPUT_OFFSET;\n  } else {\n    AFFIX_OFFSET = MD2_AFFIX_OFFSET;\n    ICON_OFFSET = MD2_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD2_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD2_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD2_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD2_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD2_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD2_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD2_OUTLINED_INPUT_OFFSET;\n  }\n\n  return {\n    AFFIX_OFFSET,\n    ICON_OFFSET,\n    LABEL_PADDING_TOP,\n    LABEL_PADDING_HORIZONTAL,\n    FLAT_INPUT_OFFSET,\n    MIN_HEIGHT,\n    INPUT_PADDING_HORIZONTAL,\n    ADORNMENT_OFFSET,\n    OUTLINED_INPUT_OFFSET,\n  };\n};\n"]},"metadata":{},"sourceType":"script"}