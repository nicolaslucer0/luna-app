{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.accessibilityProps = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _colors = require(\"../styles/themes/v2/colors\");\n\nvar _excluded = [\"name\", \"color\", \"size\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar MaterialCommunityIcons;\n\ntry {\n  MaterialCommunityIcons = require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e) {\n  var isErrorLogged = false;\n\n  MaterialCommunityIcons = function MaterialCommunityIcons(_ref) {\n    var name = _ref.name,\n        color = _ref.color,\n        size = _ref.size,\n        rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n\n    if (!isErrorLogged) {\n      if (!/(Cannot find module|Module not found|Cannot resolve module)/.test(e.message)) {\n        console.error(e);\n      }\n\n      console.warn(\"Tried to use the icon '\" + name + \"' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.\", \"To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.\");\n      isErrorLogged = true;\n    }\n\n    return React.createElement(_reactNative.Text, _extends({}, rest, {\n      style: [styles.icon, {\n        color: color,\n        fontSize: size\n      }],\n      pointerEvents: \"none\",\n      selectable: false\n    }), \"\\u25A1\");\n  };\n}\n\nvar accessibilityProps = _reactNative.Platform.OS === 'web' ? {\n  role: 'img',\n  focusable: false\n} : {\n  accessibilityElementsHidden: true,\n  importantForAccessibility: 'no-hide-descendants'\n};\nexports.accessibilityProps = accessibilityProps;\n\nvar defaultIcon = function defaultIcon(_ref2) {\n  var name = _ref2.name,\n      _ref2$color = _ref2.color,\n      color = _ref2$color === void 0 ? _colors.black : _ref2$color,\n      size = _ref2.size,\n      direction = _ref2.direction,\n      allowFontScaling = _ref2.allowFontScaling;\n  return React.createElement(MaterialCommunityIcons, _extends({\n    allowFontScaling: allowFontScaling,\n    name: name,\n    color: color,\n    size: size,\n    style: [{\n      transform: [{\n        scaleX: direction === 'rtl' ? -1 : 1\n      }],\n      lineHeight: size\n    }, styles.icon],\n    pointerEvents: \"none\",\n    selectable: false\n  }, accessibilityProps));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent'\n  }\n});\n\nvar _default = defaultIcon;\nexports.default = _default;","map":{"version":3,"sources":["MaterialCommunityIcon.tsx"],"names":["MaterialCommunityIcons","require","isErrorLogged","rest","e","console","styles","color","fontSize","size","accessibilityProps","role","focusable","accessibilityElementsHidden","importantForAccessibility","defaultIcon","allowFontScaling","transform","scaleX","direction","lineHeight","icon","backgroundColor"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,IAAA,sBAAA;;AASA,IAAI;EAEFA,sBAAsB,GACpBC,OAAO,CAAPA,kDAAO,CAAPA,CADFD,OAAAA;AAFF,CAAA,CAIE,OAAA,CAAA,EAAU;EACV,IAAIE,aAAa,GADP,KACV;;EAGAF,sBAAsB,GAAG,gCAAA,IAAA,EAAoC;IAAnC,IAAA,IAAA,GAAmC,IAAnC,CAAA,IAAA;IAAA,IAAA,KAAA,GAAmC,IAAnC,CAAA,KAAA;IAAA,IAAA,IAAA,GAAmC,IAAnC,CAAA,IAAA;IAAA,IAAwBG,IAAxB,0CAAmC,IAAnC;;IAExB,IAAI,CAAJ,aAAA,EAAoB;MAClB,IACE,CAAC,8DAAA,IAAA,CACEC,CAAD,CAFJ,OACG,CADH,EAIE;QACAC,OAAO,CAAPA,KAAAA,CAAAA,CAAAA;MACD;;MAEDA,OAAO,CAAPA,IAAAA,6BAAAA,IAAAA;MAKAH,aAAa,GAAbA,IAAAA;IACD;;IAED,OACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;MAEE,KAAK,EAAE,CAACI,MAAM,CAAP,IAAA,EAAc;QAAEC,KAAF,EAAEA,KAAF;QAASC,QAAQ,EAAEC;MAAnB,CAAd,CAFT;MAIE,aAAa,EAJf,MAAA;MAKE,UAAU,EAAE;IALd,CAAA,CAAA,EADF,QACE,CADF;EAnBFT,CAAAA;AA+BD;;AAEM,IAAMU,kBAAkB,GAC7B,qBAAA,CAAA,EAAA,KAAA,KAAA,GACI;EACEC,IAAI,EADN,KAAA;EAEEC,SAAS,EAAE;AAFb,CADJ,GAKI;EACEC,2BAA2B,EAD7B,IAAA;EAEEC,yBAAyB,EACvB;AAHJ,CANC;;;AAYP,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA,KAAA,EAAA;EAAA,IAAC,IAAD,GAAA,KAAA,CAAC,IAAD;EAAA,kBAAA,KAAA,CAElBR,KAFkB;EAAA,IAElBA,KAFkB,4BAAC,aAAD;EAAA,IAAC,IAAD,GAAA,KAAA,CAAC,IAAD;EAAA,IAAC,SAAD,GAAA,KAAA,CAAC,SAAD;EAAA,IAKlBS,gBALkB,GAAA,KAAA,CAKlBA,gBALkB;EAAA,OAOlB,KAAA,CAAA,aAAA,CAAA,sBAAA,EAAA,QAAA,CAAA;IACE,gBAAgB,EADlB,gBAAA;IAEE,IAAI,EAFN,IAAA;IAGE,KAAK,EAHP,KAAA;IAIE,IAAI,EAJN,IAAA;IAKE,KAAK,EAAE,CACL;MACEC,SAAS,EAAE,CAAC;QAAEC,MAAM,EAAEC,SAAS,KAATA,KAAAA,GAAsB,CAAtBA,CAAAA,GAA2B;MAArC,CAAD,CADb;MAEEC,UAAU,EAAEX;IAFd,CADK,EAKLH,MAAM,CAVV,IAKS,CALT;IAYE,aAAa,EAZf,MAAA;IAaE,UAAU,EAAE;EAbd,CAAA,EAPkB,kBAOlB,CAAA,CAPkB;AAApB,CAAA;;AAyBA,IAAMA,MAAM,GAAG,uBAAA,CAAA,MAAA,CAAkB;EAC/Be,IAAI,EAAE;IACJC,eAAe,EAAE;EADb;AADyB,CAAlB,CAAf;;eAMA,W","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, Platform, TextProps, ViewProps } from 'react-native';\nimport { black } from '../styles/themes/v2/colors';\n\nexport type IconProps = {\n  name: string;\n  color?: string;\n  size: number;\n  direction: 'rtl' | 'ltr';\n  allowFontScaling?: boolean;\n};\n\nlet MaterialCommunityIcons: React.ComponentType<\n  TextProps & {\n    name: string;\n    color: string;\n    size: number;\n    pointerEvents?: ViewProps['pointerEvents'];\n  }\n>;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons =\n    require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  MaterialCommunityIcons = ({ name, color, size, ...rest }) => {\n    /* eslint-disable no-console */\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          (e as any).message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      <Text\n        {...rest}\n        style={[styles.icon, { color, fontSize: size }]}\n        // @ts-expect-error: Text doesn't support this, but it seems to affect TouchableNativeFeedback\n        pointerEvents=\"none\"\n        selectable={false}\n      >\n        â–¡\n      </Text>\n    );\n  };\n}\n\nexport const accessibilityProps =\n  Platform.OS === 'web'\n    ? {\n        role: 'img',\n        focusable: false,\n      }\n    : {\n        accessibilityElementsHidden: true,\n        importantForAccessibility:\n          'no-hide-descendants' as 'no-hide-descendants',\n      };\n\nconst defaultIcon = ({\n  name,\n  color = black,\n  size,\n  direction,\n  allowFontScaling,\n}: IconProps) => (\n  <MaterialCommunityIcons\n    allowFontScaling={allowFontScaling}\n    name={name}\n    color={color}\n    size={size}\n    style={[\n      {\n        transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n        lineHeight: size,\n      },\n      styles.icon,\n    ]}\n    pointerEvents=\"none\"\n    selectable={false}\n    {...accessibilityProps}\n  />\n);\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default defaultIcon;\n"]},"metadata":{},"sourceType":"script"}