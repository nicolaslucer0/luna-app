{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSelectionControlIOSColor = exports.getAndroidSelectionControlColor = void 0;\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar getAndroidCheckedColor = function getAndroidCheckedColor(_ref) {\n  var theme = _ref.theme,\n      customColor = _ref.customColor;\n\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nvar getAndroidUncheckedColor = function getAndroidUncheckedColor(_ref2) {\n  var theme = _ref2.theme,\n      customUncheckedColor = _ref2.customUncheckedColor;\n\n  if (customUncheckedColor) {\n    return customUncheckedColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (theme.dark) {\n    return (0, _color.default)(theme.colors.text).alpha(0.7).rgb().string();\n  }\n\n  return (0, _color.default)(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nvar getAndroidRippleColor = function getAndroidRippleColor(_ref3) {\n  var theme = _ref3.theme,\n      checkedColor = _ref3.checkedColor,\n      disabled = _ref3.disabled;\n\n  if (disabled) {\n    if (theme.isV3) {\n      return (0, _color.default)(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n\n    return (0, _color.default)(theme.colors.text).alpha(0.16).rgb().string();\n  }\n\n  return (0, _color.default)(checkedColor).fade(0.32).rgb().string();\n};\n\nvar getAndroidControlColor = function getAndroidControlColor(_ref4) {\n  var theme = _ref4.theme,\n      checked = _ref4.checked,\n      disabled = _ref4.disabled,\n      checkedColor = _ref4.checkedColor,\n      uncheckedColor = _ref4.uncheckedColor;\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.text;\n  }\n\n  if (checked) {\n    return checkedColor;\n  }\n\n  return uncheckedColor;\n};\n\nvar getAndroidSelectionControlColor = function getAndroidSelectionControlColor(_ref5) {\n  var theme = _ref5.theme,\n      disabled = _ref5.disabled,\n      checked = _ref5.checked,\n      customColor = _ref5.customColor,\n      customUncheckedColor = _ref5.customUncheckedColor;\n  var checkedColor = getAndroidCheckedColor({\n    theme: theme,\n    customColor: customColor\n  });\n  var uncheckedColor = getAndroidUncheckedColor({\n    theme: theme,\n    customUncheckedColor: customUncheckedColor\n  });\n  return {\n    rippleColor: getAndroidRippleColor({\n      theme: theme,\n      checkedColor: checkedColor,\n      disabled: disabled\n    }),\n    selectionControlColor: getAndroidControlColor({\n      theme: theme,\n      disabled: disabled,\n      checked: checked,\n      checkedColor: checkedColor,\n      uncheckedColor: uncheckedColor\n    })\n  };\n};\n\nexports.getAndroidSelectionControlColor = getAndroidSelectionControlColor;\n\nvar getIOSCheckedColor = function getIOSCheckedColor(_ref6) {\n  var theme = _ref6.theme,\n      disabled = _ref6.disabled,\n      customColor = _ref6.customColor;\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.disabled;\n  }\n\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nvar getIOSRippleColor = function getIOSRippleColor(_ref7) {\n  var theme = _ref7.theme,\n      checkedColor = _ref7.checkedColor,\n      disabled = _ref7.disabled;\n\n  if (disabled) {\n    if (theme.isV3) {\n      return (0, _color.default)(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n\n    return (0, _color.default)(theme.colors.text).alpha(0.16).rgb().string();\n  }\n\n  return (0, _color.default)(checkedColor).fade(0.32).rgb().string();\n};\n\nvar getSelectionControlIOSColor = function getSelectionControlIOSColor(_ref8) {\n  var theme = _ref8.theme,\n      disabled = _ref8.disabled,\n      customColor = _ref8.customColor;\n  var checkedColor = getIOSCheckedColor({\n    theme: theme,\n    disabled: disabled,\n    customColor: customColor\n  });\n  return {\n    checkedColor: checkedColor,\n    rippleColor: getIOSRippleColor({\n      theme: theme,\n      checkedColor: checkedColor,\n      disabled: disabled\n    })\n  };\n};\n\nexports.getSelectionControlIOSColor = getSelectionControlIOSColor;","map":{"version":3,"sources":["utils.ts"],"names":["getAndroidCheckedColor","customColor","theme","getAndroidUncheckedColor","customUncheckedColor","color","getAndroidRippleColor","disabled","getAndroidControlColor","uncheckedColor","getAndroidSelectionControlColor","checkedColor","rippleColor","selectionControlColor","checked","getIOSCheckedColor","getIOSRippleColor","getSelectionControlIOSColor"],"mappings":"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","sourcesContent":["import color from 'color';\nimport type { Theme } from '../../types';\n\nconst getAndroidCheckedColor = ({\n  theme,\n  customColor,\n}: {\n  theme: Theme;\n  customColor?: string;\n}) => {\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getAndroidUncheckedColor = ({\n  theme,\n  customUncheckedColor,\n}: {\n  theme: Theme;\n  customUncheckedColor?: string;\n}) => {\n  if (customUncheckedColor) {\n    return customUncheckedColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.7).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getAndroidRippleColor = ({\n  theme,\n  checkedColor,\n  disabled,\n}: {\n  theme: Theme;\n  checkedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nconst getAndroidControlColor = ({\n  theme,\n  checked,\n  disabled,\n  checkedColor,\n  uncheckedColor,\n}: {\n  theme: Theme;\n  checked: boolean;\n  checkedColor: string;\n  uncheckedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.text;\n  }\n\n  if (checked) {\n    return checkedColor;\n  }\n  return uncheckedColor;\n};\n\nexport const getAndroidSelectionControlColor = ({\n  theme,\n  disabled,\n  checked,\n  customColor,\n  customUncheckedColor,\n}: {\n  theme: Theme;\n  checked: boolean;\n  disabled?: boolean;\n  customColor?: string;\n  customUncheckedColor?: string;\n}) => {\n  const checkedColor = getAndroidCheckedColor({ theme, customColor });\n  const uncheckedColor = getAndroidUncheckedColor({\n    theme,\n    customUncheckedColor,\n  });\n  return {\n    rippleColor: getAndroidRippleColor({ theme, checkedColor, disabled }),\n    selectionControlColor: getAndroidControlColor({\n      theme,\n      disabled,\n      checked,\n      checkedColor,\n      uncheckedColor,\n    }),\n  };\n};\n\nconst getIOSCheckedColor = ({\n  theme,\n  disabled,\n  customColor,\n}: {\n  theme: Theme;\n  customColor?: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.disabled;\n  }\n\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getIOSRippleColor = ({\n  theme,\n  checkedColor,\n  disabled,\n}: {\n  theme: Theme;\n  checkedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nexport const getSelectionControlIOSColor = ({\n  theme,\n  disabled,\n  customColor,\n}: {\n  theme: Theme;\n  disabled?: boolean;\n  customColor?: string;\n}) => {\n  const checkedColor = getIOSCheckedColor({ theme, disabled, customColor });\n  return {\n    checkedColor,\n    rippleColor: getIOSRippleColor({\n      theme,\n      checkedColor,\n      disabled,\n    }),\n  };\n};\n"]},"metadata":{},"sourceType":"script"}