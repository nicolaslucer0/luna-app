{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Button = _interopRequireDefault(require(\"./Button/Button\"));\n\nvar _Surface = _interopRequireDefault(require(\"./Surface\"));\n\nvar _Text = _interopRequireDefault(require(\"./Typography/Text\"));\n\nvar _theming = require(\"../core/theming\");\n\nvar _excluded = [\"visible\", \"action\", \"duration\", \"onDismiss\", \"children\", \"elevation\", \"wrapperStyle\", \"style\", \"theme\"],\n    _excluded2 = [\"style\", \"label\", \"onPress\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DURATION_SHORT = 4000;\nvar DURATION_MEDIUM = 7000;\nvar DURATION_LONG = 10000;\n\nvar Snackbar = function Snackbar(_ref) {\n  var visible = _ref.visible,\n      action = _ref.action,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? DURATION_MEDIUM : _ref$duration,\n      onDismiss = _ref.onDismiss,\n      children = _ref.children,\n      _ref$elevation = _ref.elevation,\n      elevation = _ref$elevation === void 0 ? 2 : _ref$elevation,\n      wrapperStyle = _ref.wrapperStyle,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(0.0)),\n      opacity = _React$useRef.current;\n\n  var _React$useState = React.useState(!visible),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      hidden = _React$useState2[0],\n      setHidden = _React$useState2[1];\n\n  var hideTimeout = React.useRef(undefined);\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    return function () {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    };\n  }, []);\n  React.useLayoutEffect(function () {\n    if (visible) {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n      setHidden(false);\n\n      _reactNative.Animated.timing(opacity, {\n        toValue: 1,\n        duration: 200 * scale,\n        easing: _reactNative.Easing.out(_reactNative.Easing.ease),\n        useNativeDriver: true\n      }).start(function (_ref2) {\n        var finished = _ref2.finished;\n\n        if (finished) {\n          var isInfinity = duration === Number.POSITIVE_INFINITY || duration === Number.NEGATIVE_INFINITY;\n\n          if (finished && !isInfinity) {\n            hideTimeout.current = setTimeout(onDismiss, duration);\n          }\n        }\n      });\n    } else {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n\n      _reactNative.Animated.timing(opacity, {\n        toValue: 0,\n        duration: 100 * scale,\n        useNativeDriver: true\n      }).start(function (_ref3) {\n        var finished = _ref3.finished;\n        if (finished) setHidden(true);\n      });\n    }\n  }, [visible, duration, opacity, scale, onDismiss]);\n  var colors = theme.colors,\n      roundness = theme.roundness,\n      isV3 = theme.isV3;\n  if (hidden) return null;\n\n  var _ref4 = action || {},\n      actionStyle = _ref4.style,\n      actionLabel = _ref4.label,\n      onPressAction = _ref4.onPress,\n      actionProps = (0, _objectWithoutProperties2.default)(_ref4, _excluded2);\n\n  var marginRight = action ? 0 : 16;\n  var textColor = theme.isV3 ? theme.colors.inversePrimary : theme.colors.accent;\n  return React.createElement(_reactNative.SafeAreaView, {\n    pointerEvents: \"box-none\",\n    style: [styles.wrapper, wrapperStyle]\n  }, React.createElement(_Surface.default, _extends({\n    pointerEvents: \"box-none\",\n    accessibilityLiveRegion: \"polite\",\n    style: [!isV3 && styles.elevation, styles.container, {\n      borderRadius: roundness,\n      opacity: opacity,\n      transform: [{\n        scale: visible ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.9, 1]\n        }) : 1\n      }]\n    }, {\n      backgroundColor: colors === null || colors === void 0 ? void 0 : colors.onSurface\n    }, style]\n  }, isV3 && {\n    elevation: elevation\n  }, rest), React.createElement(_Text.default, {\n    style: [styles.content, {\n      marginRight: marginRight,\n      color: colors === null || colors === void 0 ? void 0 : colors.surface\n    }]\n  }, children), action ? React.createElement(_Button.default, _extends({\n    onPress: function onPress() {\n      onPressAction === null || onPressAction === void 0 ? void 0 : onPressAction();\n      onDismiss();\n    },\n    style: [styles.button, actionStyle],\n    textColor: textColor,\n    compact: true,\n    mode: \"text\"\n  }, actionProps), actionLabel) : null));\n};\n\nSnackbar.DURATION_SHORT = DURATION_SHORT;\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\nSnackbar.DURATION_LONG = DURATION_LONG;\n\nvar styles = _reactNative.StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: 8,\n    borderRadius: 4\n  },\n  content: {\n    marginLeft: 16,\n    marginVertical: 14,\n    flexWrap: 'wrap',\n    flex: 1\n  },\n  button: {\n    marginHorizontal: 8,\n    marginVertical: 6\n  },\n  elevation: {\n    elevation: 6\n  }\n});\n\nvar _default = (0, _theming.withTheme)(Snackbar);\n\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["DURATION_SHORT","DURATION_MEDIUM","DURATION_LONG","Snackbar","visible","action","duration","onDismiss","children","elevation","wrapperStyle","style","theme","rest","React","useRef","Animated","Value","opacity","current","useState","hidden","setHidden","hideTimeout","undefined","scale","animation","useEffect","clearTimeout","useLayoutEffect","timing","toValue","easing","Easing","out","ease","useNativeDriver","start","finished","isInfinity","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","setTimeout","colors","roundness","isV3","actionStyle","actionLabel","label","onPressAction","onPress","actionProps","marginRight","textColor","inversePrimary","accent","SafeAreaView","pointerEvents","styles","wrapper","Surface","accessibilityLiveRegion","container","borderRadius","transform","interpolate","inputRange","outputRange","backgroundColor","onSurface","Text","content","color","surface","Button","button","compact","mode","StyleSheet","create","position","bottom","width","flexDirection","justifyContent","alignItems","margin","marginLeft","marginVertical","flexWrap","flex","marginHorizontal","withTheme"],"sources":["Snackbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  SafeAreaView,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n  View,\n  Easing,\n} from 'react-native';\n\nimport Button from './Button/Button';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport { withTheme } from '../core/theming';\nimport type { Theme } from '../types';\n\nexport type Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Whether the Snackbar is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Label and press callback for the action button. It should contain the following properties:\n   * - `label` - Label of the action button\n   * - `onPress` - Callback that is called when action button is pressed.\n   */\n  action?: Omit<React.ComponentProps<typeof Button>, 'children'> & {\n    label: string;\n  };\n  /**\n   * The duration for which the Snackbar is shown.\n   */\n  duration?: number;\n  /**\n   * Callback called when Snackbar is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Text content of the Snackbar.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the wrapper of the snackbar\n   */\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes Snackbar shadow and background on iOS and Android.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  wrapperStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\nconst DURATION_SHORT = 4000;\nconst DURATION_MEDIUM = 7000;\nconst DURATION_LONG = 10000;\n\n/**\n * Snackbars provide brief feedback about an operation through a message at the bottom of the screen.\n * Snackbar by default uses `onSurface` color from theme.\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/snackbar.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, StyleSheet } from 'react-native';\n * import { Button, Snackbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const onToggleSnackBar = () => setVisible(!visible);\n *\n *   const onDismissSnackBar = () => setVisible(false);\n *\n *   return (\n *     <View style={styles.container}>\n *       <Button onPress={onToggleSnackBar}>{visible ? 'Hide' : 'Show'}</Button>\n *       <Snackbar\n *         visible={visible}\n *         onDismiss={onDismissSnackBar}\n *         action={{\n *           label: 'Undo',\n *           onPress: () => {\n *             // Do something\n *           },\n *         }}>\n *         Hey there! I'm a Snackbar.\n *       </Snackbar>\n *     </View>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'space-between',\n *   },\n * });\n *\n * export default MyComponent;\n * ```\n */\nconst Snackbar = ({\n  visible,\n  action,\n  duration = DURATION_MEDIUM,\n  onDismiss,\n  children,\n  elevation = 2,\n  wrapperStyle,\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(0.0)\n  );\n  const [hidden, setHidden] = React.useState<boolean>(!visible);\n\n  const hideTimeout = React.useRef<NodeJS.Timeout | undefined>(undefined);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    return () => {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    };\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (visible) {\n      // show\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n      setHidden(false);\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 200 * scale,\n        easing: Easing.out(Easing.ease),\n        useNativeDriver: true,\n      }).start(({ finished }) => {\n        if (finished) {\n          const isInfinity =\n            duration === Number.POSITIVE_INFINITY ||\n            duration === Number.NEGATIVE_INFINITY;\n\n          if (finished && !isInfinity) {\n            hideTimeout.current = setTimeout(\n              onDismiss,\n              duration\n            ) as unknown as NodeJS.Timeout;\n          }\n        }\n      });\n    } else {\n      // hide\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 100 * scale,\n        useNativeDriver: true,\n      }).start(({ finished }) => {\n        if (finished) setHidden(true);\n      });\n    }\n  }, [visible, duration, opacity, scale, onDismiss]);\n\n  const { colors, roundness, isV3 } = theme;\n\n  if (hidden) return null;\n\n  const {\n    style: actionStyle,\n    label: actionLabel,\n    onPress: onPressAction,\n    ...actionProps\n  } = action || {};\n\n  const marginRight = action ? 0 : 16;\n  const textColor = theme.isV3\n    ? theme.colors.inversePrimary\n    : theme.colors.accent;\n\n  return (\n    <SafeAreaView\n      pointerEvents=\"box-none\"\n      style={[styles.wrapper, wrapperStyle]}\n    >\n      <Surface\n        pointerEvents=\"box-none\"\n        accessibilityLiveRegion=\"polite\"\n        style={\n          [\n            !isV3 && styles.elevation,\n            styles.container,\n            {\n              borderRadius: roundness,\n              opacity: opacity,\n              transform: [\n                {\n                  scale: visible\n                    ? opacity.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0.9, 1],\n                      })\n                    : 1,\n                },\n              ],\n            },\n            { backgroundColor: colors?.onSurface },\n            style,\n          ] as StyleProp<ViewStyle>\n        }\n        {...(isV3 && { elevation })}\n        {...rest}\n      >\n        <Text style={[styles.content, { marginRight, color: colors?.surface }]}>\n          {children}\n        </Text>\n        {action ? (\n          <Button\n            onPress={() => {\n              onPressAction?.();\n              onDismiss();\n            }}\n            style={[styles.button, actionStyle]}\n            textColor={textColor}\n            compact\n            mode=\"text\"\n            {...actionProps}\n          >\n            {actionLabel}\n          </Button>\n        ) : null}\n      </Surface>\n    </SafeAreaView>\n  );\n};\n\n/**\n * Show the Snackbar for a short duration.\n */\nSnackbar.DURATION_SHORT = DURATION_SHORT;\n\n/**\n * Show the Snackbar for a medium duration.\n */\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\n\n/**\n * Show the Snackbar for a long duration.\n */\nSnackbar.DURATION_LONG = DURATION_LONG;\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n  },\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: 8,\n    borderRadius: 4,\n  },\n  content: {\n    marginLeft: 16,\n    marginVertical: 14,\n    flexWrap: 'wrap',\n    flex: 1,\n  },\n  button: {\n    marginHorizontal: 8,\n    marginVertical: 6,\n  },\n  elevation: {\n    elevation: 6,\n  },\n});\n\nexport default withTheme(Snackbar);\n"]},"metadata":{},"sourceType":"script"}