{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\n\nvar _Divider = _interopRequireDefault(require(\"../Divider\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _tokens = require(\"../../styles/themes/v3/tokens\");\n\nvar _excluded = [\"children\", \"title\", \"theme\", \"style\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DrawerSection = function DrawerSection(_ref) {\n  var children = _ref.children,\n      title = _ref.title,\n      theme = _ref.theme,\n      style = _ref.style,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var isV3 = theme.isV3;\n  var titleColor = isV3 ? theme.colors.onSurfaceVariant : (0, _color.default)(theme.colors.text).alpha(0.54).rgb().string();\n  var titleMargin = isV3 ? 28 : 16;\n  return React.createElement(_reactNative.View, _extends({\n    style: [styles.container, style]\n  }, rest), title && React.createElement(_reactNative.View, {\n    style: [styles.titleContainer, isV3 && styles.v3TitleContainer]\n  }, title && React.createElement(_Text.default, {\n    variant: \"titleSmall\",\n    numberOfLines: 1,\n    style: [Object.assign({\n      color: titleColor,\n      marginLeft: titleMargin\n    }, isV3 ? theme.typescale.titleSmall : theme.fonts.medium)]\n  }, title)), children, React.createElement(_Divider.default, _extends({}, isV3 && {\n    horizontalInset: true,\n    bold: true\n  }, {\n    style: [styles.divider, isV3 && styles.v3Divider]\n  })));\n};\n\nDrawerSection.displayName = 'Drawer.Section';\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    marginBottom: 4\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center'\n  },\n  v3TitleContainer: {\n    height: 56\n  },\n  divider: {\n    marginTop: 4\n  },\n  v3Divider: {\n    backgroundColor: _tokens.MD3Colors.neutralVariant50\n  }\n});\n\nvar _default = (0, _theming.withTheme)(DrawerSection);\n\nexports.default = _default;","map":{"version":3,"sources":["DrawerSection.tsx"],"names":["DrawerSection","rest","isV3","titleColor","theme","color","titleMargin","styles","title","marginLeft","horizontalInset","bold","container","marginBottom","titleContainer","height","justifyContent","v3TitleContainer","divider","marginTop","v3Divider","backgroundColor","MD3Colors","neutralVariant50","withTheme"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAAuD;EAAtD,IAAA,QAAA,GAAsD,IAAtD,CAAA,QAAA;EAAA,IAAA,KAAA,GAAsD,IAAtD,CAAA,KAAA;EAAA,IAAA,KAAA,GAAsD,IAAtD,CAAA,KAAA;EAAA,IAAA,KAAA,GAAsD,IAAtD,CAAA,KAAA;EAAA,IAAoCC,IAApC,0CAAsD,IAAtD;EACrB,IAAQC,IAAR,GAAA,KAAA,CAAQA,IAAR;EACA,IAAMC,UAAU,GAAGD,IAAI,GACnBE,KAAK,CAALA,MAAAA,CADmB,gBAAA,GAEnBC,IAAAA,cAAAA,EAAMD,KAAK,CAALA,MAAAA,CAANC,IAAAA,EAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAFJ,MAEIA,EAFJ;EAGA,IAAMC,WAAW,GAAGJ,IAAI,GAAA,EAAA,GAAxB,EAAA;EACA,OACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,QAAA,CAAA;IAAM,KAAK,EAAE,CAACK,MAAM,CAAP,SAAA,EAAA,KAAA;EAAb,CAAA,EAAA,IAAA,CAAA,EACGC,KAAK,IACJ,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA;IAAM,KAAK,EAAE,CAACD,MAAM,CAAP,cAAA,EAAwBL,IAAI,IAAIK,MAAM,CAAtC,gBAAA;EAAb,CAAA,EACGC,KAAK,IACJ,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;IACE,OAAO,EADT,YAAA;IAEE,aAAa,EAFf,CAAA;IAGE,KAAK,EAAE;MAEHH,KAAK,EADP,UADK;MAGHI,UAAU,EAFZ;IADK,GAICP,IAAI,GAAGE,KAAK,CAALA,SAAAA,CAAH,UAAA,GAAgCA,KAAK,CAALA,KAAAA,CAAxC,MAJG;EAHT,CAAA,EAJR,KAIQ,CAFJ,CAFJ,EAAA,QAAA,EAqBE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,EACOF,IAAI,IAAI;IAAEQ,eAAe,EAAjB,IAAA;IAAyBC,IAAI,EAAE;EAA/B,CADf,EAAA;IAEE,KAAK,EAAE,CAACJ,MAAM,CAAP,OAAA,EAAiBL,IAAI,IAAIK,MAAM,CAA/B,SAAA;EAFT,CAAA,CAAA,CArBF,CADF;AANF,CAAA;;AAoCAP,aAAa,CAAbA,WAAAA,GAAAA,gBAAAA;;AAEA,IAAMO,MAAM,GAAG,uBAAA,CAAA,MAAA,CAAkB;EAC/BK,SAAS,EAAE;IACTC,YAAY,EAAE;EADL,CADoB;EAI/BC,cAAc,EAAE;IACdC,MAAM,EADQ,EAAA;IAEdC,cAAc,EAAE;EAFF,CAJe;EAQ/BC,gBAAgB,EAAE;IAChBF,MAAM,EAAE;EADQ,CARa;EAW/BG,OAAO,EAAE;IACPC,SAAS,EAAE;EADJ,CAXsB;EAc/BC,SAAS,EAAE;IACTC,eAAe,EAAEC,iBAAAA,CAAUC;EADlB;AAdoB,CAAlB,CAAf;;eAmBeC,IAAAA,kBAAAA,EAAf,aAAeA,C","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Text from '../Typography/Text';\nimport Divider from '../Divider';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\nimport { MD3Colors } from '../../styles/themes/v3/tokens';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Title to show as the header for the section.\n   */\n  title?: string;\n  /**\n   * Content of the `Drawer.Section`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component to group content inside a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/drawer-section.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [active, setActive] = React.useState('');\n *\n *   return (\n *     <Drawer.Section title=\"Some title\">\n *       <Drawer.Item\n *         label=\"First Item\"\n *         active={active === 'first'}\n *         onPress={() => setActive('first')}\n *       />\n *       <Drawer.Item\n *         label=\"Second Item\"\n *         active={active === 'second'}\n *         onPress={() => setActive('second')}\n *       />\n *     </Drawer.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerSection = ({ children, title, theme, style, ...rest }: Props) => {\n  const { isV3 } = theme;\n  const titleColor = isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n  const titleMargin = isV3 ? 28 : 16;\n  return (\n    <View style={[styles.container, style]} {...rest}>\n      {title && (\n        <View style={[styles.titleContainer, isV3 && styles.v3TitleContainer]}>\n          {title && (\n            <Text\n              variant=\"titleSmall\"\n              numberOfLines={1}\n              style={[\n                {\n                  color: titleColor,\n                  marginLeft: titleMargin,\n                  ...(isV3 ? theme.typescale.titleSmall : theme.fonts.medium),\n                },\n              ]}\n            >\n              {title}\n            </Text>\n          )}\n        </View>\n      )}\n      {children}\n      <Divider\n        {...(isV3 && { horizontalInset: true, bold: true })}\n        style={[styles.divider, isV3 && styles.v3Divider]}\n      />\n    </View>\n  );\n};\n\nDrawerSection.displayName = 'Drawer.Section';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4,\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  v3TitleContainer: {\n    height: 56,\n  },\n  divider: {\n    marginTop: 4,\n  },\n  v3Divider: {\n    backgroundColor: MD3Colors.neutralVariant50,\n  },\n});\n\nexport default withTheme(DrawerSection);\n"]},"metadata":{},"sourceType":"script"}