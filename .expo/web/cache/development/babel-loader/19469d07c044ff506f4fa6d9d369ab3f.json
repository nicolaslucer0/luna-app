{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useComponent;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar NavigationContent = function NavigationContent(_ref) {\n  var render = _ref.render,\n      children = _ref.children;\n  return render(children);\n};\n\nfunction useComponent(render) {\n  var renderRef = React.useRef(render);\n  renderRef.current = render;\n  React.useEffect(function () {\n    renderRef.current = null;\n  });\n  return React.useRef(function (_ref2) {\n    var children = _ref2.children;\n    var render = renderRef.current;\n\n    if (render === null) {\n      throw new Error('The returned component must be rendered in the same render phase as the hook.');\n    }\n\n    return React.createElement(NavigationContent, {\n      render: render\n    }, children);\n  }).current;\n}","map":{"version":3,"mappings":";;;;;AAAA;;;;;;AASA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,OAAiC;EAAA,IAA9BC,MAA8B,QAA9BA,MAA8B;EAAA,IAAtBC,QAAsB,QAAtBA,QAAsB;EACzD,OAAOD,MAAM,CAACC,QAAD,CAAb;AADF;;AAIe,SAASC,YAAT,CAAsBF,MAAtB,EAAsC;EACnD,IAAMG,SAAS,GAAGC,KAAK,CAACC,MAAND,CAA4BJ,MAA5BI,CAAlB;EAKAD,SAAS,CAACG,OAAVH,GAAoBH,MAApBG;EAEAC,KAAK,CAACG,SAANH,CAAgB,YAAM;IACpBD,SAAS,CAACG,OAAVH,GAAoB,IAApBA;EADF;EAIA,OAAOC,KAAK,CAACC,MAAND,CAAa,iBAAiD;IAAA,IAA9CH,QAA8C,SAA9CA,QAA8C;IACnE,IAAMD,MAAM,GAAGG,SAAS,CAACG,OAAzB;;IAEA,IAAIN,MAAM,KAAK,IAAf,EAAqB;MACnB,MAAM,IAAIQ,KAAJ,CACJ,+EADI,CAAN;IAGD;;IAED,OAAOJ,oBAACL,iBAAD;MAAmBC,MAAM,EAAEA;IAA3B,GAAoCC,QAApC,CAAP;EATK,GAUJK,OAVH;AAWD","names":["NavigationContent","render","children","useComponent","renderRef","React","useRef","current","useEffect","Error"],"sources":["useComponent.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Render = (children: React.ReactNode) => JSX.Element;\n\ntype Props = {\n  render: Render;\n  children: React.ReactNode;\n};\n\nconst NavigationContent = ({ render, children }: Props) => {\n  return render(children);\n};\n\nexport default function useComponent(render: Render) {\n  const renderRef = React.useRef<Render | null>(render);\n\n  // Normally refs shouldn't be mutated in render\n  // But we return a component which will be rendered\n  // So it's just for immediate consumption\n  renderRef.current = render;\n\n  React.useEffect(() => {\n    renderRef.current = null;\n  });\n\n  return React.useRef(({ children }: { children: React.ReactNode }) => {\n    const render = renderRef.current;\n\n    if (render === null) {\n      throw new Error(\n        'The returned component must be rendered in the same render phase as the hook.'\n      );\n    }\n\n    return <NavigationContent render={render}>{children}</NavigationContent>;\n  }).current;\n}\n"]},"metadata":{},"sourceType":"script"}