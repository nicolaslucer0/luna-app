{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _theming = require(\"./theming\");\n\nvar _settings = require(\"./settings\");\n\nvar _MaterialCommunityIcon = _interopRequireDefault(require(\"../components/MaterialCommunityIcon\"));\n\nvar _PortalHost = _interopRequireDefault(require(\"../components/Portal/PortalHost\"));\n\nvar _DefaultTheme = _interopRequireDefault(require(\"../styles/DefaultTheme\"));\n\nvar _DarkTheme = _interopRequireDefault(require(\"../styles/DarkTheme\"));\n\nvar _addEventListener = require(\"../utils/addEventListener\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Provider = function Provider(_ref) {\n  var props = Object.assign({}, _ref);\n  var colorSchemeName = !props.theme && (_reactNative.Appearance === null || _reactNative.Appearance === void 0 ? void 0 : _reactNative.Appearance.getColorScheme()) || 'light';\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      reduceMotionEnabled = _React$useState2[0],\n      setReduceMotionEnabled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(colorSchemeName),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      colorScheme = _React$useState4[0],\n      setColorScheme = _React$useState4[1];\n\n  var handleAppearanceChange = function handleAppearanceChange(preferences) {\n    var colorScheme = preferences.colorScheme;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(function () {\n    var subscription;\n\n    if (!props.theme) {\n      subscription = (0, _addEventListener.addEventListener)(_reactNative.AccessibilityInfo, 'reduceMotionChanged', setReduceMotionEnabled);\n    }\n\n    return function () {\n      if (!props.theme) {\n        var _subscription;\n\n        (_subscription = subscription) === null || _subscription === void 0 ? void 0 : _subscription.remove();\n      }\n    };\n  }, [props.theme]);\n  React.useEffect(function () {\n    var appearanceSubscription;\n\n    if (!props.theme) {\n      appearanceSubscription = _reactNative.Appearance === null || _reactNative.Appearance === void 0 ? void 0 : _reactNative.Appearance.addChangeListener(handleAppearanceChange);\n    }\n\n    return function () {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          _reactNative.Appearance === null || _reactNative.Appearance === void 0 ? void 0 : _reactNative.Appearance.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n\n  var getTheme = function getTheme() {\n    var providedTheme = props.theme;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      var theme = colorScheme === 'dark' ? _DarkTheme.default : _DefaultTheme.default;\n      return Object.assign({}, theme, {\n        animation: Object.assign({}, theme.animation, {\n          scale: reduceMotionEnabled ? 0 : 1\n        })\n      });\n    }\n  };\n\n  var children = props.children,\n      settings = props.settings;\n  return React.createElement(_PortalHost.default, null, React.createElement(_settings.Provider, {\n    value: settings || {\n      icon: _MaterialCommunityIcon.default\n    }\n  }, React.createElement(_theming.ThemeProvider, {\n    theme: getTheme()\n  }, children)));\n};\n\nvar _default = Provider;\nexports.default = _default;","map":{"version":3,"sources":["Provider.tsx"],"names":["Provider","props","colorSchemeName","Appearance","React","handleAppearanceChange","preferences","colorScheme","setColorScheme","subscription","addEventListener","appearanceSubscription","getTheme","theme","providedTheme","animation","scale","reduceMotionEnabled","settings","icon","MaterialCommunityIcon"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  Appearance,\n  ColorSchemeName,\n  NativeEventSubscription,\n} from 'react-native';\nimport { ThemeProvider } from './theming';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport DefaultTheme from '../styles/DefaultTheme';\nimport DarkTheme from '../styles/DarkTheme';\nimport { addEventListener } from '../utils/addEventListener';\n\ntype Props = {\n  children: React.ReactNode;\n  theme?: ReactNativePaper.Theme;\n  settings?: Settings;\n};\n\nconst Provider = ({ ...props }: Props) => {\n  const colorSchemeName =\n    (!props.theme && Appearance?.getColorScheme()) || 'light';\n\n  const [reduceMotionEnabled, setReduceMotionEnabled] =\n    React.useState<boolean>(false);\n  const [colorScheme, setColorScheme] =\n    React.useState<ColorSchemeName>(colorSchemeName);\n\n  const handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    let subscription: NativeEventSubscription | undefined;\n\n    if (!props.theme) {\n      subscription = addEventListener(\n        AccessibilityInfo,\n        'reduceMotionChanged',\n        setReduceMotionEnabled\n      );\n    }\n    return () => {\n      if (!props.theme) {\n        subscription?.remove();\n      }\n    };\n  }, [props.theme]);\n\n  React.useEffect(() => {\n    let appearanceSubscription: NativeEventSubscription | undefined;\n    if (!props.theme) {\n      appearanceSubscription = Appearance?.addChangeListener(\n        handleAppearanceChange\n      ) as NativeEventSubscription | undefined;\n    }\n    return () => {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance?.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n\n  const getTheme = () => {\n    const { theme: providedTheme } = props;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      const theme = (\n        colorScheme === 'dark' ? DarkTheme : DefaultTheme\n      ) as ReactNativePaper.Theme;\n\n      return {\n        ...theme,\n        animation: {\n          ...theme.animation,\n          scale: reduceMotionEnabled ? 0 : 1,\n        },\n      };\n    }\n  };\n\n  const { children, settings } = props;\n  return (\n    <PortalHost>\n      <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n        <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\n      </SettingsProvider>\n    </PortalHost>\n  );\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"script"}