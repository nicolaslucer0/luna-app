{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _theming = require(\"../../core/theming\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar CardActions = function CardActions(props) {\n  var _useTheme = (0, _theming.useTheme)(),\n      isV3 = _useTheme.isV3;\n\n  var justifyContent = isV3 ? 'flex-end' : 'flex-start';\n  return React.createElement(_reactNative.View, _extends({}, props, {\n    style: [styles.container, props.style, {\n      justifyContent: justifyContent\n    }]\n  }), React.Children.map(props.children, function (child, i) {\n    return React.isValidElement(child) ? React.cloneElement(child, {\n      compact: !isV3 && child.props.compact !== false,\n      mode: child.props.mode || isV3 && (i === 0 ? 'outlined' : 'contained'),\n      style: isV3 && styles.button\n    }) : child;\n  }));\n};\n\nCardActions.displayName = 'Card.Actions';\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  button: {\n    marginLeft: 8\n  }\n});\n\nvar _default = CardActions;\nexports.default = _default;","map":{"version":3,"sources":["CardActions.tsx"],"names":["CardActions","props","isV3","justifyContent","styles","compact","child","mode","i","style","button","container","flexDirection","alignItems","padding","marginLeft"],"mappings":";;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,IAAMA,WAAW,GAAIC,SAAfD,WAAeC,CAAAA,KAAD,EAAkB;EACpC,gBAAA,IAAA,iBAAA,GAAA;EAAA,IAAQC,IAAR,aAAQA,IAAR;;EACA,IAAMC,cAAc,GAAGD,IAAI,GAAA,UAAA,GAA3B,YAAA;EAEA,OACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;IAEE,KAAK,EAAE,CAACE,MAAM,CAAP,SAAA,EAAmBH,KAAK,CAAxB,KAAA,EAAgC;MAAEE,cAAAA,EAAAA;IAAF,CAAhC;EAFT,CAAA,CAAA,EAIG,KAAK,CAAL,QAAA,CAAA,GAAA,CAAmBF,KAAK,CAAxB,QAAA,EAAmC,UAAA,KAAA,EAAA,CAAA,EAAc;IAChD,OAAO,KAAK,CAAL,cAAA,CAAA,KAAA,IACH,KAAK,CAAL,YAAA,CAAA,KAAA,EAA0B;MACxBI,OAAO,EAAE,CAAA,IAAA,IAASC,KAAK,CAALA,KAAAA,CAAAA,OAAAA,KADM,KAAA;MAExBC,IAAI,EACFD,KAAK,CAALA,KAAAA,CAAAA,IAAAA,IACCJ,IAAI,KAAKM,CAAC,KAADA,CAAAA,GAAAA,UAAAA,GAJY,WAIjB,CAJiB;MAKxBC,KAAK,EAAEP,IAAI,IAAIE,MAAM,CAACM;IALE,CAA1B,CADG,GAAP,KAAA;EANN,CAKK,CAJH,CADF;AAJF,CAAA;;AAwBAV,WAAW,CAAXA,WAAAA,GAAAA,cAAAA;;AAEA,IAAMI,MAAM,GAAG,uBAAA,CAAA,MAAA,CAAkB;EAC/BO,SAAS,EAAE;IACTC,aAAa,EADJ,KAAA;IAETC,UAAU,EAFD,QAAA;IAGTC,OAAO,EAAE;EAHA,CADoB;EAM/BJ,MAAM,EAAE;IACNK,UAAU,EAAE;EADN;AANuB,CAAlB,CAAf;;eAWA,W","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport { useTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Items inside the `CardActions`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a list of actions inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/card-actions.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card, Button } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst CardActions = (props: Props) => {\n  const { isV3 } = useTheme();\n  const justifyContent = isV3 ? 'flex-end' : 'flex-start';\n\n  return (\n    <View\n      {...props}\n      style={[styles.container, props.style, { justifyContent }]}\n    >\n      {React.Children.map(props.children, (child, i) => {\n        return React.isValidElement(child)\n          ? React.cloneElement(child, {\n              compact: !isV3 && child.props.compact !== false,\n              mode:\n                child.props.mode ||\n                (isV3 && (i === 0 ? 'outlined' : 'contained')),\n              style: isV3 && styles.button,\n            })\n          : child;\n      })}\n    </View>\n  );\n};\n\nCardActions.displayName = 'Card.Actions';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  button: {\n    marginLeft: 8,\n  },\n});\n\nexport default CardActions;\n"]},"metadata":{},"sourceType":"script"}