{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.DialogTitle = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Title = _interopRequireDefault(require(\"../Typography/v2/Title\"));\n\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _excluded = [\"children\", \"theme\", \"style\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DialogTitle = function DialogTitle(_ref) {\n  var _theme$colors;\n\n  var children = _ref.children,\n      theme = _ref.theme,\n      style = _ref.style,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var isV3 = theme.isV3;\n  var TextComponent = isV3 ? _Text.default : _Title.default;\n  var textColor = isV3 ? theme.colors.onSurface : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.text;\n  return React.createElement(TextComponent, _extends({\n    variant: \"headlineSmall\",\n    accessibilityRole: \"header\",\n    style: [styles.text, isV3 && styles.v3Text, {\n      color: textColor\n    }, style]\n  }, rest), children);\n};\n\nexports.DialogTitle = DialogTitle;\nDialogTitle.displayName = 'Dialog.Title';\n\nvar styles = _reactNative.StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24\n  },\n  v3Text: {\n    marginTop: 16,\n    marginBottom: 16\n  }\n});\n\nvar _default = (0, _theming.withTheme)(DialogTitle);\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,IAAMA,WAAW,GAAG,SAAdA,WAAc,OAAgD;EAAA;;EAAA,IAA7CC,QAA6C,QAA7CA,QAA6C;EAAA,IAAnCC,KAAmC,QAAnCA,KAAmC;EAAA,IAA5BC,KAA4B,QAA5BA,KAA4B;EAAA,IAAlBC,IAAkB;EAClE,IAAQC,IAAR,GAAiBH,KAAjB,CAAQG,IAAR;EAEA,IAAMC,aAAa,GAAGD,IAAI,GAAGE,aAAH,GAAUC,cAApC;EACA,IAAMC,SAAS,GAAGJ,IAAI,GAAGH,KAAK,CAACQ,MAANR,CAAaS,SAAhB,oBAA4BT,KAAK,CAACQ,MAAlC,kDAA4BE,cAAcC,IAAhE;EAEA,OACEC,oBAACR,aAAD;IACES,OAAO,EAAC,eADV;IAEEC,iBAAiB,EAAC,QAFpB;IAGEb,KAAK,EAAE,CAACc,MAAM,CAACJ,IAAR,EAAcR,IAAI,IAAIY,MAAM,CAACC,MAA7B,EAAqC;MAAEC,KAAK,EAAEV;IAAT,CAArC,EAA2DN,KAA3D;EAHT,GAIMC,IAJN,GAMGH,QANH,CADF;AANF;;;AAkBAD,WAAW,CAACoB,WAAZpB,GAA0B,cAA1BA;;AAEA,IAAMiB,MAAM,GAAGI,wBAAWC,MAAXD,CAAkB;EAC/BR,IAAI,EAAE;IACJU,SAAS,EAAE,EADP;IAEJC,YAAY,EAAE,EAFV;IAGJC,gBAAgB,EAAE;EAHd,CADyB;EAM/BP,MAAM,EAAE;IACNK,SAAS,EAAE,EADL;IAENC,YAAY,EAAE;EAFR;AANuB,CAAlBH,CAAf;;eAYeK,wBAAU1B,WAAV0B,C","names":["DialogTitle","children","theme","style","rest","isV3","TextComponent","Text","Title","textColor","colors","onSurface","_theme$colors","text","React","variant","accessibilityRole","styles","v3Text","color","displayName","StyleSheet","create","marginTop","marginBottom","marginHorizontal","withTheme"],"sources":["DialogTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport Title from '../Typography/v2/Title';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof Title> & {\n  /**\n   * Title text for the `DialogTitle`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component to show a title in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/dialog-title.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Paragraph, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Title>This is a title</Dialog.Title>\n *         <Dialog.Content>\n *           <Paragraph>This is simple dialog</Paragraph>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogTitle = ({ children, theme, style, ...rest }: Props) => {\n  const { isV3 } = theme;\n\n  const TextComponent = isV3 ? Text : Title;\n  const textColor = isV3 ? theme.colors.onSurface : theme.colors?.text;\n\n  return (\n    <TextComponent\n      variant=\"headlineSmall\"\n      accessibilityRole=\"header\"\n      style={[styles.text, isV3 && styles.v3Text, { color: textColor }, style]}\n      {...rest}\n    >\n      {children}\n    </TextComponent>\n  );\n};\n\nDialogTitle.displayName = 'Dialog.Title';\n\nconst styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24,\n  },\n  v3Text: {\n    marginTop: 16,\n    marginBottom: 16,\n  },\n});\n\nexport default withTheme(DialogTitle);\n\n// @component-docs ignore-next-line\nexport { DialogTitle };\n"]},"metadata":{},"sourceType":"script"}