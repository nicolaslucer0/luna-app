{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = NativeStackView;\n\nvar _elements = require(\"@react-navigation/elements\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar TRANSPARENT_PRESENTATIONS = ['transparentModal', 'containedTransparentModal'];\n\nfunction NativeStackView(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors;\n  var parentHeaderBack = React.useContext(_elements.HeaderBackContext);\n  return React.createElement(_elements.SafeAreaProviderCompat, null, React.createElement(_reactNative.View, {\n    style: styles.container\n  }, state.routes.map(function (route, i) {\n    var _state$routes, _state$routes2;\n\n    var isFocused = state.index === i;\n    var previousKey = (_state$routes = state.routes[i - 1]) === null || _state$routes === void 0 ? void 0 : _state$routes.key;\n    var nextKey = (_state$routes2 = state.routes[i + 1]) === null || _state$routes2 === void 0 ? void 0 : _state$routes2.key;\n    var previousDescriptor = previousKey ? descriptors[previousKey] : undefined;\n    var nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n    var _descriptors$route$ke = descriptors[route.key],\n        options = _descriptors$route$ke.options,\n        navigation = _descriptors$route$ke.navigation,\n        render = _descriptors$route$ke.render;\n    var headerBack = previousDescriptor ? {\n      title: (0, _elements.getHeaderTitle)(previousDescriptor.options, previousDescriptor.route.name)\n    } : parentHeaderBack;\n    var canGoBack = headerBack !== undefined;\n    var header = options.header,\n        headerShown = options.headerShown,\n        headerTintColor = options.headerTintColor,\n        headerBackImageSource = options.headerBackImageSource,\n        headerLeft = options.headerLeft,\n        headerRight = options.headerRight,\n        headerTitle = options.headerTitle,\n        headerTitleAlign = options.headerTitleAlign,\n        headerTitleStyle = options.headerTitleStyle,\n        headerStyle = options.headerStyle,\n        headerShadowVisible = options.headerShadowVisible,\n        headerTransparent = options.headerTransparent,\n        headerBackground = options.headerBackground,\n        headerBackTitle = options.headerBackTitle,\n        presentation = options.presentation,\n        contentStyle = options.contentStyle;\n    var nextPresentation = nextDescriptor === null || nextDescriptor === void 0 ? void 0 : nextDescriptor.options.presentation;\n    return React.createElement(_elements.Screen, {\n      key: route.key,\n      focused: isFocused,\n      route: route,\n      navigation: navigation,\n      headerShown: headerShown,\n      headerTransparent: headerTransparent,\n      header: header !== undefined ? header({\n        back: headerBack,\n        options: options,\n        route: route,\n        navigation: navigation\n      }) : React.createElement(_elements.Header, {\n        title: (0, _elements.getHeaderTitle)(options, route.name),\n        headerTintColor: headerTintColor,\n        headerLeft: typeof headerLeft === 'function' ? function (_ref2) {\n          var tintColor = _ref2.tintColor;\n          return headerLeft({\n            tintColor: tintColor,\n            canGoBack: canGoBack,\n            label: headerBackTitle\n          });\n        } : headerLeft === undefined && canGoBack ? function (_ref3) {\n          var tintColor = _ref3.tintColor;\n          return React.createElement(_elements.HeaderBackButton, {\n            tintColor: tintColor,\n            backImage: headerBackImageSource !== undefined ? function () {\n              return React.createElement(_reactNative.Image, {\n                source: headerBackImageSource,\n                style: [styles.backImage, {\n                  tintColor: tintColor\n                }]\n              });\n            } : undefined,\n            onPress: navigation.goBack,\n            canGoBack: canGoBack\n          });\n        } : headerLeft,\n        headerRight: typeof headerRight === 'function' ? function (_ref4) {\n          var tintColor = _ref4.tintColor;\n          return headerRight({\n            tintColor: tintColor,\n            canGoBack: canGoBack\n          });\n        } : headerRight,\n        headerTitle: typeof headerTitle === 'function' ? function (_ref5) {\n          var children = _ref5.children,\n              tintColor = _ref5.tintColor;\n          return headerTitle({\n            children: children,\n            tintColor: tintColor\n          });\n        } : headerTitle,\n        headerTitleAlign: headerTitleAlign,\n        headerTitleStyle: headerTitleStyle,\n        headerTransparent: headerTransparent,\n        headerShadowVisible: headerShadowVisible,\n        headerBackground: headerBackground,\n        headerStyle: headerStyle\n      }),\n      style: [_reactNative.StyleSheet.absoluteFill, {\n        display: isFocused || nextPresentation != null && TRANSPARENT_PRESENTATIONS.includes(nextPresentation) ? 'flex' : 'none'\n      }, presentation != null && TRANSPARENT_PRESENTATIONS.includes(presentation) ? {\n        backgroundColor: 'transparent'\n      } : null]\n    }, React.createElement(_elements.HeaderBackContext.Provider, {\n      value: headerBack\n    }, React.createElement(_reactNative.View, {\n      style: [styles.contentContainer, contentStyle]\n    }, render())));\n  })));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contentContainer: {\n    flex: 1\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  }\n});","map":{"version":3,"mappings":"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","names":["TRANSPARENT_PRESENTATIONS","NativeStackView","state","descriptors","parentHeaderBack","React","useContext","HeaderBackContext","SafeAreaProviderCompat","View","style","styles","container","routes","map","route","i","isFocused","index","previousKey","_state$routes","key","nextKey","_state$routes2","previousDescriptor","undefined","nextDescriptor","options","navigation","render","headerBack","title","getHeaderTitle","name","canGoBack","header","headerShown","headerTintColor","headerBackImageSource","headerLeft","headerRight","headerTitle","headerTitleAlign","headerTitleStyle","headerStyle","headerShadowVisible","headerTransparent","headerBackground","headerBackTitle","presentation","contentStyle","nextPresentation","Screen","focused","back","Header","tintColor","label","HeaderBackButton","backImage","Image","source","onPress","goBack","children","StyleSheet","absoluteFill","display","includes","backgroundColor","Provider","value","contentContainer","create","flex","height","width","margin","resizeMode"],"sources":["NativeStackView.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  HeaderBackButton,\n  HeaderBackContext,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\n\nimport type {\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n} from '../types';\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  // This is used for the native implementation of the stack.\n  // eslint-disable-next-line react/no-unused-prop-types\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nconst TRANSPARENT_PRESENTATIONS = [\n  'transparentModal',\n  'containedTransparentModal',\n];\n\nexport default function NativeStackView({ state, descriptors }: Props) {\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n\n  return (\n    <SafeAreaProviderCompat>\n      <View style={styles.container}>\n        {state.routes.map((route, i) => {\n          const isFocused = state.index === i;\n          const previousKey = state.routes[i - 1]?.key;\n          const nextKey = state.routes[i + 1]?.key;\n          const previousDescriptor = previousKey\n            ? descriptors[previousKey]\n            : undefined;\n          const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n          const { options, navigation, render } = descriptors[route.key];\n\n          const headerBack = previousDescriptor\n            ? {\n                title: getHeaderTitle(\n                  previousDescriptor.options,\n                  previousDescriptor.route.name\n                ),\n              }\n            : parentHeaderBack;\n\n          const canGoBack = headerBack !== undefined;\n\n          const {\n            header,\n            headerShown,\n            headerTintColor,\n            headerBackImageSource,\n            headerLeft,\n            headerRight,\n            headerTitle,\n            headerTitleAlign,\n            headerTitleStyle,\n            headerStyle,\n            headerShadowVisible,\n            headerTransparent,\n            headerBackground,\n            headerBackTitle,\n            presentation,\n            contentStyle,\n          } = options;\n\n          const nextPresentation = nextDescriptor?.options.presentation;\n\n          return (\n            <Screen\n              key={route.key}\n              focused={isFocused}\n              route={route}\n              navigation={navigation}\n              headerShown={headerShown}\n              headerTransparent={headerTransparent}\n              header={\n                header !== undefined ? (\n                  header({\n                    back: headerBack,\n                    options,\n                    route,\n                    navigation,\n                  })\n                ) : (\n                  <Header\n                    title={getHeaderTitle(options, route.name)}\n                    headerTintColor={headerTintColor}\n                    headerLeft={\n                      typeof headerLeft === 'function'\n                        ? ({ tintColor }) =>\n                            headerLeft({\n                              tintColor,\n                              canGoBack,\n                              label: headerBackTitle,\n                            })\n                        : headerLeft === undefined && canGoBack\n                        ? ({ tintColor }) => (\n                            <HeaderBackButton\n                              tintColor={tintColor}\n                              backImage={\n                                headerBackImageSource !== undefined\n                                  ? () => (\n                                      <Image\n                                        source={headerBackImageSource}\n                                        style={[\n                                          styles.backImage,\n                                          { tintColor },\n                                        ]}\n                                      />\n                                    )\n                                  : undefined\n                              }\n                              onPress={navigation.goBack}\n                              canGoBack={canGoBack}\n                            />\n                          )\n                        : headerLeft\n                    }\n                    headerRight={\n                      typeof headerRight === 'function'\n                        ? ({ tintColor }) =>\n                            headerRight({ tintColor, canGoBack })\n                        : headerRight\n                    }\n                    headerTitle={\n                      typeof headerTitle === 'function'\n                        ? ({ children, tintColor }) =>\n                            headerTitle({ children, tintColor })\n                        : headerTitle\n                    }\n                    headerTitleAlign={headerTitleAlign}\n                    headerTitleStyle={headerTitleStyle}\n                    headerTransparent={headerTransparent}\n                    headerShadowVisible={headerShadowVisible}\n                    headerBackground={headerBackground}\n                    headerStyle={headerStyle}\n                  />\n                )\n              }\n              style={[\n                StyleSheet.absoluteFill,\n                {\n                  display:\n                    isFocused ||\n                    (nextPresentation != null &&\n                      TRANSPARENT_PRESENTATIONS.includes(nextPresentation))\n                      ? 'flex'\n                      : 'none',\n                },\n                presentation != null &&\n                TRANSPARENT_PRESENTATIONS.includes(presentation)\n                  ? { backgroundColor: 'transparent' }\n                  : null,\n              ]}\n            >\n              <HeaderBackContext.Provider value={headerBack}>\n                <View style={[styles.contentContainer, contentStyle]}>\n                  {render()}\n                </View>\n              </HeaderBackContext.Provider>\n            </Screen>\n          );\n        })}\n      </View>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}