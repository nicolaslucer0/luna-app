{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = NativeStackView;\n\nvar _elements = require(\"@react-navigation/elements\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar TRANSPARENT_PRESENTATIONS = ['transparentModal', 'containedTransparentModal'];\n\nfunction NativeStackView(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors;\n  var parentHeaderBack = React.useContext(_elements.HeaderBackContext);\n  return React.createElement(_elements.SafeAreaProviderCompat, null, React.createElement(_reactNative.View, {\n    style: styles.container\n  }, state.routes.map(function (route, i) {\n    var _state$routes, _state$routes2;\n\n    var isFocused = state.index === i;\n    var previousKey = (_state$routes = state.routes[i - 1]) === null || _state$routes === void 0 ? void 0 : _state$routes.key;\n    var nextKey = (_state$routes2 = state.routes[i + 1]) === null || _state$routes2 === void 0 ? void 0 : _state$routes2.key;\n    var previousDescriptor = previousKey ? descriptors[previousKey] : undefined;\n    var nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n    var _descriptors$route$ke = descriptors[route.key],\n        options = _descriptors$route$ke.options,\n        navigation = _descriptors$route$ke.navigation,\n        render = _descriptors$route$ke.render;\n    var headerBack = previousDescriptor ? {\n      title: (0, _elements.getHeaderTitle)(previousDescriptor.options, previousDescriptor.route.name)\n    } : parentHeaderBack;\n    var canGoBack = headerBack !== undefined;\n    var header = options.header,\n        headerShown = options.headerShown,\n        headerTintColor = options.headerTintColor,\n        headerBackImageSource = options.headerBackImageSource,\n        headerLeft = options.headerLeft,\n        headerRight = options.headerRight,\n        headerTitle = options.headerTitle,\n        headerTitleAlign = options.headerTitleAlign,\n        headerTitleStyle = options.headerTitleStyle,\n        headerStyle = options.headerStyle,\n        headerShadowVisible = options.headerShadowVisible,\n        headerTransparent = options.headerTransparent,\n        headerBackground = options.headerBackground,\n        headerBackTitle = options.headerBackTitle,\n        presentation = options.presentation,\n        contentStyle = options.contentStyle;\n    var nextPresentation = nextDescriptor === null || nextDescriptor === void 0 ? void 0 : nextDescriptor.options.presentation;\n    return React.createElement(_elements.Screen, {\n      key: route.key,\n      focused: isFocused,\n      route: route,\n      navigation: navigation,\n      headerShown: headerShown,\n      headerTransparent: headerTransparent,\n      header: header !== undefined ? header({\n        back: headerBack,\n        options: options,\n        route: route,\n        navigation: navigation\n      }) : React.createElement(_elements.Header, {\n        title: (0, _elements.getHeaderTitle)(options, route.name),\n        headerTintColor: headerTintColor,\n        headerLeft: typeof headerLeft === 'function' ? function (_ref2) {\n          var tintColor = _ref2.tintColor;\n          return headerLeft({\n            tintColor: tintColor,\n            canGoBack: canGoBack,\n            label: headerBackTitle\n          });\n        } : headerLeft === undefined && canGoBack ? function (_ref3) {\n          var tintColor = _ref3.tintColor;\n          return React.createElement(_elements.HeaderBackButton, {\n            tintColor: tintColor,\n            backImage: headerBackImageSource !== undefined ? function () {\n              return React.createElement(_reactNative.Image, {\n                source: headerBackImageSource,\n                style: [styles.backImage, {\n                  tintColor: tintColor\n                }]\n              });\n            } : undefined,\n            onPress: navigation.goBack,\n            canGoBack: canGoBack\n          });\n        } : headerLeft,\n        headerRight: typeof headerRight === 'function' ? function (_ref4) {\n          var tintColor = _ref4.tintColor;\n          return headerRight({\n            tintColor: tintColor,\n            canGoBack: canGoBack\n          });\n        } : headerRight,\n        headerTitle: typeof headerTitle === 'function' ? function (_ref5) {\n          var children = _ref5.children,\n              tintColor = _ref5.tintColor;\n          return headerTitle({\n            children: children,\n            tintColor: tintColor\n          });\n        } : headerTitle,\n        headerTitleAlign: headerTitleAlign,\n        headerTitleStyle: headerTitleStyle,\n        headerTransparent: headerTransparent,\n        headerShadowVisible: headerShadowVisible,\n        headerBackground: headerBackground,\n        headerStyle: headerStyle\n      }),\n      style: [_reactNative.StyleSheet.absoluteFill, {\n        display: isFocused || nextPresentation != null && TRANSPARENT_PRESENTATIONS.includes(nextPresentation) ? 'flex' : 'none'\n      }, presentation != null && TRANSPARENT_PRESENTATIONS.includes(presentation) ? {\n        backgroundColor: 'transparent'\n      } : null]\n    }, React.createElement(_elements.HeaderBackContext.Provider, {\n      value: headerBack\n    }, React.createElement(_reactNative.View, {\n      style: [styles.contentContainer, contentStyle]\n    }, render())));\n  })));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contentContainer: {\n    flex: 1\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  }\n});","map":{"version":3,"sources":["NativeStackView.tsx"],"names":["TRANSPARENT_PRESENTATIONS","descriptors","parentHeaderBack","React","styles","container","isFocused","state","previousKey","i","nextKey","previousDescriptor","nextDescriptor","render","route","headerBack","title","getHeaderTitle","canGoBack","contentStyle","nextPresentation","header","back","options","navigation","tintColor","headerLeft","label","headerBackTitle","headerRight","headerTitle","children","headerStyle","StyleSheet","display","backgroundColor","flex","contentContainer","backImage","height","width","margin","resizeMode"],"mappings":"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","sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  HeaderBackButton,\n  HeaderBackContext,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\n\nimport type {\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n} from '../types';\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  // This is used for the native implementation of the stack.\n  // eslint-disable-next-line react/no-unused-prop-types\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nconst TRANSPARENT_PRESENTATIONS = [\n  'transparentModal',\n  'containedTransparentModal',\n];\n\nexport default function NativeStackView({ state, descriptors }: Props) {\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n\n  return (\n    <SafeAreaProviderCompat>\n      <View style={styles.container}>\n        {state.routes.map((route, i) => {\n          const isFocused = state.index === i;\n          const previousKey = state.routes[i - 1]?.key;\n          const nextKey = state.routes[i + 1]?.key;\n          const previousDescriptor = previousKey\n            ? descriptors[previousKey]\n            : undefined;\n          const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n          const { options, navigation, render } = descriptors[route.key];\n\n          const headerBack = previousDescriptor\n            ? {\n                title: getHeaderTitle(\n                  previousDescriptor.options,\n                  previousDescriptor.route.name\n                ),\n              }\n            : parentHeaderBack;\n\n          const canGoBack = headerBack !== undefined;\n\n          const {\n            header,\n            headerShown,\n            headerTintColor,\n            headerBackImageSource,\n            headerLeft,\n            headerRight,\n            headerTitle,\n            headerTitleAlign,\n            headerTitleStyle,\n            headerStyle,\n            headerShadowVisible,\n            headerTransparent,\n            headerBackground,\n            headerBackTitle,\n            presentation,\n            contentStyle,\n          } = options;\n\n          const nextPresentation = nextDescriptor?.options.presentation;\n\n          return (\n            <Screen\n              key={route.key}\n              focused={isFocused}\n              route={route}\n              navigation={navigation}\n              headerShown={headerShown}\n              headerTransparent={headerTransparent}\n              header={\n                header !== undefined ? (\n                  header({\n                    back: headerBack,\n                    options,\n                    route,\n                    navigation,\n                  })\n                ) : (\n                  <Header\n                    title={getHeaderTitle(options, route.name)}\n                    headerTintColor={headerTintColor}\n                    headerLeft={\n                      typeof headerLeft === 'function'\n                        ? ({ tintColor }) =>\n                            headerLeft({\n                              tintColor,\n                              canGoBack,\n                              label: headerBackTitle,\n                            })\n                        : headerLeft === undefined && canGoBack\n                        ? ({ tintColor }) => (\n                            <HeaderBackButton\n                              tintColor={tintColor}\n                              backImage={\n                                headerBackImageSource !== undefined\n                                  ? () => (\n                                      <Image\n                                        source={headerBackImageSource}\n                                        style={[\n                                          styles.backImage,\n                                          { tintColor },\n                                        ]}\n                                      />\n                                    )\n                                  : undefined\n                              }\n                              onPress={navigation.goBack}\n                              canGoBack={canGoBack}\n                            />\n                          )\n                        : headerLeft\n                    }\n                    headerRight={\n                      typeof headerRight === 'function'\n                        ? ({ tintColor }) =>\n                            headerRight({ tintColor, canGoBack })\n                        : headerRight\n                    }\n                    headerTitle={\n                      typeof headerTitle === 'function'\n                        ? ({ children, tintColor }) =>\n                            headerTitle({ children, tintColor })\n                        : headerTitle\n                    }\n                    headerTitleAlign={headerTitleAlign}\n                    headerTitleStyle={headerTitleStyle}\n                    headerTransparent={headerTransparent}\n                    headerShadowVisible={headerShadowVisible}\n                    headerBackground={headerBackground}\n                    headerStyle={headerStyle}\n                  />\n                )\n              }\n              style={[\n                StyleSheet.absoluteFill,\n                {\n                  display:\n                    isFocused ||\n                    (nextPresentation != null &&\n                      TRANSPARENT_PRESENTATIONS.includes(nextPresentation))\n                      ? 'flex'\n                      : 'none',\n                },\n                presentation != null &&\n                TRANSPARENT_PRESENTATIONS.includes(presentation)\n                  ? { backgroundColor: 'transparent' }\n                  : null,\n              ]}\n            >\n              <HeaderBackContext.Provider value={headerBack}>\n                <View style={[styles.contentContainer, contentStyle]}>\n                  {render()}\n                </View>\n              </HeaderBackContext.Provider>\n            </Screen>\n          );\n        })}\n      </View>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}