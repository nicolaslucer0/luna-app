{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _theming = require(\"../core/theming\");\n\nvar _excluded = [\"animating\", \"color\", \"hidesWhenStopped\", \"size\", \"style\", \"theme\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DURATION = 2400;\n\nvar ActivityIndicator = function ActivityIndicator(_ref) {\n  var _ref$animating = _ref.animating,\n      animating = _ref$animating === void 0 ? true : _ref$animating,\n      indicatorColor = _ref.color,\n      _ref$hidesWhenStopped = _ref.hidesWhenStopped,\n      hidesWhenStopped = _ref$hidesWhenStopped === void 0 ? true : _ref$hidesWhenStopped,\n      _ref$size = _ref.size,\n      indicatorSize = _ref$size === void 0 ? 'small' : _ref$size,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(0)),\n      timer = _React$useRef.current;\n\n  var _React$useRef2 = React.useRef(new _reactNative.Animated.Value(!animating && hidesWhenStopped ? 0 : 1)),\n      fade = _React$useRef2.current;\n\n  var rotation = React.useRef(undefined);\n  var scale = theme.animation.scale;\n  var startRotation = React.useCallback(function () {\n    _reactNative.Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true\n    }).start();\n\n    if (rotation.current) {\n      timer.setValue(0);\n\n      _reactNative.Animated.loop(rotation.current).start();\n    }\n  }, [scale, fade, timer]);\n\n  var stopRotation = function stopRotation() {\n    if (rotation.current) {\n      rotation.current.stop();\n    }\n  };\n\n  React.useEffect(function () {\n    if (rotation.current === undefined) {\n      rotation.current = _reactNative.Animated.timing(timer, {\n        duration: DURATION,\n        easing: _reactNative.Easing.linear,\n        useNativeDriver: _reactNative.Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false\n      });\n    }\n\n    if (animating) {\n      startRotation();\n    } else if (hidesWhenStopped) {\n      _reactNative.Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start(stopRotation);\n    } else {\n      stopRotation();\n    }\n  }, [animating, fade, hidesWhenStopped, startRotation, scale, timer]);\n  var color = indicatorColor || theme.colors.primary;\n  var size = typeof indicatorSize === 'string' ? indicatorSize === 'small' ? 24 : 48 : indicatorSize ? indicatorSize : 24;\n  var frames = 60 * DURATION / 1000;\n\n  var easing = _reactNative.Easing.bezier(0.4, 0.0, 0.7, 1.0);\n\n  var containerStyle = {\n    width: size,\n    height: size / 2,\n    overflow: 'hidden'\n  };\n  return React.createElement(_reactNative.View, _extends({\n    style: [styles.container, style]\n  }, rest, {\n    accessible: true,\n    accessibilityRole: \"progressbar\",\n    accessibilityState: {\n      busy: animating\n    }\n  }), React.createElement(_reactNative.Animated.View, {\n    style: [{\n      width: size,\n      height: size,\n      opacity: fade\n    }],\n    collapsable: false\n  }, [0, 1].map(function (index) {\n    var inputRange = Array.from(new Array(frames), function (_, frameIndex) {\n      return frameIndex / (frames - 1);\n    });\n    var outputRange = Array.from(new Array(frames), function (_, frameIndex) {\n      var progress = 2 * frameIndex / (frames - 1);\n      var rotation = index ? +(360 - 15) : -(180 - 15);\n\n      if (progress > 1.0) {\n        progress = 2.0 - progress;\n      }\n\n      var direction = index ? -1 : +1;\n      return direction * (180 - 30) * easing(progress) + rotation + \"deg\";\n    });\n    var layerStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        rotate: timer.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0 + 30 + 15 + \"deg\", 2 * 360 + 30 + 15 + \"deg\"]\n        })\n      }]\n    };\n    var viewportStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        translateY: index ? -size / 2 : 0\n      }, {\n        rotate: timer.interpolate({\n          inputRange: inputRange,\n          outputRange: outputRange\n        })\n      }]\n    };\n    var offsetStyle = index ? {\n      top: size / 2\n    } : null;\n    var lineStyle = {\n      width: size,\n      height: size,\n      borderColor: color,\n      borderWidth: size / 10,\n      borderRadius: size / 2\n    };\n    return React.createElement(_reactNative.Animated.View, {\n      key: index,\n      style: [styles.layer]\n    }, React.createElement(_reactNative.Animated.View, {\n      style: layerStyle\n    }, React.createElement(_reactNative.Animated.View, {\n      style: [containerStyle, offsetStyle],\n      collapsable: false\n    }, React.createElement(_reactNative.Animated.View, {\n      style: viewportStyle\n    }, React.createElement(_reactNative.Animated.View, {\n      style: containerStyle,\n      collapsable: false\n    }, React.createElement(_reactNative.Animated.View, {\n      style: lineStyle\n    }))))));\n  })));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  layer: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n    justifyContent: 'center',\n    alignItems: 'center'\n  })\n});\n\nvar _default = (0, _theming.withTheme)(ActivityIndicator);\n\nexports.default = _default;","map":{"version":3,"sources":["ActivityIndicator.tsx"],"names":["DURATION","ActivityIndicator","animating","color","hidesWhenStopped","size","indicatorSize","rest","current","timer","React","Animated","fade","rotation","animation","scale","startRotation","duration","toValue","isInteraction","useNativeDriver","stopRotation","easing","Easing","Platform","indicatorColor","theme","frames","containerStyle","width","height","overflow","styles","busy","opacity","index","inputRange","Array","frameIndex","outputRange","progress","direction","layerStyle","transform","rotate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","container","justifyContent","alignItems","layer","StyleSheet","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { withTheme } from '../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Whether to show the indicator or hide it.\n   */\n  animating?: boolean;\n  /**\n   * The color of the spinner.\n   */\n  color?: string;\n  /**\n   * Size of the indicator.\n   */\n  size?: 'small' | 'large' | number;\n  /**\n   * Whether the indicator should hide when not animating.\n   */\n  hidesWhenStopped?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst DURATION = 2400;\n\n/**\n * Activity indicator is used to present progress of some activity in the app.\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ActivityIndicator, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ActivityIndicator animating={true} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ActivityIndicator = ({\n  animating = true,\n  color: indicatorColor,\n  hidesWhenStopped = true,\n  size: indicatorSize = 'small',\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(\n    new Animated.Value(!animating && hidesWhenStopped ? 0 : 1)\n  );\n\n  const rotation = React.useRef<Animated.CompositeAnimation | undefined>(\n    undefined\n  );\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  const startRotation = React.useCallback(() => {\n    // Show indicator\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true,\n    }).start();\n\n    // Circular animation in loop\n    if (rotation.current) {\n      timer.setValue(0);\n      // $FlowFixMe\n      Animated.loop(rotation.current).start();\n    }\n  }, [scale, fade, timer]);\n\n  const stopRotation = () => {\n    if (rotation.current) {\n      rotation.current.stop();\n    }\n  };\n\n  React.useEffect(() => {\n    if (rotation.current === undefined) {\n      // Circular animation in loop\n      rotation.current = Animated.timing(timer, {\n        duration: DURATION,\n        easing: Easing.linear,\n        // Animated.loop does not work if useNativeDriver is true on web\n        useNativeDriver: Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false,\n      });\n    }\n\n    if (animating) {\n      startRotation();\n    } else if (hidesWhenStopped) {\n      // Hide indicator first and then stop rotation\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start(stopRotation);\n    } else {\n      stopRotation();\n    }\n  }, [animating, fade, hidesWhenStopped, startRotation, scale, timer]);\n\n  const color = indicatorColor || theme.colors.primary;\n  const size =\n    typeof indicatorSize === 'string'\n      ? indicatorSize === 'small'\n        ? 24\n        : 48\n      : indicatorSize\n      ? indicatorSize\n      : 24;\n\n  const frames = (60 * DURATION) / 1000;\n  const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n  const containerStyle = {\n    width: size,\n    height: size / 2,\n    overflow: 'hidden' as const,\n  };\n\n  return (\n    <View\n      style={[styles.container, style]}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityState={{ busy: animating }}\n    >\n      <Animated.View\n        style={[{ width: size, height: size, opacity: fade }]}\n        collapsable={false}\n      >\n        {[0, 1].map((index) => {\n          // Thanks to https://github.com/n4kz/react-native-indicators for the great work\n          const inputRange = Array.from(\n            new Array(frames),\n            (_, frameIndex) => frameIndex / (frames - 1)\n          );\n          const outputRange = Array.from(new Array(frames), (_, frameIndex) => {\n            let progress = (2 * frameIndex) / (frames - 1);\n            const rotation = index ? +(360 - 15) : -(180 - 15);\n\n            if (progress > 1.0) {\n              progress = 2.0 - progress;\n            }\n\n            const direction = index ? -1 : +1;\n\n            return `${direction * (180 - 30) * easing(progress) + rotation}deg`;\n          });\n\n          const layerStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                rotate: timer.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [`${0 + 30 + 15}deg`, `${2 * 360 + 30 + 15}deg`],\n                }),\n              },\n            ],\n          };\n\n          const viewportStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                translateY: index ? -size / 2 : 0,\n              },\n              {\n                rotate: timer.interpolate({ inputRange, outputRange }),\n              },\n            ],\n          };\n\n          const offsetStyle = index ? { top: size / 2 } : null;\n\n          const lineStyle = {\n            width: size,\n            height: size,\n            borderColor: color,\n            borderWidth: size / 10,\n            borderRadius: size / 2,\n          };\n\n          return (\n            <Animated.View key={index} style={[styles.layer]}>\n              <Animated.View style={layerStyle}>\n                <Animated.View\n                  style={[containerStyle, offsetStyle]}\n                  collapsable={false}\n                >\n                  <Animated.View style={viewportStyle}>\n                    <Animated.View style={containerStyle} collapsable={false}>\n                      <Animated.View style={lineStyle} />\n                    </Animated.View>\n                  </Animated.View>\n                </Animated.View>\n              </Animated.View>\n            </Animated.View>\n          );\n        })}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  layer: {\n    ...StyleSheet.absoluteFillObject,\n\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(ActivityIndicator);\n"]},"metadata":{},"sourceType":"script"}