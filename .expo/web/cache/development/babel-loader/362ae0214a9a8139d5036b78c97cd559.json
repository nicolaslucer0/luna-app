{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MD3LightTheme = void 0;\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _tokens = require(\"./tokens\");\n\nvar _tokens$md$ref = _tokens.tokens.md.ref,\n    palette = _tokens$md$ref.palette,\n    opacity = _tokens$md$ref.opacity;\nvar MD3LightTheme = {\n  dark: false,\n  roundness: 4,\n  version: 3,\n  isV3: true,\n  colors: {\n    primary: palette.primary40,\n    primaryContainer: palette.primary90,\n    secondary: palette.secondary40,\n    secondaryContainer: palette.secondary90,\n    tertiary: palette.tertiary40,\n    tertiaryContainer: palette.tertiary90,\n    surface: palette.neutral99,\n    surfaceVariant: palette.neutralVariant90,\n    surfaceDisabled: (0, _color.default)(palette.neutral10).alpha(opacity.level2).rgb().string(),\n    background: palette.neutral99,\n    error: palette.error40,\n    errorContainer: palette.error90,\n    onPrimary: palette.primary100,\n    onPrimaryContainer: palette.primary10,\n    onSecondary: palette.secondary100,\n    onSecondaryContainer: palette.secondary10,\n    onTertiary: palette.tertiary100,\n    onTertiaryContainer: palette.tertiary10,\n    onSurface: palette.neutral10,\n    onSurfaceVariant: palette.neutralVariant30,\n    onSurfaceDisabled: (0, _color.default)(palette.neutral10).alpha(opacity.level4).rgb().string(),\n    onError: palette.error100,\n    onErrorContainer: palette.error10,\n    onBackground: palette.neutral10,\n    outline: palette.neutralVariant50,\n    inverseSurface: palette.neutral20,\n    inverseOnSurface: palette.neutral95,\n    inversePrimary: palette.primary80,\n    backdrop: (0, _color.default)(_tokens.MD3Colors.neutralVariant20).alpha(0.4).rgb().string(),\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(247, 243, 249)',\n      level2: 'rgb(243, 237, 246)',\n      level3: 'rgb(238, 232, 244)',\n      level4: 'rgb(236, 230, 243)',\n      level5: 'rgb(233, 227, 241)'\n    }\n  },\n  typescale: _tokens.typescale,\n  animation: {\n    scale: 1.0\n  }\n};\nexports.MD3LightTheme = MD3LightTheme;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;;AAEA,qBAA6BA,eAAOC,EAAPD,CAAUE,GAAvC;AAAA,IAAQC,OAAR,kBAAQA,OAAR;AAAA,IAAiBC,OAAjB,kBAAiBA,OAAjB;AAEO,IAAMC,aAAuB,GAAG;EACrCC,IAAI,EAAE,KAD+B;EAErCC,SAAS,EAAE,CAF0B;EAGrCC,OAAO,EAAE,CAH4B;EAIrCC,IAAI,EAAE,IAJ+B;EAKrCC,MAAM,EAAE;IACNC,OAAO,EAAER,OAAO,CAACS,SADX;IAENC,gBAAgB,EAAEV,OAAO,CAACW,SAFpB;IAGNC,SAAS,EAAEZ,OAAO,CAACa,WAHb;IAINC,kBAAkB,EAAEd,OAAO,CAACe,WAJtB;IAKNC,QAAQ,EAAEhB,OAAO,CAACiB,UALZ;IAMNC,iBAAiB,EAAElB,OAAO,CAACmB,UANrB;IAONC,OAAO,EAAEpB,OAAO,CAACqB,SAPX;IAQNC,cAAc,EAAEtB,OAAO,CAACuB,gBARlB;IASNC,eAAe,EAAEC,oBAAMzB,OAAO,CAAC0B,SAAdD,EACdE,KADcF,CACRxB,OAAO,CAAC2B,MADAH,EAEdI,GAFcJ,GAGdK,MAHcL,EATX;IAaNM,UAAU,EAAE/B,OAAO,CAACqB,SAbd;IAcNW,KAAK,EAAEhC,OAAO,CAACiC,OAdT;IAeNC,cAAc,EAAElC,OAAO,CAACmC,OAflB;IAgBNC,SAAS,EAAEpC,OAAO,CAACqC,UAhBb;IAiBNC,kBAAkB,EAAEtC,OAAO,CAACuC,SAjBtB;IAkBNC,WAAW,EAAExC,OAAO,CAACyC,YAlBf;IAmBNC,oBAAoB,EAAE1C,OAAO,CAAC2C,WAnBxB;IAoBNC,UAAU,EAAE5C,OAAO,CAAC6C,WApBd;IAqBNC,mBAAmB,EAAE9C,OAAO,CAAC+C,UArBvB;IAsBNC,SAAS,EAAEhD,OAAO,CAAC0B,SAtBb;IAuBNuB,gBAAgB,EAAEjD,OAAO,CAACkD,gBAvBpB;IAwBNC,iBAAiB,EAAE1B,oBAAMzB,OAAO,CAAC0B,SAAdD,EAChBE,KADgBF,CACVxB,OAAO,CAACmD,MADE3B,EAEhBI,GAFgBJ,GAGhBK,MAHgBL,EAxBb;IA4BN4B,OAAO,EAAErD,OAAO,CAACsD,QA5BX;IA6BNC,gBAAgB,EAAEvD,OAAO,CAACwD,OA7BpB;IA8BNC,YAAY,EAAEzD,OAAO,CAAC0B,SA9BhB;IA+BNgC,OAAO,EAAE1D,OAAO,CAAC2D,gBA/BX;IAgCNC,cAAc,EAAE5D,OAAO,CAAC6D,SAhClB;IAiCNC,gBAAgB,EAAE9D,OAAO,CAAC+D,SAjCpB;IAkCNC,cAAc,EAAEhE,OAAO,CAACiE,SAlClB;IAmCNC,QAAQ,EAAEzC,oBAAM0C,kBAAUC,gBAAhB3C,EAAkCE,KAAlCF,CAAwC,GAAxCA,EAA6CI,GAA7CJ,GAAmDK,MAAnDL,EAnCJ;IAoCN4C,SAAS,EAAE;MACTC,MAAM,EAAE,aADC;MAKTC,MAAM,EAAE,oBALC;MAMT3C,MAAM,EAAE,oBANC;MAOT4C,MAAM,EAAE,oBAPC;MAQTpB,MAAM,EAAE,oBARC;MASTqB,MAAM,EAAE;IATC;EApCL,CAL6B;EAqDrCC,SArDqC,EAqDrCA,iBArDqC;EAsDrCC,SAAS,EAAE;IACTC,KAAK,EAAE;EADE;AAtD0B,CAAhC","names":["tokens","md","ref","palette","opacity","MD3LightTheme","dark","roundness","version","isV3","colors","primary","primary40","primaryContainer","primary90","secondary","secondary40","secondaryContainer","secondary90","tertiary","tertiary40","tertiaryContainer","tertiary90","surface","neutral99","surfaceVariant","neutralVariant90","surfaceDisabled","color","neutral10","alpha","level2","rgb","string","background","error","error40","errorContainer","error90","onPrimary","primary100","onPrimaryContainer","primary10","onSecondary","secondary100","onSecondaryContainer","secondary10","onTertiary","tertiary100","onTertiaryContainer","tertiary10","onSurface","onSurfaceVariant","neutralVariant30","onSurfaceDisabled","level4","onError","error100","onErrorContainer","error10","onBackground","outline","neutralVariant50","inverseSurface","neutral20","inverseOnSurface","neutral95","inversePrimary","primary80","backdrop","MD3Colors","neutralVariant20","elevation","level0","level1","level3","level5","typescale","animation","scale"],"sources":["LightTheme.tsx"],"sourcesContent":["import color from 'color';\nimport type { MD3Theme } from '../../../types';\nimport { MD3Colors, tokens, typescale } from './tokens';\n\nconst { palette, opacity } = tokens.md.ref;\n\nexport const MD3LightTheme: MD3Theme = {\n  dark: false,\n  roundness: 4,\n  version: 3,\n  isV3: true,\n  colors: {\n    primary: palette.primary40,\n    primaryContainer: palette.primary90,\n    secondary: palette.secondary40,\n    secondaryContainer: palette.secondary90,\n    tertiary: palette.tertiary40,\n    tertiaryContainer: palette.tertiary90,\n    surface: palette.neutral99,\n    surfaceVariant: palette.neutralVariant90,\n    surfaceDisabled: color(palette.neutral10)\n      .alpha(opacity.level2)\n      .rgb()\n      .string(),\n    background: palette.neutral99,\n    error: palette.error40,\n    errorContainer: palette.error90,\n    onPrimary: palette.primary100,\n    onPrimaryContainer: palette.primary10,\n    onSecondary: palette.secondary100,\n    onSecondaryContainer: palette.secondary10,\n    onTertiary: palette.tertiary100,\n    onTertiaryContainer: palette.tertiary10,\n    onSurface: palette.neutral10,\n    onSurfaceVariant: palette.neutralVariant30,\n    onSurfaceDisabled: color(palette.neutral10)\n      .alpha(opacity.level4)\n      .rgb()\n      .string(),\n    onError: palette.error100,\n    onErrorContainer: palette.error10,\n    onBackground: palette.neutral10,\n    outline: palette.neutralVariant50,\n    inverseSurface: palette.neutral20,\n    inverseOnSurface: palette.neutral95,\n    inversePrimary: palette.primary80,\n    backdrop: color(MD3Colors.neutralVariant20).alpha(0.4).rgb().string(),\n    elevation: {\n      level0: 'transparent',\n      // Note: Color values with transparency cause RN to transfer shadows to children nodes\n      // instead of View component in Surface. Providing solid background fixes the issue.\n      // Opaque color values generated with `palette.primary99` used as background\n      level1: 'rgb(247, 243, 249)', // palette.primary40, alpha 0.05\n      level2: 'rgb(243, 237, 246)', // palette.primary40, alpha 0.08\n      level3: 'rgb(238, 232, 244)', // palette.primary40, alpha 0.11\n      level4: 'rgb(236, 230, 243)', // palette.primary40, alpha 0.12\n      level5: 'rgb(233, 227, 241)', // palette.primary40, alpha 0.14\n    },\n  },\n  typescale,\n  animation: {\n    scale: 1.0,\n  },\n};\n"]},"metadata":{},"sourceType":"script"}