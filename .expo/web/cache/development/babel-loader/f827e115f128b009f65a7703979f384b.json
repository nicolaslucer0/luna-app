{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MD3DarkTheme = void 0;\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _LightTheme = require(\"./LightTheme\");\n\nvar _tokens = require(\"./tokens\");\n\nvar _tokens$md$ref = _tokens.tokens.md.ref,\n    palette = _tokens$md$ref.palette,\n    opacity = _tokens$md$ref.opacity;\nvar MD3DarkTheme = Object.assign({}, _LightTheme.MD3LightTheme, {\n  dark: true,\n  mode: 'adaptive',\n  version: 3,\n  isV3: true,\n  colors: {\n    primary: palette.primary80,\n    primaryContainer: palette.primary30,\n    secondary: palette.secondary80,\n    secondaryContainer: palette.secondary30,\n    tertiary: palette.tertiary80,\n    tertiaryContainer: palette.tertiary30,\n    surface: palette.neutral10,\n    surfaceVariant: palette.neutralVariant30,\n    surfaceDisabled: (0, _color.default)(palette.neutral90).alpha(opacity.level2).rgb().string(),\n    background: palette.neutral10,\n    error: palette.error80,\n    errorContainer: palette.error30,\n    onPrimary: palette.primary20,\n    onPrimaryContainer: palette.primary90,\n    onSecondary: palette.secondary20,\n    onSecondaryContainer: palette.secondary90,\n    onTertiary: palette.tertiary20,\n    onTertiaryContainer: palette.tertiary90,\n    onSurface: palette.neutral90,\n    onSurfaceVariant: palette.neutralVariant80,\n    onSurfaceDisabled: (0, _color.default)(palette.neutral90).alpha(opacity.level4).rgb().string(),\n    onError: palette.error20,\n    onErrorContainer: palette.error80,\n    onBackground: palette.neutral90,\n    outline: palette.neutralVariant60,\n    inverseSurface: palette.neutral90,\n    inverseOnSurface: palette.neutral20,\n    inversePrimary: palette.primary40,\n    backdrop: (0, _color.default)(_tokens.MD3Colors.neutralVariant20).alpha(0.4).rgb().string(),\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(37, 35, 42)',\n      level2: 'rgb(44, 40, 49)',\n      level3: 'rgb(49, 44, 56)',\n      level4: 'rgb(51, 46, 58)',\n      level5: 'rgb(52, 49, 63)'\n    }\n  }\n});\nexports.MD3DarkTheme = MD3DarkTheme;","map":{"version":3,"sources":["DarkTheme.tsx"],"names":["opacity","tokens","MD3DarkTheme","dark","mode","version","isV3","colors","primary","palette","primaryContainer","secondary","secondaryContainer","tertiary","tertiaryContainer","surface","surfaceVariant","surfaceDisabled","color","background","error","errorContainer","onPrimary","onPrimaryContainer","onSecondary","onSecondaryContainer","onTertiary","onTertiaryContainer","onSurface","onSurfaceVariant","onSurfaceDisabled","onError","onErrorContainer","onBackground","outline","inverseSurface","inverseOnSurface","inversePrimary","backdrop","MD3Colors","elevation","level0","level1","level2","level3","level4","level5"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AAEA,qBAA6BC,cAAAA,CAAAA,EAAAA,CAA7B,GAAA;AAAA,IAAM,OAAN,kBAAM,OAAN;AAAA,IAAiBD,OAAjB,kBAAiBA,OAAjB;AAEO,IAAME,YAAsB,qBAAG,yBAAH;EAEjCC,IAAI,EAFgC,IAAH;EAGjCC,IAAI,EAHgC,UAAH;EAIjCC,OAAO,EAJ6B,CAAH;EAKjCC,IAAI,EALgC,IAAH;EAMjCC,MAAM,EAAE;IACNC,OAAO,EAAEC,OAAO,CADV,SAAA;IAENC,gBAAgB,EAAED,OAAO,CAFnB,SAAA;IAGNE,SAAS,EAAEF,OAAO,CAHZ,WAAA;IAING,kBAAkB,EAAEH,OAAO,CAJrB,WAAA;IAKNI,QAAQ,EAAEJ,OAAO,CALX,UAAA;IAMNK,iBAAiB,EAAEL,OAAO,CANpB,UAAA;IAONM,OAAO,EAAEN,OAAO,CAPV,SAAA;IAQNO,cAAc,EAAEP,OAAO,CARjB,gBAAA;IASNQ,eAAe,EAAEC,IAAAA,cAAAA,EAAMT,OAAO,CAAbS,SAAAA,EAAAA,KAAAA,CACRlB,OAAO,CADCkB,MAAAA,EAAAA,GAAAA,GATX,MASWA,EATX;IAaNC,UAAU,EAAEV,OAAO,CAbb,SAAA;IAcNW,KAAK,EAAEX,OAAO,CAdR,OAAA;IAeNY,cAAc,EAAEZ,OAAO,CAfjB,OAAA;IAgBNa,SAAS,EAAEb,OAAO,CAhBZ,SAAA;IAiBNc,kBAAkB,EAAEd,OAAO,CAjBrB,SAAA;IAkBNe,WAAW,EAAEf,OAAO,CAlBd,WAAA;IAmBNgB,oBAAoB,EAAEhB,OAAO,CAnBvB,WAAA;IAoBNiB,UAAU,EAAEjB,OAAO,CApBb,UAAA;IAqBNkB,mBAAmB,EAAElB,OAAO,CArBtB,UAAA;IAsBNmB,SAAS,EAAEnB,OAAO,CAtBZ,SAAA;IAuBNoB,gBAAgB,EAAEpB,OAAO,CAvBnB,gBAAA;IAwBNqB,iBAAiB,EAAEZ,IAAAA,cAAAA,EAAMT,OAAO,CAAbS,SAAAA,EAAAA,KAAAA,CACVlB,OAAO,CADGkB,MAAAA,EAAAA,GAAAA,GAxBb,MAwBaA,EAxBb;IA4BNa,OAAO,EAAEtB,OAAO,CA5BV,OAAA;IA6BNuB,gBAAgB,EAAEvB,OAAO,CA7BnB,OAAA;IA8BNwB,YAAY,EAAExB,OAAO,CA9Bf,SAAA;IA+BNyB,OAAO,EAAEzB,OAAO,CA/BV,gBAAA;IAgCN0B,cAAc,EAAE1B,OAAO,CAhCjB,SAAA;IAiCN2B,gBAAgB,EAAE3B,OAAO,CAjCnB,SAAA;IAkCN4B,cAAc,EAAE5B,OAAO,CAlCjB,SAAA;IAmCN6B,QAAQ,EAAEpB,IAAAA,cAAAA,EAAMqB,iBAAAA,CAANrB,gBAAAA,EAAAA,KAAAA,CAAAA,GAAAA,EAAAA,GAAAA,GAnCJ,MAmCIA,EAnCJ;IAoCNsB,SAAS,EAAE;MACTC,MAAM,EADG,aAAA;MAKTC,MAAM,EALG,iBAAA;MAMTC,MAAM,EANG,iBAAA;MAOTC,MAAM,EAPG,iBAAA;MAQTC,MAAM,EARG,iBAAA;MASTC,MAAM,EATG;IAAA;EApCL;AANyB,EAA5B","sourcesContent":["import color from 'color';\nimport type { MD3Theme } from '../../../types';\nimport { MD3LightTheme } from './LightTheme';\nimport { MD3Colors, tokens } from './tokens';\n\nconst { palette, opacity } = tokens.md.ref;\n\nexport const MD3DarkTheme: MD3Theme = {\n  ...MD3LightTheme,\n  dark: true,\n  mode: 'adaptive',\n  version: 3,\n  isV3: true,\n  colors: {\n    primary: palette.primary80,\n    primaryContainer: palette.primary30,\n    secondary: palette.secondary80,\n    secondaryContainer: palette.secondary30,\n    tertiary: palette.tertiary80,\n    tertiaryContainer: palette.tertiary30,\n    surface: palette.neutral10,\n    surfaceVariant: palette.neutralVariant30,\n    surfaceDisabled: color(palette.neutral90)\n      .alpha(opacity.level2)\n      .rgb()\n      .string(),\n    background: palette.neutral10,\n    error: palette.error80,\n    errorContainer: palette.error30,\n    onPrimary: palette.primary20,\n    onPrimaryContainer: palette.primary90,\n    onSecondary: palette.secondary20,\n    onSecondaryContainer: palette.secondary90,\n    onTertiary: palette.tertiary20,\n    onTertiaryContainer: palette.tertiary90,\n    onSurface: palette.neutral90,\n    onSurfaceVariant: palette.neutralVariant80,\n    onSurfaceDisabled: color(palette.neutral90)\n      .alpha(opacity.level4)\n      .rgb()\n      .string(),\n    onError: palette.error20,\n    onErrorContainer: palette.error80,\n    onBackground: palette.neutral90,\n    outline: palette.neutralVariant60,\n    inverseSurface: palette.neutral90,\n    inverseOnSurface: palette.neutral20,\n    inversePrimary: palette.primary40,\n    backdrop: color(MD3Colors.neutralVariant20).alpha(0.4).rgb().string(),\n    elevation: {\n      level0: 'transparent',\n      // Note: Color values with transparency cause RN to transfer shadows to children nodes\n      // instead of View component in Surface. Providing solid background fixes the issue.\n      // Opaque color values generated with `palette.primary80` used as background\n      level1: 'rgb(37, 35, 42)', // palette.primary80, alpha 0.05\n      level2: 'rgb(44, 40, 49)', // palette.primary80, alpha 0.08\n      level3: 'rgb(49, 44, 56)', // palette.primary80, alpha 0.11\n      level4: 'rgb(51, 46, 58)', // palette.primary80, alpha 0.12\n      level5: 'rgb(52, 49, 63)', // palette.primary80, alpha 0.14\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"script"}