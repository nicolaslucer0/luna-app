{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.DataTableTitle = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _MaterialCommunityIcon = _interopRequireDefault(require(\"../MaterialCommunityIcon\"));\n\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _excluded = [\"numeric\", \"children\", \"onPress\", \"sortDirection\", \"theme\", \"textStyle\", \"style\", \"numberOfLines\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DataTableTitle = function DataTableTitle(_ref) {\n  var _theme$colors;\n\n  var numeric = _ref.numeric,\n      children = _ref.children,\n      onPress = _ref.onPress,\n      sortDirection = _ref.sortDirection,\n      theme = _ref.theme,\n      textStyle = _ref.textStyle,\n      style = _ref.style,\n      _ref$numberOfLines = _ref.numberOfLines,\n      numberOfLines = _ref$numberOfLines === void 0 ? 1 : _ref$numberOfLines,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(sortDirection === 'ascending' ? 0 : 1)),\n      spinAnim = _React$useRef.current;\n\n  React.useEffect(function () {\n    _reactNative.Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true\n    }).start();\n  }, [sortDirection, spinAnim]);\n  var textColor = theme.isV3 ? theme.colors.onSurface : theme === null || theme === void 0 ? void 0 : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.text;\n  var alphaTextColor = (0, _color.default)(textColor).alpha(0.6).rgb().string();\n  var spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg']\n  });\n  var icon = sortDirection ? React.createElement(_reactNative.Animated.View, {\n    style: [styles.icon, {\n      transform: [{\n        rotate: spin\n      }]\n    }]\n  }, React.createElement(_MaterialCommunityIcon.default, {\n    name: \"arrow-up\",\n    size: 16,\n    color: textColor,\n    direction: _reactNative.I18nManager.isRTL ? 'rtl' : 'ltr'\n  })) : null;\n  return React.createElement(_reactNative.TouchableWithoutFeedback, _extends({\n    disabled: !onPress,\n    onPress: onPress\n  }, rest), React.createElement(_reactNative.View, {\n    style: [styles.container, numeric && styles.right, style]\n  }, icon, React.createElement(_Text.default, {\n    style: [styles.cell, {\n      maxHeight: 24 * numberOfLines\n    }, numberOfLines > 1 ? numeric ? _reactNative.I18nManager.isRTL ? styles.leftText : styles.rightText : styles.centerText : {}, sortDirection ? styles.sorted : {\n      color: alphaTextColor\n    }, textStyle],\n    numberOfLines: numberOfLines\n  }, children)));\n};\n\nexports.DataTableTitle = DataTableTitle;\nDataTableTitle.displayName = 'DataTable.Title';\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12\n  },\n  rightText: {\n    textAlign: 'right'\n  },\n  leftText: {\n    textAlign: 'left'\n  },\n  centerText: {\n    textAlign: 'center'\n  },\n  right: {\n    justifyContent: 'flex-end'\n  },\n  cell: {\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center'\n  },\n  sorted: {\n    marginLeft: 8\n  },\n  icon: {\n    height: 24,\n    justifyContent: 'center'\n  }\n});\n\nvar _default = (0, _theming.withTheme)(DataTableTitle);\n\nexports.default = _default;","map":{"version":3,"sources":["DataTableTitle.tsx"],"names":["DataTableTitle","numberOfLines","rest","current","spinAnim","React","Animated","sortDirection","toValue","duration","useNativeDriver","textColor","theme","alphaTextColor","color","spin","inputRange","outputRange","icon","styles","transform","rotate","I18nManager","onPress","numeric","maxHeight","container","flex","flexDirection","alignContent","paddingVertical","rightText","textAlign","leftText","centerText","right","justifyContent","cell","lineHeight","fontSize","fontWeight","alignItems","sorted","marginLeft","height","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  I18nManager,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\n\nexport type Props = React.ComponentPropsWithRef<\n  typeof TouchableWithoutFeedback\n> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Text content style of the `DataTableTitle`.\n   */\n  textStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableTitle = ({\n  numeric,\n  children,\n  onPress,\n  sortDirection,\n  theme,\n  textStyle,\n  style,\n  numberOfLines = 1,\n  ...rest\n}: Props) => {\n  const { current: spinAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(sortDirection === 'ascending' ? 0 : 1)\n  );\n\n  React.useEffect(() => {\n    Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }, [sortDirection, spinAnim]);\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme?.colors?.text;\n\n  const alphaTextColor = color(textColor).alpha(0.6).rgb().string();\n\n  const spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg'],\n  });\n\n  const icon = sortDirection ? (\n    <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n      <MaterialCommunityIcon\n        name=\"arrow-up\"\n        size={16}\n        color={textColor}\n        direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n      />\n    </Animated.View>\n  ) : null;\n\n  return (\n    <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n      <View style={[styles.container, numeric && styles.right, style]}>\n        {icon}\n\n        <Text\n          style={[\n            styles.cell,\n            // height must scale with numberOfLines\n            { maxHeight: 24 * numberOfLines },\n            // if numberOfLines causes wrap, center is lost. Align directly, sensitive to numeric and RTL\n            numberOfLines > 1\n              ? numeric\n                ? I18nManager.isRTL\n                  ? styles.leftText\n                  : styles.rightText\n                : styles.centerText\n              : {},\n            sortDirection ? styles.sorted : { color: alphaTextColor },\n            textStyle,\n          ]}\n          numberOfLines={numberOfLines}\n        >\n          {children}\n        </Text>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nDataTableTitle.displayName = 'DataTable.Title';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  rightText: {\n    textAlign: 'right',\n  },\n\n  leftText: {\n    textAlign: 'left',\n  },\n\n  centerText: {\n    textAlign: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n"]},"metadata":{},"sourceType":"script"}