{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeReanimated = _interopRequireWildcard(require(\"react-native-reanimated\"));\n\nvar _excluded = [\"progress\", \"onPress\", \"style\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar PROGRESS_EPSILON = 0.05;\nvar Overlay = React.forwardRef(function Overlay(_ref, ref) {\n  var progress = _ref.progress,\n      onPress = _ref.onPress,\n      style = _ref.style,\n      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var animatedStyle = (0, _reactNativeReanimated.useAnimatedStyle)(function () {\n    var _f = function _f() {\n      return {\n        opacity: progress.value,\n        zIndex: progress.value > PROGRESS_EPSILON ? 0 : -1\n      };\n    };\n\n    _f._closure = {\n      progress: progress,\n      PROGRESS_EPSILON: PROGRESS_EPSILON\n    };\n    _f.asString = \"function _f(){const{progress,PROGRESS_EPSILON}=jsThis._closure;{return{opacity:progress.value,zIndex:progress.value>PROGRESS_EPSILON?0:-1};}}\";\n    _f.__workletHash = 1802421920871;\n    _f.__location = \"/Users/nicolaslucero/development/personal/LunaApp/node_modules/@react-navigation/drawer/lib/module/views/modern/Overlay.js (14:41)\";\n    _f.__optimalization = 3;\n    return _f;\n  }());\n  var animatedProps = (0, _reactNativeReanimated.useAnimatedProps)(function () {\n    var _f = function _f() {\n      var active = progress.value > PROGRESS_EPSILON;\n      return {\n        pointerEvents: active ? 'auto' : 'none',\n        accessibilityElementsHidden: !active,\n        importantForAccessibility: active ? 'auto' : 'no-hide-descendants'\n      };\n    };\n\n    _f._closure = {\n      progress: progress,\n      PROGRESS_EPSILON: PROGRESS_EPSILON\n    };\n    _f.asString = \"function _f(){const{progress,PROGRESS_EPSILON}=jsThis._closure;{const active=progress.value>PROGRESS_EPSILON;return{pointerEvents:active?'auto':'none',accessibilityElementsHidden:!active,importantForAccessibility:active?'auto':'no-hide-descendants'};}}\";\n    _f.__workletHash = 1603427272892;\n    _f.__location = \"/Users/nicolaslucero/development/personal/LunaApp/node_modules/@react-navigation/drawer/lib/module/views/modern/Overlay.js (22:41)\";\n    return _f;\n  }());\n  return React.createElement(_reactNativeReanimated.default.View, _extends({}, props, {\n    ref: ref,\n    style: [styles.overlay, overlayStyle, animatedStyle, style],\n    animatedProps: animatedProps\n  }), React.createElement(_reactNative.Pressable, {\n    onPress: onPress,\n    style: styles.pressable\n  }));\n});\n\nvar overlayStyle = _reactNative.Platform.select({\n  web: {\n    WebkitTapHighlightColor: 'transparent'\n  },\n  default: {}\n});\n\nvar styles = _reactNative.StyleSheet.create({\n  overlay: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  }),\n  pressable: {\n    flex: 1\n  }\n});\n\nvar _default = Overlay;\nexports.default = _default;","map":{"version":3,"sources":["Overlay.tsx"],"names":["PROGRESS_EPSILON","Overlay","props","animatedStyle","useAnimatedStyle","opacity","progress","zIndex","animatedProps","useAnimatedProps","active","pointerEvents","accessibilityElementsHidden","importantForAccessibility","styles","pressable","overlayStyle","web","WebkitTapHighlightColor","default","overlay","StyleSheet","backgroundColor","flex"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAMA,gBAAgB,GAAtB,IAAA;AAOA,IAAMC,OAAO,GAAG,KAAK,CAAL,UAAA,CAAiB,SAAA,OAAA,CAAA,IAAA,EAAA,GAAA,EAG/B;EAFA,IAAA,QAAA,GAEA,IAFA,CAAA,QAAA;EAAA,IAAA,OAAA,GAEA,IAFA,CAAA,OAAA;EAAA,IAAA,KAAA,GAEA,IAFA,CAAA,KAAA;EAAA,IAA+BC,KAA/B,0CAEA,IAFA;EAGA,IAAMC,aAAa,GAAGC,IAAAA,uCAAAA;IAAAA,uBAAuB;MAC3C,OAAO;QACLC,OAAO,EAAEC,QAAQ,CADZ,KAAA;QAILC,MAAM,EAAED,QAAQ,CAARA,KAAAA,GAAAA,gBAAAA,GAAAA,CAAAA,GAAwC,CAAC;MAJ5C,CAAP;IADF,CAAsBF;;IAAAA;MAAAA,UAJlBH,QAIkBG;MAAAA,kBAJR;IAIQA;IAAAA;IAAAA;IAAAA;IAAAA;IAAAA;EAAAA,IAAtB;EASA,IAAMI,aAAa,GAAGC,IAAAA,uCAAAA;IAAAA,uBAAuB;MAC3C,IAAMC,MAAM,GAAGJ,QAAQ,CAARA,KAAAA,GAAf,gBAAA;MAEA,OAAO;QACLK,aAAa,EAAED,MAAM,GAAA,MAAA,GADhB,MAAA;QAELE,2BAA2B,EAAE,CAFxB,MAAA;QAGLC,yBAAyB,EAAEH,MAAM,GAAA,MAAA,GAAY;MAHxC,CAAP;IAHF,CAAsBD;;IAAAA;MAAAA,UA3BxB,QA2BwBA;MAAAA,kBA3BxB;IA2BwBA;IAAAA;IAAAA;IAAAA;IAAAA;EAAAA,IAAtB;EAUA,OACE,KAAA,CAAA,aAAA,CAAA,8BAAA,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;IAEE,GAAG,EAFL,GAAA;IAGE,KAAK,EAAE,CAACK,MAAM,CAAP,OAAA,EAAA,YAAA,EAAA,aAAA,EAHT,KAGS,CAHT;IAIE,aAAa,EAAEN;EAJjB,CAAA,CAAA,EAME,KAAA,CAAA,aAAA,CAAA,sBAAA,EAAA;IAAW,OAAO,EAAlB,OAAA;IAA6B,KAAK,EAAEM,MAAM,CAACC;EAA3C,CAAA,CANF,CADF;AAvBF,CAAgB,CAAhB;;AAmCA,IAAMC,YAAY,GAAG,qBAAA,CAAA,MAAA,CAAwC;EAC3DC,GAAG,EAAE;IAGHC,uBAAuB,EAAE;EAHtB,CADsD;EAM3DC,OAAO,EAAE;AANkD,CAAxC,CAArB;;AASA,IAAML,MAAM,GAAG,uBAAA,CAAA,MAAA,CAAkB;EAC/BM,OAAO,oBACFC,uBAAAA,CADI,kBAAF;IAELC,eAAe,EAAE;EAFZ,EADwB;EAK/BP,SAAS,EAAE;IACTQ,IAAI,EAAE;EADG;AALoB,CAAlB,CAAf;;eAUA,O","sourcesContent":["import * as React from 'react';\nimport { Platform, Pressable, StyleSheet } from 'react-native';\nimport Animated, {\n  useAnimatedProps,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\n\nconst PROGRESS_EPSILON = 0.05;\n\ntype Props = React.ComponentProps<typeof Animated.View> & {\n  progress: Animated.SharedValue<number>;\n  onPress: () => void;\n};\n\nconst Overlay = React.forwardRef(function Overlay(\n  { progress, onPress, style, ...props }: Props,\n  ref: React.Ref<Animated.View>\n) {\n  const animatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: progress.value,\n      // We don't want the user to be able to press through the overlay when drawer is open\n      // We can send the overlay behind the screen to avoid it\n      zIndex: progress.value > PROGRESS_EPSILON ? 0 : -1,\n    };\n  });\n\n  const animatedProps = useAnimatedProps(() => {\n    const active = progress.value > PROGRESS_EPSILON;\n\n    return {\n      pointerEvents: active ? 'auto' : 'none',\n      accessibilityElementsHidden: !active,\n      importantForAccessibility: active ? 'auto' : 'no-hide-descendants',\n    } as const;\n  });\n\n  return (\n    <Animated.View\n      {...props}\n      ref={ref}\n      style={[styles.overlay, overlayStyle, animatedStyle, style]}\n      animatedProps={animatedProps}\n    >\n      <Pressable onPress={onPress} style={styles.pressable} />\n    </Animated.View>\n  );\n});\n\nconst overlayStyle = Platform.select<Record<string, string>>({\n  web: {\n    // Disable touch highlight on mobile Safari.\n    // WebkitTapHighlightColor must be used outside of StyleSheet.create because react-native-web will omit the property.\n    WebkitTapHighlightColor: 'transparent',\n  },\n  default: {},\n});\n\nconst styles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  pressable: {\n    flex: 1,\n  },\n});\n\nexport default Overlay;\n"]},"metadata":{},"sourceType":"script"}