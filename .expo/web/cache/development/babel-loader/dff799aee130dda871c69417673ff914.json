{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar _default = function _default(Navigator, navigatorConfig) {\n  var _class, _temp;\n\n  return _temp = _class = function (_React$Component) {\n    (0, _inherits2.default)(KeyboardAwareNavigator, _React$Component);\n\n    var _super = _createSuper(KeyboardAwareNavigator);\n\n    function KeyboardAwareNavigator() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, KeyboardAwareNavigator);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_previouslyFocusedTextInput\", null);\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_handleGestureBegin\", function () {\n        _this._previouslyFocusedTextInput = _reactNative.TextInput.State.currentlyFocusedInput ? _reactNative.TextInput.State.currentlyFocusedInput() : _reactNative.TextInput.State.currentlyFocusedField();\n\n        if (_this._previouslyFocusedTextInput) {\n          _reactNative.TextInput.State.blurTextInput(_this._previouslyFocusedTextInput);\n        }\n\n        _this.props.onGestureBegin && _this.props.onGestureBegin();\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_handleGestureCanceled\", function () {\n        if (_this._previouslyFocusedTextInput) {\n          _reactNative.TextInput.State.focusTextInput(_this._previouslyFocusedTextInput);\n        }\n\n        _this.props.onGestureCanceled && _this.props.onGestureCanceled();\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_handleGestureEnd\", function () {\n        _this._previouslyFocusedTextInput = null;\n        _this.props.onGestureFinish && _this.props.onGestureFinish();\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_handleTransitionStart\", function (transitionProps, prevTransitionProps) {\n        if (transitionProps.index !== prevTransitionProps.index) {\n          var currentField = _reactNative.TextInput.State.currentlyFocusedInput ? _reactNative.TextInput.State.currentlyFocusedInput() : _reactNative.TextInput.State.currentlyFocusedField();\n\n          if (currentField) {\n            _reactNative.TextInput.State.blurTextInput(currentField);\n          }\n        }\n\n        var onTransitionStart = _this.props.onTransitionStart || navigatorConfig.onTransitionStart;\n        onTransitionStart && onTransitionStart(transitionProps, prevTransitionProps);\n      });\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(KeyboardAwareNavigator, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(Navigator, _extends({}, this.props, {\n          onGestureBegin: this._handleGestureBegin,\n          onGestureCanceled: this._handleGestureCanceled,\n          onGestureEnd: this._handleGestureEnd,\n          onTransitionStart: this._handleTransitionStart\n        }));\n      }\n    }]);\n    return KeyboardAwareNavigator;\n  }(React.Component), _defineProperty(_class, \"router\", Navigator.router), _defineProperty(_class, \"navigationOptions\", Navigator.navigationOptions), _temp;\n};\n\nexports.default = _default;","map":{"version":3,"sources":["createKeyboardAwareNavigator.js"],"names":["React","Navigator","TextInput","transitionProps","prevTransitionProps","currentField","onTransitionStart","navigatorConfig","render","_handleTransitionStart"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAEe,kBAAA,SAAA,EAAA,eAAA,EAAA;EAAA,IAAA,MAAA,EAAA,KAAA;;EAAA,OAAA,KAAA,GAAA,MAAA;IAAA;;IAAA;;IACwC,kCAAA;MAAA;;MAAA;;MAAA,kCAAA,IAAA;QAAA,IAAA;MAAA;;MAAA,gDAAA,IAAA;;MAAA,eAAA,8CAAA,6BAAA,EAAA,IAAA,CAAA;;MAAA,eAAA,8CAAA,qBAAA,EAK7B,YAAM;QAC1B,MAAA,2BAAA,GAAmCE,sBAAAA,CAAAA,KAAAA,CAAAA,qBAAAA,GAC/BA,sBAAAA,CAAAA,KAAAA,CAD+BA,qBAC/BA,EAD+BA,GAE/BA,sBAAAA,CAAAA,KAAAA,CAFJ,qBAEIA,EAFJ;;QAGA,IAAI,MAAJ,2BAAA,EAAsC;UACpCA,sBAAAA,CAAAA,KAAAA,CAAAA,aAAAA,CAA8B,MAA9BA,2BAAAA;QACD;;QACD,MAAA,KAAA,CAAA,cAAA,IAA6B,MAAA,KAAA,CAA7B,cAA6B,EAA7B;MAZiD,CAAA,CAAA;;MAAA,eAAA,8CAAA,wBAAA,EAe1B,YAAM;QAC7B,IAAI,MAAJ,2BAAA,EAAsC;UACpCA,sBAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAA+B,MAA/BA,2BAAAA;QACD;;QACD,MAAA,KAAA,CAAA,iBAAA,IAAgC,MAAA,KAAA,CAAhC,iBAAgC,EAAhC;MAnBiD,CAAA,CAAA;;MAAA,eAAA,8CAAA,mBAAA,EAsB/B,YAAM;QACxB,MAAA,2BAAA,GAAA,IAAA;QACA,MAAA,KAAA,CAAA,eAAA,IAA8B,MAAA,KAAA,CAA9B,eAA8B,EAA9B;MAxBiD,CAAA,CAAA;;MAAA,eAAA,8CAAA,wBAAA,EA2B1B,UAAA,eAAA,EAAA,mBAAA,EAA0C;QAIjE,IAAIC,eAAe,CAAfA,KAAAA,KAA0BC,mBAAmB,CAAjD,KAAA,EAAyD;UACvD,IAAMC,YAAY,GAAGH,sBAAAA,CAAAA,KAAAA,CAAAA,qBAAAA,GACjBA,sBAAAA,CAAAA,KAAAA,CADiBA,qBACjBA,EADiBA,GAEjBA,sBAAAA,CAAAA,KAAAA,CAFJ,qBAEIA,EAFJ;;UAGA,IAAA,YAAA,EAAkB;YAChBA,sBAAAA,CAAAA,KAAAA,CAAAA,aAAAA,CAAAA,YAAAA;UACD;QACF;;QAED,IAAMI,iBAAiB,GACrB,MAAA,KAAA,CAAA,iBAAA,IAAgCC,eAAe,CADjD,iBAAA;QAEAD,iBAAiB,IACfA,iBAAiB,CAAA,eAAA,EADnBA,mBACmB,CADnBA;MA1CiD,CAAA,CAAA;;MAAA;IAAA;;IADxC;MAAA;MAAA,OA+CXE,kBAAS;QACP,OACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EACM,KADN,KAAA,EAAA;UAEE,cAAc,EAAE,KAFlB,mBAAA;UAGE,iBAAiB,EAAE,KAHrB,sBAAA;UAIE,YAAY,EAAE,KAJhB,iBAAA;UAKE,iBAAiB,EAAE,KAAKC;QAL1B,CAAA,CAAA,CADF;MASD;IAzDU;IAAA;EAAA,EACwBT,KAAK,CAA1C,SADa,CAAA,EAAA,eAAA,CAAA,MAAA,EAAA,QAAA,EAEKC,SAAS,CAFd,MAAA,CAAA,EAAA,eAAA,CAAA,MAAA,EAAA,mBAAA,EAGgBA,SAAS,CAHzB,iBAAA,CAAA,EAAA,KAAA;AAAf,C","sourcesContent":["import * as React from 'react';\nimport { TextInput } from 'react-native';\n\nexport default (Navigator, navigatorConfig) =>\n  class KeyboardAwareNavigator extends React.Component {\n    static router = Navigator.router;\n    static navigationOptions = Navigator.navigationOptions;\n    _previouslyFocusedTextInput = null;\n\n    _handleGestureBegin = () => {\n      this._previouslyFocusedTextInput = TextInput.State.currentlyFocusedInput\n        ? TextInput.State.currentlyFocusedInput()\n        : TextInput.State.currentlyFocusedField();\n      if (this._previouslyFocusedTextInput) {\n        TextInput.State.blurTextInput(this._previouslyFocusedTextInput);\n      }\n      this.props.onGestureBegin && this.props.onGestureBegin();\n    };\n\n    _handleGestureCanceled = () => {\n      if (this._previouslyFocusedTextInput) {\n        TextInput.State.focusTextInput(this._previouslyFocusedTextInput);\n      }\n      this.props.onGestureCanceled && this.props.onGestureCanceled();\n    };\n\n    _handleGestureEnd = () => {\n      this._previouslyFocusedTextInput = null;\n      this.props.onGestureFinish && this.props.onGestureFinish();\n    };\n\n    _handleTransitionStart = (transitionProps, prevTransitionProps) => {\n      // TODO: We should not even have received the transition start event\n      // in the case where the index did not change, I believe. We\n      // should revisit this after 2.0 release.\n      if (transitionProps.index !== prevTransitionProps.index) {\n        const currentField = TextInput.State.currentlyFocusedInput\n          ? TextInput.State.currentlyFocusedInput()\n          : TextInput.State.currentlyFocusedField();\n        if (currentField) {\n          TextInput.State.blurTextInput(currentField);\n        }\n      }\n\n      const onTransitionStart =\n        this.props.onTransitionStart || navigatorConfig.onTransitionStart;\n      onTransitionStart &&\n        onTransitionStart(transitionProps, prevTransitionProps);\n    };\n\n    render() {\n      return (\n        <Navigator\n          {...this.props}\n          onGestureBegin={this._handleGestureBegin}\n          onGestureCanceled={this._handleGestureCanceled}\n          onGestureEnd={this._handleGestureEnd}\n          onTransitionStart={this._handleTransitionStart}\n        />\n      );\n    }\n  };\n"]},"metadata":{},"sourceType":"script"}