{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\n\nvar _State = require(\"../State\");\n\nvar _PressGestureHandler2 = _interopRequireDefault(require(\"./PressGestureHandler\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar LongPressGestureHandler = function (_PressGestureHandler) {\n  (0, _inherits2.default)(LongPressGestureHandler, _PressGestureHandler);\n\n  var _super = _createSuper(LongPressGestureHandler);\n\n  function LongPressGestureHandler() {\n    (0, _classCallCheck2.default)(this, LongPressGestureHandler);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(LongPressGestureHandler, [{\n    key: \"minDurationMs\",\n    get: function get() {\n      return (0, _utils.isnan)(this.config.minDurationMs) ? 251 : this.config.minDurationMs;\n    }\n  }, {\n    key: \"maxDist\",\n    get: function get() {\n      return (0, _utils.isnan)(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n  }, {\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(_ref) {\n      var maxDistSq = _ref.maxDistSq;\n      return !(0, _utils.isValidNumber)(maxDistSq);\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n\n      return this.config;\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return Object.assign({}, (0, _get2.default)((0, _getPrototypeOf2.default)(LongPressGestureHandler.prototype), \"getHammerConfig\", this).call(this), {\n        time: this.minDurationMs\n      });\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var _Hammer$INPUT_START$H;\n\n      return (_Hammer$INPUT_START$H = {}, (0, _defineProperty2.default)(_Hammer$INPUT_START$H, _hammerjs.default.INPUT_START, _State.State.ACTIVE), (0, _defineProperty2.default)(_Hammer$INPUT_START$H, _hammerjs.default.INPUT_MOVE, _State.State.ACTIVE), (0, _defineProperty2.default)(_Hammer$INPUT_START$H, _hammerjs.default.INPUT_END, _State.State.END), (0, _defineProperty2.default)(_Hammer$INPUT_START$H, _hammerjs.default.INPUT_CANCEL, _State.State.FAILED), _Hammer$INPUT_START$H)[type];\n    }\n  }]);\n  return LongPressGestureHandler;\n}(_PressGestureHandler2.default);\n\nvar _default = LongPressGestureHandler;\nexports.default = _default;","map":{"version":3,"sources":["LongPressGestureHandler.ts"],"names":["minDurationMs","isnan","maxDist","updateHasCustomActivationCriteria","maxDistSq","isValidNumber","getConfig","shouldCancelWhenOutside","getHammerConfig","time","getState","Hammer","State","FAILED"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAEA;;AAEA;;AACA;;AACA;;;;;;IAIA,uB;;;;;;;;;;;;SACMA,eAAwB;MAE1B,OAAOC,IAAAA,YAAAA,EAAM,KAAA,MAAA,CAANA,aAAAA,IAAAA,GAAAA,GAAyC,KAAA,MAAA,CAAhD,aAAA;IACD;;;SAEGC,eAAU;MAEZ,OAAOD,IAAAA,YAAAA,EAAM,KAAA,MAAA,CAANA,OAAAA,IAAAA,CAAAA,GAAiC,KAAA,MAAA,CAAxC,OAAA;IACD;;;WAEDE,iDAAyD;MAAA,IAArBC,SAAqB,QAArBA,SAAqB;MACvD,OAAO,CAACC,IAAAA,oBAAAA,EAAR,SAAQA,CAAR;IACD;;;WAEDC,qBAAY;MACV,IAAI,CAAC,KAAL,2BAAA,EAAuC;QAGrC,OAAO;UACLC,uBAAuB,EADlB,IAAA;UAELH,SAAS,EAAE;QAFN,CAAP;MAID;;MACD,OAAO,KAAP,MAAA;IACD;;;WAEDI,2BAAkB;MAChB;QAGEC,IAAI,EAAE,KAAKT;MAHb;IAKD;;;WAEDU,kBAAQ,IAARA,EAA8C;MAAA;;MAC5C,OAAO,kFACJC,iBAAAA,CAAD,WADK,EACiBC,YAAAA,CADjB,MAAA,wDAEJD,iBAAAA,CAAD,UAFK,EAEgBC,YAAAA,CAFhB,MAAA,wDAGJD,iBAAAA,CAAD,SAHK,EAGeC,YAAAA,CAHf,GAAA,wDAIJD,iBAAAA,CAAD,YAJK,EAIkBC,YAAAA,CAAMC,MAJxB,0BAAP,IAAO,CAAP;IAMD;;;EA1CH,6B;;eA6CA,uB","sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport Hammer from '@egjs/hammerjs';\n\nimport { State } from '../State';\nimport PressGestureHandler from './PressGestureHandler';\nimport { isnan, isValidNumber } from './utils';\nimport { Config } from './GestureHandler';\nimport { HammerInputNames } from './constants';\n\nclass LongPressGestureHandler extends PressGestureHandler {\n  get minDurationMs(): number {\n    // @ts-ignore FIXNE(TS)\n    return isnan(this.config.minDurationMs) ? 251 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    // @ts-ignore FIXNE(TS)\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  updateHasCustomActivationCriteria({ maxDistSq }: Config) {\n    return !isValidNumber(maxDistSq);\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  getState(type: keyof typeof HammerInputNames) {\n    return {\n      [Hammer.INPUT_START]: State.ACTIVE,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.FAILED,\n    }[type];\n  }\n}\n\nexport default LongPressGestureHandler;\n"]},"metadata":{},"sourceType":"script"}