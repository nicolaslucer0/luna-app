{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _theming = require(\"../../../core/theming\");\n\nvar _AnimatedText = _interopRequireDefault(require(\"../../Typography/AnimatedText\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar LabelBackground = function LabelBackground(_ref) {\n  var parentState = _ref.parentState,\n      _ref$labelProps = _ref.labelProps,\n      placeholderStyle = _ref$labelProps.placeholderStyle,\n      baseLabelTranslateX = _ref$labelProps.baseLabelTranslateX,\n      topPosition = _ref$labelProps.topPosition,\n      hasActiveOutline = _ref$labelProps.hasActiveOutline,\n      label = _ref$labelProps.label,\n      backgroundColor = _ref$labelProps.backgroundColor,\n      roundness = _ref$labelProps.roundness,\n      labelStyle = _ref.labelStyle,\n      maxFontSizeMultiplier = _ref.maxFontSizeMultiplier;\n  var hasFocus = hasActiveOutline || parentState.value;\n  var opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0]\n  });\n\n  var _useTheme = (0, _theming.useTheme)(),\n      isV3 = _useTheme.isV3;\n\n  var labelTranslationX = {\n    translateX: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-baseLabelTranslateX, 0]\n    })\n  };\n  var labelTextScaleY = {\n    scaleY: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.2, 1]\n    })\n  };\n  var labelTextTransform = [].concat((0, _toConsumableArray2.default)(labelStyle.transform), [labelTextScaleY]);\n  var labelTextWidth = isV3 ? {\n    width: parentState.labelLayout.width - placeholderStyle.paddingHorizontal\n  } : {\n    maxWidth: parentState.labelLayout.width - 2 * placeholderStyle.paddingHorizontal\n  };\n  return label ? [React.createElement(_reactNative.Animated.View, {\n    key: \"labelBackground-view\",\n    pointerEvents: \"none\",\n    style: [_reactNative.StyleSheet.absoluteFill, styles.view, {\n      backgroundColor: backgroundColor,\n      maxHeight: Math.max(roundness / 3, 2),\n      opacity: opacity,\n      bottom: Math.max(roundness, 2),\n      transform: [labelTranslationX]\n    }]\n  }), React.createElement(_AnimatedText.default, {\n    key: \"labelBackground-text\",\n    style: [placeholderStyle, labelStyle, styles.outlinedLabel, isV3 && styles.md3OutlinedLabel, {\n      top: topPosition + 1,\n      backgroundColor: backgroundColor,\n      opacity: opacity,\n      transform: labelTextTransform\n    }, labelTextWidth],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, label)] : null;\n};\n\nvar _default = LabelBackground;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent'\n  },\n  md3OutlinedLabel: {\n    left: 8\n  }\n});","map":{"version":3,"sources":["LabelBackground.tsx"],"names":["LabelBackground","labelProps","roundness","maxFontSizeMultiplier","hasFocus","hasActiveOutline","parentState","opacity","inputRange","outputRange","isV3","labelTranslationX","translateX","labelTextScaleY","scaleY","labelTextTransform","labelStyle","labelTextWidth","width","placeholderStyle","paddingHorizontal","maxWidth","label","StyleSheet","styles","backgroundColor","maxHeight","Math","bottom","transform","top","topPosition","view","position","left","outlinedLabel","color","md3OutlinedLabel"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport { useTheme } from '../../../core/theming';\n\nimport AnimatedText from '../../Typography/AnimatedText';\n\nimport type { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  parentState,\n  labelProps: {\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    hasActiveOutline,\n    label,\n    backgroundColor,\n    roundness,\n  },\n  labelStyle,\n  maxFontSizeMultiplier,\n}: LabelBackgroundProps) => {\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0],\n  });\n\n  const { isV3 } = useTheme();\n\n  const labelTranslationX = {\n    translateX: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-baseLabelTranslateX, 0],\n    }),\n  };\n\n  const labelTextScaleY = {\n    scaleY: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.2, 1],\n    }),\n  };\n\n  const labelTextTransform = [...labelStyle.transform, labelTextScaleY];\n\n  const labelTextWidth = isV3\n    ? {\n        width:\n          parentState.labelLayout.width - placeholderStyle.paddingHorizontal,\n      }\n    : {\n        maxWidth:\n          parentState.labelLayout.width -\n          2 * placeholderStyle.paddingHorizontal,\n      };\n\n  return label\n    ? [\n        <Animated.View\n          key=\"labelBackground-view\"\n          pointerEvents=\"none\"\n          style={[\n            StyleSheet.absoluteFill,\n            styles.view,\n            {\n              backgroundColor,\n              maxHeight: Math.max(roundness / 3, 2),\n              opacity,\n              bottom: Math.max(roundness, 2),\n              transform: [labelTranslationX],\n            },\n          ]}\n        />,\n        <AnimatedText\n          key=\"labelBackground-text\"\n          style={[\n            placeholderStyle,\n            labelStyle,\n            styles.outlinedLabel,\n            isV3 && styles.md3OutlinedLabel,\n            {\n              top: topPosition + 1,\n              backgroundColor,\n              opacity,\n              transform: labelTextTransform,\n            },\n            labelTextWidth,\n          ]}\n          numberOfLines={1}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n        >\n          {label}\n        </AnimatedText>,\n      ]\n    : null;\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12,\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n  md3OutlinedLabel: {\n    left: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}