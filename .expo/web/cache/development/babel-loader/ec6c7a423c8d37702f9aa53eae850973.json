{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Surface = _interopRequireDefault(require(\"./Surface\"));\n\nvar _Text = _interopRequireDefault(require(\"./Typography/Text\"));\n\nvar _Button = _interopRequireDefault(require(\"./Button/Button\"));\n\nvar _Icon = _interopRequireDefault(require(\"./Icon\"));\n\nvar _theming = require(\"../core/theming\");\n\nvar _excluded = [\"visible\", \"icon\", \"children\", \"actions\", \"contentStyle\", \"elevation\", \"style\", \"theme\", \"onShowAnimationFinished\", \"onHideAnimationFinished\"],\n    _excluded2 = [\"label\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DEFAULT_MAX_WIDTH = 960;\n\nvar Banner = function Banner(_ref) {\n  var visible = _ref.visible,\n      icon = _ref.icon,\n      children = _ref.children,\n      actions = _ref.actions,\n      contentStyle = _ref.contentStyle,\n      _ref$elevation = _ref.elevation,\n      elevation = _ref$elevation === void 0 ? 1 : _ref$elevation,\n      style = _ref.style,\n      theme = _ref.theme,\n      _ref$onShowAnimationF = _ref.onShowAnimationFinished,\n      onShowAnimationFinished = _ref$onShowAnimationF === void 0 ? function () {} : _ref$onShowAnimationF,\n      _ref$onHideAnimationF = _ref.onHideAnimationFinished,\n      onHideAnimationFinished = _ref$onHideAnimationF === void 0 ? function () {} : _ref$onHideAnimationF,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(visible ? 1 : 0)),\n      position = _React$useRef.current;\n\n  var _React$useState = React.useState({\n    height: 0,\n    measured: false\n  }),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      layout = _React$useState2[0],\n      setLayout = _React$useState2[1];\n\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (visible) {\n      _reactNative.Animated.timing(position, {\n        duration: 250 * scale,\n        toValue: 1,\n        useNativeDriver: false\n      }).start(onShowAnimationFinished);\n    } else {\n      _reactNative.Animated.timing(position, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: false\n      }).start(onHideAnimationFinished);\n    }\n  }, [visible, position, scale]);\n\n  var handleLayout = function handleLayout(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    var height = nativeEvent.layout.height;\n    setLayout({\n      height: height,\n      measured: true\n    });\n  };\n\n  var height = _reactNative.Animated.multiply(position, layout.height);\n\n  var translateY = _reactNative.Animated.multiply(_reactNative.Animated.add(position, -1), layout.height);\n\n  return React.createElement(_Surface.default, _extends({}, rest, {\n    style: [!theme.isV3 && styles.elevation, style],\n    theme: theme\n  }, theme.isV3 && {\n    elevation: elevation\n  }), React.createElement(_reactNative.View, {\n    style: [styles.wrapper, contentStyle]\n  }, React.createElement(_reactNative.Animated.View, {\n    style: {\n      height: height\n    }\n  }), React.createElement(_reactNative.Animated.View, {\n    onLayout: handleLayout,\n    style: [layout.measured || !visible ? [styles.absolute, {\n      transform: [{\n        translateY: translateY\n      }]\n    }] : null, !layout.measured && !visible ? {\n      opacity: 0\n    } : null]\n  }, React.createElement(_reactNative.View, {\n    style: styles.content\n  }, icon ? React.createElement(_reactNative.View, {\n    style: styles.icon\n  }, React.createElement(_Icon.default, {\n    source: icon,\n    size: 40\n  })) : null, React.createElement(_Text.default, {\n    style: [styles.message, {\n      color: theme.isV3 ? theme.colors.onSurface : theme.colors.text\n    }],\n    accessibilityLiveRegion: visible ? 'polite' : 'none',\n    accessibilityRole: \"alert\"\n  }, children)), React.createElement(_reactNative.View, {\n    style: styles.actions\n  }, actions.map(function (_ref3, i) {\n    var _theme$colors;\n\n    var label = _ref3.label,\n        others = (0, _objectWithoutProperties2.default)(_ref3, _excluded2);\n    return React.createElement(_Button.default, _extends({\n      key: i,\n      compact: true,\n      mode: \"text\",\n      style: styles.button,\n      textColor: (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.primary\n    }, others), label);\n  })))));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%'\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0\n  },\n  icon: {\n    margin: 8\n  },\n  message: {\n    flex: 1,\n    margin: 8\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4\n  },\n  button: {\n    margin: 4\n  },\n  elevation: {\n    elevation: 1\n  }\n});\n\nvar _default = (0, _theming.withTheme)(Banner);\n\nexports.default = _default;","map":{"version":3,"sources":["Banner.tsx"],"names":["DEFAULT_MAX_WIDTH","Banner","elevation","onShowAnimationFinished","onHideAnimationFinished","rest","current","position","React","Animated","visible","height","measured","scale","theme","duration","toValue","useNativeDriver","handleLayout","nativeEvent","setLayout","layout","translateY","styles","transform","opacity","content","icon","color","text","actions","others","primary","wrapper","overflow","alignSelf","width","maxWidth","absolute","top","flexDirection","justifyContent","marginHorizontal","marginTop","marginBottom","margin","message","flex","button","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp, Animated } from 'react-native';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport Button from './Button/Button';\nimport Icon, { IconSource } from './Icon';\nimport { withTheme } from '../core/theming';\nimport type { $RemoveChildren, Theme } from '../types';\n\nconst DEFAULT_MAX_WIDTH = 960;\n\nexport type Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Whether banner is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Content that will be displayed inside banner.\n   */\n  children: string;\n  /**\n   * Icon to display for the `Banner`. Can be an image.\n   */\n  icon?: IconSource;\n  /**\n   * Action items to shown in the banner.\n   * An action item should contain the following properties:\n   *\n   * - `label`: label of the action button (required)\n   * - `onPress`: callback that is called when button is pressed (required)\n   *\n   * To customize button you can pass other props that button component takes.\n   */\n  actions: Array<\n    {\n      label: string;\n    } & Omit<React.ComponentProps<typeof Button>, 'children'>\n  >;\n  /**\n   * Style of banner's inner content.\n   * Use this prop to apply custom width for wide layouts.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes Banner shadow and background on iOS and Android.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  /**\n   * @optional\n   * Optional callback that will be called after the opening animation finished running normally\n   */\n  onShowAnimationFinished?: Animated.EndCallback;\n  /**\n   * @optional\n   * Optional callback that will be called after the closing animation finished running normally\n   */\n  onHideAnimationFinished?: Animated.EndCallback;\n};\n\ntype NativeEvent = {\n  nativeEvent: {\n    layout: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n    };\n  };\n};\n\n/**\n * Banner displays a prominent message and related actions.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/banner.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Image } from 'react-native';\n * import { Banner } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(true);\n *\n *   return (\n *     <Banner\n *       visible={visible}\n *       actions={[\n *         {\n *           label: 'Fix it',\n *           onPress: () => setVisible(false),\n *         },\n *         {\n *           label: 'Learn more',\n *           onPress: () => setVisible(false),\n *         },\n *       ]}\n *       icon={({size}) => (\n *         <Image\n *           source={{\n *             uri: 'https://avatars3.githubusercontent.com/u/17571969?s=400&v=4',\n *           }}\n *           style={{\n *             width: size,\n *             height: size,\n *           }}\n *         />\n *       )}>\n *       There was a problem processing a transaction on your credit card.\n *     </Banner>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Banner = ({\n  visible,\n  icon,\n  children,\n  actions,\n  contentStyle,\n  elevation = 1,\n  style,\n  theme,\n  onShowAnimationFinished = () => {},\n  onHideAnimationFinished = () => {},\n  ...rest\n}: Props) => {\n  const { current: position } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const [layout, setLayout] = React.useState<{\n    height: number;\n    measured: boolean;\n  }>({\n    height: 0,\n    measured: false,\n  });\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (visible) {\n      // show\n      Animated.timing(position, {\n        duration: 250 * scale,\n        toValue: 1,\n        useNativeDriver: false,\n      }).start(onShowAnimationFinished);\n    } else {\n      // hide\n      Animated.timing(position, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: false,\n      }).start(onHideAnimationFinished);\n    }\n  }, [visible, position, scale]);\n\n  const handleLayout = ({ nativeEvent }: NativeEvent) => {\n    const { height } = nativeEvent.layout;\n    setLayout({ height, measured: true });\n  };\n\n  // The banner animation has 2 parts:\n  // 1. Blank spacer element which animates its height to move the content\n  // 2. Actual banner which animates its translateY\n  // In initial render, we position everything normally and measure the height of the banner\n  // Once we have the height, we apply the height to the spacer and switch the banner to position: absolute\n  // We need this because we need to move the content below as if banner's height was being animated\n  // However we can't animated banner's height directly as it'll also resize the content inside\n  const height = Animated.multiply(position, layout.height);\n\n  const translateY = Animated.multiply(\n    Animated.add(position, -1),\n    layout.height\n  );\n  return (\n    <Surface\n      {...rest}\n      style={[!theme.isV3 && styles.elevation, style]}\n      theme={theme}\n      {...(theme.isV3 && { elevation })}\n    >\n      <View style={[styles.wrapper, contentStyle]}>\n        <Animated.View style={{ height }} />\n        <Animated.View\n          onLayout={handleLayout}\n          style={[\n            layout.measured || !visible\n              ? // If we have measured banner's height or it's invisible,\n                // Position it absolutely, the layout will be taken care of the spacer\n                [styles.absolute, { transform: [{ translateY }] }]\n              : // Otherwise position it normally\n                null,\n            !layout.measured && !visible\n              ? // If we haven't measured banner's height yet and it's invisible,\n                // hide it with opacity: 0 so user doesn't see it\n                { opacity: 0 }\n              : null,\n          ]}\n        >\n          <View style={styles.content}>\n            {icon ? (\n              <View style={styles.icon}>\n                <Icon source={icon} size={40} />\n              </View>\n            ) : null}\n            <Text\n              style={[\n                styles.message,\n                {\n                  color: theme.isV3\n                    ? theme.colors.onSurface\n                    : theme.colors.text,\n                },\n              ]}\n              accessibilityLiveRegion={visible ? 'polite' : 'none'}\n              accessibilityRole=\"alert\"\n            >\n              {children}\n            </Text>\n          </View>\n          <View style={styles.actions}>\n            {actions.map(({ label, ...others }, i) => (\n              <Button\n                key={/* eslint-disable-line react/no-array-index-key */ i}\n                compact\n                mode=\"text\"\n                style={styles.button}\n                textColor={theme.colors?.primary}\n                {...others}\n              >\n                {label}\n              </Button>\n            ))}\n          </View>\n        </Animated.View>\n      </View>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0,\n  },\n  icon: {\n    margin: 8,\n  },\n  message: {\n    flex: 1,\n    margin: 8,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4,\n  },\n  button: {\n    margin: 4,\n  },\n  elevation: {\n    elevation: 1,\n  },\n});\n\nexport default withTheme(Banner);\n"]},"metadata":{},"sourceType":"script"}