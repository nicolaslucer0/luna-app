{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getToggleButtonColor = void 0;\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _tokens = require(\"../../styles/themes/v3/tokens\");\n\nvar getToggleButtonColor = function getToggleButtonColor(_ref) {\n  var theme = _ref.theme,\n      checked = _ref.checked;\n\n  if (checked) {\n    if (theme.isV3) {\n      return (0, _color.default)(theme.colors.onSecondaryContainer).alpha(_tokens.tokens.md.ref.opacity.level2).rgb().string();\n    }\n\n    if (theme.dark) {\n      return 'rgba(255, 255, 255, .12)';\n    }\n\n    return 'rgba(0, 0, 0, .08)';\n  }\n\n  return 'transparent';\n};\n\nexports.getToggleButtonColor = getToggleButtonColor;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AAGO,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,OAM9B;EAAA,IALJC,KAKI,QALJA,KAKI;EAAA,IAJJC,OAII,QAJJA,OAII;;EACJ,IAAIA,OAAJ,EAAa;IACX,IAAID,KAAK,CAACE,IAAV,EAAgB;MACd,OAAOC,oBAAMH,KAAK,CAACI,MAANJ,CAAaK,oBAAnBF,EACJG,KADIH,CACEI,eAAOC,EAAPD,CAAUE,GAAVF,CAAcG,OAAdH,CAAsBI,MADxBR,EAEJS,GAFIT,GAGJU,MAHIV,EAAP;IAID;;IACD,IAAIH,KAAK,CAACc,IAAV,EAAgB;MACd,OAAO,0BAAP;IACD;;IACD,OAAO,oBAAP;EACD;;EACD,OAAO,aAAP;AAnBK","names":["getToggleButtonColor","theme","checked","isV3","color","colors","onSecondaryContainer","alpha","tokens","md","ref","opacity","level2","rgb","string","dark"],"sources":["utils.ts"],"sourcesContent":["import color from 'color';\nimport { tokens } from '../../styles/themes/v3/tokens';\nimport type { Theme } from '../../types';\n\nexport const getToggleButtonColor = ({\n  theme,\n  checked,\n}: {\n  theme: Theme;\n  checked: boolean | null;\n}) => {\n  if (checked) {\n    if (theme.isV3) {\n      return color(theme.colors.onSecondaryContainer)\n        .alpha(tokens.md.ref.opacity.level2)\n        .rgb()\n        .string();\n    }\n    if (theme.dark) {\n      return 'rgba(255, 255, 255, .12)';\n    }\n    return 'rgba(0, 0, 0, .08)';\n  }\n  return 'transparent';\n};\n"]},"metadata":{},"sourceType":"script"}