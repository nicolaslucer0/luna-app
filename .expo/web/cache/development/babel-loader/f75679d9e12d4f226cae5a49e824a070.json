{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Icon = _interopRequireDefault(require(\"../Icon\"));\n\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));\n\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _utils = require(\"./utils\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar MenuItem = function MenuItem(_ref) {\n  var leadingIcon = _ref.leadingIcon,\n      trailingIcon = _ref.trailingIcon,\n      dense = _ref.dense,\n      title = _ref.title,\n      disabled = _ref.disabled,\n      onPress = _ref.onPress,\n      style = _ref.style,\n      contentStyle = _ref.contentStyle,\n      testID = _ref.testID,\n      titleStyle = _ref.titleStyle,\n      accessibilityLabel = _ref.accessibilityLabel,\n      theme = _ref.theme;\n\n  var _getMenuItemColor = (0, _utils.getMenuItemColor)({\n    theme: theme,\n    disabled: disabled\n  }),\n      titleColor = _getMenuItemColor.titleColor,\n      iconColor = _getMenuItemColor.iconColor,\n      underlayColor = _getMenuItemColor.underlayColor;\n\n  var isV3 = theme.isV3;\n  var containerPadding = isV3 ? 12 : 8;\n  var iconWidth = isV3 ? 24 : 40;\n  var minWidth = _utils.MIN_WIDTH - (isV3 ? 12 : 16);\n  var maxWidth = (0, _utils.getContentMaxWidth)({\n    isV3: isV3,\n    iconWidth: iconWidth,\n    leadingIcon: leadingIcon,\n    trailingIcon: trailingIcon\n  });\n  return React.createElement(_TouchableRipple.default, {\n    style: [styles.container, {\n      paddingHorizontal: containerPadding\n    }, dense && styles.md3DenseContainer, style],\n    onPress: onPress,\n    disabled: disabled,\n    testID: testID,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"menuitem\",\n    accessibilityState: {\n      disabled: disabled\n    },\n    underlayColor: underlayColor\n  }, React.createElement(_reactNative.View, {\n    style: styles.row\n  }, leadingIcon ? React.createElement(_reactNative.View, {\n    style: [!isV3 && styles.item, {\n      width: iconWidth\n    }],\n    pointerEvents: \"box-none\"\n  }, React.createElement(_Icon.default, {\n    source: leadingIcon,\n    size: 24,\n    color: iconColor\n  })) : null, React.createElement(_reactNative.View, {\n    style: [!isV3 && styles.item, styles.content, {\n      minWidth: minWidth,\n      maxWidth: maxWidth\n    }, isV3 && (leadingIcon ? styles.md3LeadingIcon : styles.md3WithoutLeadingIcon), contentStyle],\n    pointerEvents: \"none\"\n  }, React.createElement(_Text.default, {\n    variant: \"bodyLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    style: [!isV3 && styles.title, {\n      color: titleColor\n    }, titleStyle]\n  }, title)), isV3 && trailingIcon ? React.createElement(_reactNative.View, {\n    style: [!isV3 && styles.item, {\n      width: iconWidth\n    }],\n    pointerEvents: \"box-none\"\n  }, React.createElement(_Icon.default, {\n    source: trailingIcon,\n    size: 24,\n    color: iconColor\n  })) : null));\n};\n\nMenuItem.displayName = 'Menu.Item';\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    minWidth: _utils.MIN_WIDTH,\n    maxWidth: _utils.MAX_WIDTH,\n    height: 48,\n    justifyContent: 'center'\n  },\n  md3DenseContainer: {\n    height: 32\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  title: {\n    fontSize: 16\n  },\n  item: {\n    marginHorizontal: 8\n  },\n  content: {\n    justifyContent: 'center'\n  },\n  md3LeadingIcon: {\n    marginLeft: 12\n  },\n  md3WithoutLeadingIcon: {\n    marginLeft: 4\n  }\n});\n\nvar _default = (0, _theming.withTheme)(MenuItem);\n\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["MenuItem","leadingIcon","trailingIcon","dense","title","disabled","onPress","style","contentStyle","testID","titleStyle","accessibilityLabel","theme","getMenuItemColor","titleColor","iconColor","underlayColor","isV3","containerPadding","iconWidth","minWidth","MIN_WIDTH","maxWidth","getContentMaxWidth","React","TouchableRipple","styles","container","paddingHorizontal","md3DenseContainer","accessibilityRole","accessibilityState","View","row","item","width","pointerEvents","Icon","source","size","color","content","md3LeadingIcon","md3WithoutLeadingIcon","Text","variant","selectable","numberOfLines","displayName","StyleSheet","create","MAX_WIDTH","height","justifyContent","flexDirection","fontSize","marginHorizontal","marginLeft","withTheme"],"sources":["MenuItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\nimport {\n  getContentMaxWidth,\n  getMenuItemColor,\n  MAX_WIDTH,\n  MIN_WIDTH,\n} from './utils';\n\nexport type Props = {\n  /**\n   * Title text for the `MenuItem`.\n   */\n  title: React.ReactNode;\n  /**\n   * @renamed Renamed from 'icon' to 'leadingIcon' in v5.x\n   *\n   * Leading icon to display for the `MenuItem`.\n   */\n  leadingIcon?: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Trailing icon to display for the `MenuItem`.\n   */\n  trailingIcon?: IconSource;\n  /**\n   * Whether the 'item' is disabled. A disabled 'item' is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Sets min height with densed layout.\n   */\n  dense?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * @optional\n   */\n  style?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * Accessibility label for the Touchable. This is read by the screen reader when the user taps the component.\n   */\n  accessibilityLabel?: string;\n};\n\n/**\n * A component to show a single list item inside a Menu.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/menu-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Menu } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View style={{ flex: 1 }}>\n *     <Menu.Item leadingIcon=\"redo\" onPress={() => {}} title=\"Redo\" />\n *     <Menu.Item leadingIcon=\"undo\" onPress={() => {}} title=\"Undo\" />\n *     <Menu.Item leadingIcon=\"content-cut\" onPress={() => {}} title=\"Cut\" disabled />\n *     <Menu.Item leadingIcon=\"content-copy\" onPress={() => {}} title=\"Copy\" disabled />\n *     <Menu.Item leadingIcon=\"content-paste\" onPress={() => {}} title=\"Paste\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst MenuItem = ({\n  leadingIcon,\n  trailingIcon,\n  dense,\n  title,\n  disabled,\n  onPress,\n  style,\n  contentStyle,\n  testID,\n  titleStyle,\n  accessibilityLabel,\n  theme,\n}: Props) => {\n  const { titleColor, iconColor, underlayColor } = getMenuItemColor({\n    theme,\n    disabled,\n  });\n  const { isV3 } = theme;\n\n  const containerPadding = isV3 ? 12 : 8;\n\n  const iconWidth = isV3 ? 24 : 40;\n\n  const minWidth = MIN_WIDTH - (isV3 ? 12 : 16);\n\n  const maxWidth = getContentMaxWidth({\n    isV3,\n    iconWidth,\n    leadingIcon,\n    trailingIcon,\n  });\n\n  return (\n    <TouchableRipple\n      style={[\n        styles.container,\n        { paddingHorizontal: containerPadding },\n        dense && styles.md3DenseContainer,\n        style,\n      ]}\n      onPress={onPress}\n      disabled={disabled}\n      testID={testID}\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"menuitem\"\n      accessibilityState={{ disabled }}\n      underlayColor={underlayColor}\n    >\n      <View style={styles.row}>\n        {leadingIcon ? (\n          <View\n            style={[!isV3 && styles.item, { width: iconWidth }]}\n            pointerEvents=\"box-none\"\n          >\n            <Icon source={leadingIcon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n        <View\n          style={[\n            !isV3 && styles.item,\n            styles.content,\n            { minWidth, maxWidth },\n            isV3 &&\n              (leadingIcon\n                ? styles.md3LeadingIcon\n                : styles.md3WithoutLeadingIcon),\n            contentStyle,\n          ]}\n          pointerEvents=\"none\"\n        >\n          <Text\n            variant=\"bodyLarge\"\n            selectable={false}\n            numberOfLines={1}\n            style={[!isV3 && styles.title, { color: titleColor }, titleStyle]}\n          >\n            {title}\n          </Text>\n        </View>\n        {isV3 && trailingIcon ? (\n          <View\n            style={[!isV3 && styles.item, { width: iconWidth }]}\n            pointerEvents=\"box-none\"\n          >\n            <Icon source={trailingIcon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nMenuItem.displayName = 'Menu.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    minWidth: MIN_WIDTH,\n    maxWidth: MAX_WIDTH,\n    height: 48,\n    justifyContent: 'center',\n  },\n  md3DenseContainer: {\n    height: 32,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  title: {\n    fontSize: 16,\n  },\n  item: {\n    marginHorizontal: 8,\n  },\n  content: {\n    justifyContent: 'center',\n  },\n  md3LeadingIcon: {\n    marginLeft: 12,\n  },\n  md3WithoutLeadingIcon: {\n    marginLeft: 4,\n  },\n});\n\nexport default withTheme(MenuItem);\n"]},"metadata":{},"sourceType":"script"}