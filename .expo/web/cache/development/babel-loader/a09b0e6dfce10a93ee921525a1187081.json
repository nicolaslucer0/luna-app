{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _theming = require(\"../../../core/theming\");\n\nvar _AnimatedText = _interopRequireDefault(require(\"../../Typography/AnimatedText\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar LabelBackground = function LabelBackground(_ref) {\n  var parentState = _ref.parentState,\n      _ref$labelProps = _ref.labelProps,\n      placeholderStyle = _ref$labelProps.placeholderStyle,\n      baseLabelTranslateX = _ref$labelProps.baseLabelTranslateX,\n      topPosition = _ref$labelProps.topPosition,\n      hasActiveOutline = _ref$labelProps.hasActiveOutline,\n      label = _ref$labelProps.label,\n      backgroundColor = _ref$labelProps.backgroundColor,\n      roundness = _ref$labelProps.roundness,\n      labelStyle = _ref.labelStyle,\n      maxFontSizeMultiplier = _ref.maxFontSizeMultiplier;\n  var hasFocus = hasActiveOutline || parentState.value;\n  var opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0]\n  });\n\n  var _useTheme = (0, _theming.useTheme)(),\n      isV3 = _useTheme.isV3;\n\n  var labelTranslationX = {\n    translateX: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-baseLabelTranslateX, 0]\n    })\n  };\n  var labelTextScaleY = {\n    scaleY: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.2, 1]\n    })\n  };\n  var labelTextTransform = [].concat((0, _toConsumableArray2.default)(labelStyle.transform), [labelTextScaleY]);\n  var labelTextWidth = isV3 ? {\n    width: parentState.labelLayout.width - placeholderStyle.paddingHorizontal\n  } : {\n    maxWidth: parentState.labelLayout.width - 2 * placeholderStyle.paddingHorizontal\n  };\n  return label ? [React.createElement(_reactNative.Animated.View, {\n    key: \"labelBackground-view\",\n    pointerEvents: \"none\",\n    style: [_reactNative.StyleSheet.absoluteFill, styles.view, {\n      backgroundColor: backgroundColor,\n      maxHeight: Math.max(roundness / 3, 2),\n      opacity: opacity,\n      bottom: Math.max(roundness, 2),\n      transform: [labelTranslationX]\n    }]\n  }), React.createElement(_AnimatedText.default, {\n    key: \"labelBackground-text\",\n    style: [placeholderStyle, labelStyle, styles.outlinedLabel, isV3 && styles.md3OutlinedLabel, {\n      top: topPosition + 1,\n      backgroundColor: backgroundColor,\n      opacity: opacity,\n      transform: labelTextTransform\n    }, labelTextWidth],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, label)] : null;\n};\n\nvar _default = LabelBackground;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent'\n  },\n  md3OutlinedLabel: {\n    left: 8\n  }\n});","map":{"version":3,"mappings":"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","names":["LabelBackground","parentState","labelProps","placeholderStyle","baseLabelTranslateX","topPosition","hasActiveOutline","label","backgroundColor","roundness","labelStyle","maxFontSizeMultiplier","hasFocus","value","opacity","labeled","interpolate","inputRange","outputRange","useTheme","isV3","labelTranslationX","translateX","labelTextScaleY","scaleY","labelTextTransform","transform","labelTextWidth","width","labelLayout","paddingHorizontal","maxWidth","React","Animated","View","key","pointerEvents","style","StyleSheet","absoluteFill","styles","view","maxHeight","Math","max","bottom","AnimatedText","outlinedLabel","md3OutlinedLabel","top","numberOfLines","create","position","left","color"],"sources":["LabelBackground.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport { useTheme } from '../../../core/theming';\n\nimport AnimatedText from '../../Typography/AnimatedText';\n\nimport type { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  parentState,\n  labelProps: {\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    hasActiveOutline,\n    label,\n    backgroundColor,\n    roundness,\n  },\n  labelStyle,\n  maxFontSizeMultiplier,\n}: LabelBackgroundProps) => {\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0],\n  });\n\n  const { isV3 } = useTheme();\n\n  const labelTranslationX = {\n    translateX: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-baseLabelTranslateX, 0],\n    }),\n  };\n\n  const labelTextScaleY = {\n    scaleY: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.2, 1],\n    }),\n  };\n\n  const labelTextTransform = [...labelStyle.transform, labelTextScaleY];\n\n  const labelTextWidth = isV3\n    ? {\n        width:\n          parentState.labelLayout.width - placeholderStyle.paddingHorizontal,\n      }\n    : {\n        maxWidth:\n          parentState.labelLayout.width -\n          2 * placeholderStyle.paddingHorizontal,\n      };\n\n  return label\n    ? [\n        <Animated.View\n          key=\"labelBackground-view\"\n          pointerEvents=\"none\"\n          style={[\n            StyleSheet.absoluteFill,\n            styles.view,\n            {\n              backgroundColor,\n              maxHeight: Math.max(roundness / 3, 2),\n              opacity,\n              bottom: Math.max(roundness, 2),\n              transform: [labelTranslationX],\n            },\n          ]}\n        />,\n        <AnimatedText\n          key=\"labelBackground-text\"\n          style={[\n            placeholderStyle,\n            labelStyle,\n            styles.outlinedLabel,\n            isV3 && styles.md3OutlinedLabel,\n            {\n              top: topPosition + 1,\n              backgroundColor,\n              opacity,\n              transform: labelTextTransform,\n            },\n            labelTextWidth,\n          ]}\n          numberOfLines={1}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n        >\n          {label}\n        </AnimatedText>,\n      ]\n    : null;\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12,\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n  md3OutlinedLabel: {\n    left: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}