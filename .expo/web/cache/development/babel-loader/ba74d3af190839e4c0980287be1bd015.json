{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _GestureHandler2 = _interopRequireDefault(require(\"./GestureHandler\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar DraggingGestureHandler = function (_GestureHandler) {\n  (0, _inherits2.default)(DraggingGestureHandler, _GestureHandler);\n\n  var _super = _createSuper(DraggingGestureHandler);\n\n  function DraggingGestureHandler() {\n    (0, _classCallCheck2.default)(this, DraggingGestureHandler);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(DraggingGestureHandler, [{\n    key: \"shouldEnableGestureOnSetup\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_ref) {\n      var deltaX = _ref.deltaX,\n          deltaY = _ref.deltaY,\n          velocityX = _ref.velocityX,\n          velocityY = _ref.velocityY,\n          _ref$center = _ref.center,\n          x = _ref$center.x,\n          y = _ref$center.y;\n      var rect = this.view.getBoundingClientRect();\n\n      var ratio = _reactNative.PixelRatio.get();\n\n      return {\n        translationX: deltaX - (this.__initialX || 0),\n        translationY: deltaY - (this.__initialY || 0),\n        absoluteX: x,\n        absoluteY: y,\n        velocityX: velocityX * ratio,\n        velocityY: velocityY * ratio,\n        x: x - rect.left,\n        y: y - rect.top\n      };\n    }\n  }]);\n  return DraggingGestureHandler;\n}(_GestureHandler2.default);\n\nvar _default = DraggingGestureHandler;\nexports.default = _default;","map":{"version":3,"sources":["DraggingGestureHandler.ts"],"names":["shouldEnableGestureOnSetup","transformNativeEvent","center","y","rect","ratio","PixelRatio","translationX","deltaX","translationY","deltaY","absoluteX","absoluteY","velocityX","velocityY","x","top"],"mappings":";;;;;;;;;;;;;;;;;AAEA;;AACA;;;;;;IAEA,sB;;;;;;;;;;;;SACMA,eAA6B;MAC/B,OAAA,IAAA;IACD;;;WAEDC,oCAMmB;MAAA,IANE,MAMF,QANE,MAMF;MAAA,IANE,MAMF,QANE,MAMF;MAAA,IANE,SAMF,QANE,SAMF;MAAA,IANE,SAMF,QANE,SAMF;MAAA,uBADjBC,MACiB;MAAA,IADT,CACS,eADT,CACS;MAAA,IADJC,CACI,eADJA,CACI;MAEjB,IAAMC,IAAI,GAAG,KAAA,IAAA,CAAb,qBAAa,EAAb;;MACA,IAAMC,KAAK,GAAGC,uBAAAA,CAAd,GAAcA,EAAd;;MACA,OAAO;QACLC,YAAY,EAAEC,MAAM,IAAI,KAAA,UAAA,IADnB,CACe,CADf;QAELC,YAAY,EAAEC,MAAM,IAAI,KAAA,UAAA,IAFnB,CAEe,CAFf;QAGLC,SAAS,EAHJ,CAAA;QAILC,SAAS,EAJJ,CAAA;QAKLC,SAAS,EAAEA,SAAS,GALf,KAAA;QAMLC,SAAS,EAAEA,SAAS,GANf,KAAA;QAOLC,CAAC,EAAEA,CAAC,GAAGX,IAAI,CAPN,IAAA;QAQLD,CAAC,EAAEA,CAAC,GAAGC,IAAI,CAACY;MARP,CAAP;IAUD;;;EAzBH,wB;;eA4BA,sB","sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport GestureHandler, { HammerInputExt } from './GestureHandler';\nimport { PixelRatio } from 'react-native';\n\nabstract class DraggingGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return true;\n  }\n\n  transformNativeEvent({\n    deltaX,\n    deltaY,\n    velocityX,\n    velocityY,\n    center: { x, y },\n  }: HammerInputExt) {\n    // @ts-ignore FIXME(TS)\n    const rect = this.view!.getBoundingClientRect();\n    const ratio = PixelRatio.get();\n    return {\n      translationX: deltaX - (this.__initialX || 0),\n      translationY: deltaY - (this.__initialY || 0),\n      absoluteX: x,\n      absoluteY: y,\n      velocityX: velocityX * ratio,\n      velocityY: velocityY * ratio,\n      x: x - rect.left,\n      y: y - rect.top,\n    };\n  }\n}\n\nexport default DraggingGestureHandler;\n"]},"metadata":{},"sourceType":"script"}