{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar NavigationActions = _interopRequireWildcard(require(\"../NavigationActions\"));\n\nvar _invariant = _interopRequireDefault(require(\"../utils/invariant\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar getNavigationActionCreators = function getNavigationActionCreators(route) {\n  return {\n    goBack: function goBack(key) {\n      var actualizedKey = key;\n\n      if (key === undefined && route.key) {\n        (0, _invariant.default)(typeof route.key === 'string', 'key should be a string');\n        actualizedKey = route.key;\n      }\n\n      return NavigationActions.back({\n        key: actualizedKey\n      });\n    },\n    navigate: function navigate(navigateTo, params, action) {\n      if (typeof navigateTo === 'string') {\n        return NavigationActions.navigate({\n          routeName: navigateTo,\n          params: params,\n          action: action\n        });\n      }\n\n      (0, _invariant.default)(typeof navigateTo === 'object', 'Must navigateTo an object or a string');\n      (0, _invariant.default)(params == null, 'Params must not be provided to .navigate() when specifying an object');\n      (0, _invariant.default)(action == null, 'Child action must not be provided to .navigate() when specifying an object');\n      return NavigationActions.navigate(navigateTo);\n    },\n    setParams: function setParams(params) {\n      (0, _invariant.default)(route.key && typeof route.key === 'string', 'setParams cannot be called by root navigator');\n      return NavigationActions.setParams({\n        params: params,\n        key: route.key\n      });\n    }\n  };\n};\n\nvar _default = getNavigationActionCreators;\nexports.default = _default;","map":{"version":3,"sources":["getNavigationActionCreators.ts"],"names":["getNavigationActionCreators","route","goBack","key","actualizedKey","invariant","navigate","routeName","params","action","NavigationActions","setParams"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAOA,IAAMA,2BAA2B,GAAIC,SAA/BD,2BAA+BC,CAAAA,KAAD,EAAgB;EAClD,OAAO;IACLC,MAAM,EAAGC,gBAAAA,GAAD,EAAyB;MAC/B,IAAIC,aAAa,GAAjB,GAAA;;MACA,IAAID,GAAG,KAAHA,SAAAA,IAAqBF,KAAK,CAA9B,GAAA,EAAoC;QAClCI,IAAAA,kBAAAA,EAAU,OAAOJ,KAAK,CAAZ,GAAA,KAAD,QAATI,EAAAA,wBAAAA;QACAD,aAAa,GAAGH,KAAK,CAArBG,GAAAA;MACD;;MACD,OAAO,iBAAiB,CAAjB,IAAA,CAAuB;QAAED,GAAG,EAAEC;MAAP,CAAvB,CAAP;IAPG,CAAA;IASLE,QAAQ,EAAE,kBAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAIL;MACH,IAAI,OAAA,UAAA,KAAJ,QAAA,EAAoC;QAClC,OAAO,iBAAiB,CAAjB,QAAA,CAA2B;UAChCC,SAAS,EADuB,UAAA;UAEhCC,MAFgC,EAEhCA,MAFgC;UAGhCC,MAAAA,EAAAA;QAHgC,CAA3B,CAAP;MAKD;;MACDJ,IAAAA,kBAAAA,EACE,OAAA,UAAA,KADO,QAATA,EAAAA,uCAAAA;MAIAA,IAAAA,kBAAAA,EACEG,MAAM,IADC,IAATH,EAAAA,sEAAAA;MAIAA,IAAAA,kBAAAA,EACEI,MAAM,IADC,IAATJ,EAAAA,4EAAAA;MAIA,OAAOK,iBAAiB,CAAjBA,QAAAA,CAAP,UAAOA,CAAP;IAjCG,CAAA;IAmCLC,SAAS,EAAGH,mBAAAA,MAAD,EAA+B;MACxCH,IAAAA,kBAAAA,EACEJ,KAAK,CAALA,GAAAA,IAAa,OAAOA,KAAK,CAAZ,GAAA,KADN,QAATI,EAAAA,8CAAAA;MAIA,OAAO,iBAAiB,CAAjB,SAAA,CAA4B;QAAEG,MAAF,EAAEA,MAAF;QAAUL,GAAG,EAAEF,KAAK,CAACE;MAArB,CAA5B,CAAP;IACD;EAzCI,CAAP;AADF,CAAA;;eA8CA,2B","sourcesContent":["import * as NavigationActions from '../NavigationActions';\nimport invariant from '../utils/invariant';\n\ninterface NavigationParams {\n  [key: string]: any;\n}\n\n// TODO: Type `route`\nconst getNavigationActionCreators = (route: any) => {\n  return {\n    goBack: (key?: string | null) => {\n      let actualizedKey = key;\n      if (key === undefined && route.key) {\n        invariant(typeof route.key === 'string', 'key should be a string');\n        actualizedKey = route.key;\n      }\n      return NavigationActions.back({ key: actualizedKey });\n    },\n    navigate: (\n      navigateTo: string | NavigationActions.NavigationNavigateActionPayload,\n      params?: NavigationParams,\n      action?: NavigationActions.NavigationNavigateAction\n    ) => {\n      if (typeof navigateTo === 'string') {\n        return NavigationActions.navigate({\n          routeName: navigateTo,\n          params,\n          action,\n        });\n      }\n      invariant(\n        typeof navigateTo === 'object',\n        'Must navigateTo an object or a string'\n      );\n      invariant(\n        params == null,\n        'Params must not be provided to .navigate() when specifying an object'\n      );\n      invariant(\n        action == null,\n        'Child action must not be provided to .navigate() when specifying an object'\n      );\n      return NavigationActions.navigate(navigateTo);\n    },\n    setParams: (params?: NavigationParams) => {\n      invariant(\n        route.key && typeof route.key === 'string',\n        'setParams cannot be called by root navigator'\n      );\n      return NavigationActions.setParams({ params, key: route.key });\n    },\n  };\n};\n\nexport default getNavigationActionCreators;\n"]},"metadata":{},"sourceType":"script"}