{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.AppbarHeader = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Appbar = require(\"./Appbar\");\n\nvar _shadow = _interopRequireDefault(require(\"../../styles/shadow\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _constants = require(\"../../constants\");\n\nvar _utils = require(\"./utils\");\n\nvar _excluded = [\"statusBarHeight\", \"style\", \"dark\", \"mode\", \"elevated\"],\n    _excluded2 = [\"height\", \"elevation\", \"backgroundColor\", \"zIndex\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar AppbarHeader = function AppbarHeader(_ref) {\n  var statusBarHeight = _ref.statusBarHeight,\n      style = _ref.style,\n      dark = _ref.dark,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? _reactNative.Platform.OS === 'ios' ? 'center-aligned' : 'small' : _ref$mode,\n      _ref$elevated = _ref.elevated,\n      elevated = _ref$elevated === void 0 ? false : _ref$elevated,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var isV3 = rest.theme.isV3;\n\n  var _ref2 = _reactNative.StyleSheet.flatten(style) || {},\n      _ref2$height = _ref2.height,\n      height = _ref2$height === void 0 ? isV3 ? _utils.modeAppbarHeight[mode] : _utils.DEFAULT_APPBAR_HEIGHT : _ref2$height,\n      _ref2$elevation = _ref2.elevation,\n      elevation = _ref2$elevation === void 0 ? isV3 ? elevated ? 2 : 0 : 4 : _ref2$elevation,\n      customBackground = _ref2.backgroundColor,\n      _ref2$zIndex = _ref2.zIndex,\n      zIndex = _ref2$zIndex === void 0 ? isV3 && elevated ? 1 : 0 : _ref2$zIndex,\n      restStyle = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);\n\n  var backgroundColor = (0, _utils.getAppbarColor)(rest.theme, elevation, customBackground, elevated);\n  var Wrapper = typeof statusBarHeight === 'number' ? _reactNative.View : _reactNative.SafeAreaView;\n  return React.createElement(Wrapper, {\n    style: [{\n      backgroundColor: backgroundColor,\n      zIndex: zIndex,\n      elevation: elevation,\n      paddingTop: statusBarHeight !== null && statusBarHeight !== void 0 ? statusBarHeight : _constants.APPROX_STATUSBAR_HEIGHT\n    }, (0, _shadow.default)(elevation)]\n  }, React.createElement(_Appbar.Appbar, _extends({\n    style: [{\n      height: height,\n      backgroundColor: backgroundColor\n    }, styles.appbar, restStyle],\n    dark: dark\n  }, isV3 && {\n    mode: mode\n  }, rest)));\n};\n\nAppbarHeader.displayName = 'Appbar.Header';\n\nvar styles = _reactNative.StyleSheet.create({\n  appbar: {\n    elevation: 0\n  }\n});\n\nvar _default = (0, _theming.withTheme)(AppbarHeader);\n\nexports.default = _default;\nvar AppbarHeaderWithTheme = (0, _theming.withTheme)(AppbarHeader);\nexports.AppbarHeader = AppbarHeaderWithTheme;","map":{"version":3,"sources":["AppbarHeader.tsx"],"names":["AppbarHeader","mode","Platform","elevated","rest","isV3","height","modeAppbarHeight","elevation","backgroundColor","zIndex","restStyle","StyleSheet","getAppbarColor","Wrapper","paddingTop","statusBarHeight","APPROX_STATUSBAR_HEIGHT","shadow","styles","dark","appbar","withTheme","AppbarHeaderWithTheme"],"mappings":";;;;;;;;;AAAA;;AACA;;AAQA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAA,IAAA,EAQR;EARS,IAAA,eAAA,GAQT,IARS,CAAA,eAAA;EAAA,IAAA,KAAA,GAQT,IARS,CAAA,KAAA;EAAA,IAAA,IAAA,GAQT,IARS,CAAA,IAAA;EAAA,gBAQT,IARS,CAKpBC,IALoB;EAAA,IAKpBA,IALoB,0BAKbC,qBAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GAAAA,gBAAAA,GALa,OAAA;EAAA,oBAQT,IARS,CAMpBC,QANoB;EAAA,IAMpBA,QANoB,8BAAA,KAAA;EAAA,IAOjBC,IAPiB,0CAQT,IARS;EASpB,IAAQC,IAAR,GAAiBD,IAAI,CAArB,KAAA,CAAQC,IAAR;;EAEA,YAMeO,uBAAAA,CAAAA,OAAAA,CAAAA,KAAAA,KANf,EAAA;EAAA,yBACEN,MADF;EAAA,IACEA,MADF,6BACWD,IAAI,GAAGE,uBAAAA,CAAH,IAAGA,CAAH,GADT,4BAAN;EAAA,4BAEEC,SAFF;EAAA,IAEEA,SAFF,gCAEcH,IAAI,GAAIF,QAAQ,GAAA,CAAA,GAAZ,CAAA,GAFZ,CAAN;EAAA,IAAM,gBAAN,SAGEM,eAHF;EAAA,yBAIEC,MAJF;EAAA,IAIEA,MAJF,6BAIWL,IAAI,IAAJA,QAAAA,GAAAA,CAAAA,GAJL,CAAN;EAAA,IAKKM,SALL;;EAQA,IAAMF,eAAe,GAAGI,IAAAA,qBAAAA,EACtBT,IAAI,CADgC,KAAdS,EAAc,SAAdA,EAAc,gBAAdA,EAXb,QAWaA,CAAxB;EAQA,IAAMC,OAAO,GAAG,OAAA,eAAA,KAAA,QAAA,GAAA,iBAAA,GAAhB,yBAAA;EACA,OACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;IACE,KAAK,EACH,CACE;MACEL,eADF,EACEA,eADF;MAEEC,MAFF,EAEEA,MAFF;MAGEF,SAHF,EAGEA,SAHF;MAIEO,UAAU,EAAEC,eAAF,KAAA,IAAEA,IAAAA,eAAF,KAAA,KAAA,CAAEA,GAAF,eAAEA,GAAmBC;IAJjC,CADF,EAOEC,IAAAA,eAAAA,EAPF,SAOEA,CAPF;EAFJ,CAAA,EAaE,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,QAAA,CAAA;IACE,KAAK,EAAE,CAAC;MAAEZ,MAAF,EAAEA,MAAF;MAAUG,eAAAA,EAAAA;IAAV,CAAD,EAA8BU,MAAM,CAApC,MAAA,EADT,SACS,CADT;IAEE,IAAI,EAAEC;EAFR,CAAA,EAGOf,IAAI,IAAI;IACXJ,IAAAA,EAAAA;EADW,CAHf,EAdJ,IAcI,CAAA,CAbF,CADF;AA5BF,CAAA;;AAsDAD,YAAY,CAAZA,WAAAA,GAAAA,eAAAA;;AAEA,IAAMmB,MAAM,GAAG,uBAAA,CAAA,MAAA,CAAkB;EAC/BE,MAAM,EAAE;IACNb,SAAS,EAAE;EADL;AADuB,CAAlB,CAAf;;eAMec,IAAAA,kBAAAA,EAAf,YAAeA,C;;;AAGf,IAAMC,qBAAqB,GAAGD,IAAAA,kBAAAA,EAA9B,YAA8BA,CAA9B","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  SafeAreaView,\n  ViewStyle,\n  Platform,\n} from 'react-native';\nimport { Appbar } from './Appbar';\nimport shadow from '../../styles/shadow';\nimport { withTheme } from '../../core/theming';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\nimport type { Theme } from '../../types';\nimport {\n  DEFAULT_APPBAR_HEIGHT,\n  getAppbarColor,\n  modeAppbarHeight,\n} from './utils';\n\nexport type Props = React.ComponentProps<typeof Appbar> & {\n  /**\n   * Whether the background color is a dark color. A dark header will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Extra padding to add at the top of header to account for translucent status bar.\n   * This is automatically handled on iOS >= 11 including iPhone X using `SafeAreaView`.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to disable the default behaviour, and customize the height.\n   */\n  statusBarHeight?: number;\n  /**\n   * Content of the header.\n   */\n  children: React.ReactNode;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Mode of the Appbar.\n   * - `small` - Appbar with default height (56).\n   * - `medium` - Appbar with medium height (112).\n   * - `large` - Appbar with large height (152).\n   * - `center-aligned` - Appbar with default height and center-aligned title.\n   */\n  mode?: 'small' | 'medium' | 'large' | 'center-aligned';\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether Appbar background should have the elevation along with primary color pigment.\n   */\n  elevated?: boolean;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to use as a header at the top of the screen.\n * It can contain the screen title, controls such as navigation buttons, menu button etc.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/appbar-small.png\" />\n *     <figcaption>small</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/appbar-medium.png\" />\n *     <figcaption>medium</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/appbar-large.png\" />\n *     <figcaption>large</figcaption>\n *   </figure>\n *  <figure>\n *     <img class=\"small\" src=\"screenshots/appbar-center-aligned.png\" />\n *     <figcaption>center-aligned</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const _goBack = () => console.log('Went back');\n *\n *   const _handleSearch = () => console.log('Searching');\n *\n *   const _handleMore = () => console.log('Shown more');\n *\n *   return (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={_goBack} />\n *       <Appbar.Content title=\"Title\" />\n *       <Appbar.Action icon=\"magnify\" onPress={_handleSearch} />\n *       <Appbar.Action icon=\"dots-vertical\" onPress={_handleMore} />\n *     </Appbar.Header>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarHeader = ({\n  // Don't use default props since we check it to know whether we should use SafeAreaView\n  statusBarHeight,\n  style,\n  dark,\n  mode = Platform.OS === 'ios' ? 'center-aligned' : 'small',\n  elevated = false,\n  ...rest\n}: Props) => {\n  const { isV3 } = rest.theme;\n\n  const {\n    height = isV3 ? modeAppbarHeight[mode] : DEFAULT_APPBAR_HEIGHT,\n    elevation = isV3 ? (elevated ? 2 : 0) : 4,\n    backgroundColor: customBackground,\n    zIndex = isV3 && elevated ? 1 : 0,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n\n  const backgroundColor = getAppbarColor(\n    rest.theme,\n    elevation,\n    customBackground,\n    elevated\n  );\n\n  // Let the user override the behaviour\n  const Wrapper = typeof statusBarHeight === 'number' ? View : SafeAreaView;\n  return (\n    <Wrapper\n      style={\n        [\n          {\n            backgroundColor,\n            zIndex,\n            elevation,\n            paddingTop: statusBarHeight ?? APPROX_STATUSBAR_HEIGHT,\n          },\n          shadow(elevation),\n        ] as StyleProp<ViewStyle>\n      }\n    >\n      <Appbar\n        style={[{ height, backgroundColor }, styles.appbar, restStyle]}\n        dark={dark}\n        {...(isV3 && {\n          mode,\n        })}\n        {...rest}\n      />\n    </Wrapper>\n  );\n};\n\nAppbarHeader.displayName = 'Appbar.Header';\n\nconst styles = StyleSheet.create({\n  appbar: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(AppbarHeader);\n\n// @component-docs ignore-next-line\nconst AppbarHeaderWithTheme = withTheme(AppbarHeader);\n// @component-docs ignore-next-line\nexport { AppbarHeaderWithTheme as AppbarHeader };\n"]},"metadata":{},"sourceType":"script"}