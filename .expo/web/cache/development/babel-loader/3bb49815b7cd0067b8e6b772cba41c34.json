{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeIphoneXHelper = require(\"react-native-iphone-x-helper\");\n\nvar _Surface = _interopRequireDefault(require(\"./Surface\"));\n\nvar _theming = require(\"../core/theming\");\n\nvar _useAnimatedValue = _interopRequireDefault(require(\"../utils/useAnimatedValue\"));\n\nvar _addEventListener = require(\"../utils/addEventListener\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar DEFAULT_DURATION = 220;\nvar TOP_INSET = (0, _reactNativeIphoneXHelper.getStatusBarHeight)(true);\nvar BOTTOM_INSET = (0, _reactNativeIphoneXHelper.getBottomSpace)();\n\nfunction Modal(_ref) {\n  var _theme$colors;\n\n  var _ref$dismissable = _ref.dismissable,\n      dismissable = _ref$dismissable === void 0 ? true : _ref$dismissable,\n      _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? false : _ref$visible,\n      _ref$overlayAccessibi = _ref.overlayAccessibilityLabel,\n      overlayAccessibilityLabel = _ref$overlayAccessibi === void 0 ? 'Close modal' : _ref$overlayAccessibi,\n      onDismiss = _ref.onDismiss,\n      children = _ref.children,\n      contentContainerStyle = _ref.contentContainerStyle,\n      style = _ref.style,\n      theme = _ref.theme,\n      _ref$testID = _ref.testID,\n      testID = _ref$testID === void 0 ? 'modal' : _ref$testID;\n  var visibleRef = React.useRef(visible);\n  React.useEffect(function () {\n    visibleRef.current = visible;\n  });\n  var scale = theme.animation.scale;\n  var opacity = (0, _useAnimatedValue.default)(visible ? 1 : 0);\n\n  var _React$useState = React.useState(visible),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      rendered = _React$useState2[0],\n      setRendered = _React$useState2[1];\n\n  if (visible && !rendered) {\n    setRendered(true);\n  }\n\n  var handleBack = function handleBack() {\n    if (dismissable) {\n      hideModal();\n    }\n\n    return true;\n  };\n\n  var subscription = React.useRef(undefined);\n\n  var showModal = function showModal() {\n    var _subscription$current;\n\n    (_subscription$current = subscription.current) === null || _subscription$current === void 0 ? void 0 : _subscription$current.remove();\n    subscription.current = (0, _addEventListener.addEventListener)(_reactNative.BackHandler, 'hardwareBackPress', handleBack);\n\n    _reactNative.Animated.timing(opacity, {\n      toValue: 1,\n      duration: scale * DEFAULT_DURATION,\n      easing: _reactNative.Easing.out(_reactNative.Easing.cubic),\n      useNativeDriver: true\n    }).start();\n  };\n\n  var removeListeners = function removeListeners() {\n    var _subscription$current2;\n\n    if ((_subscription$current2 = subscription.current) !== null && _subscription$current2 !== void 0 && _subscription$current2.remove) {\n      var _subscription$current3;\n\n      (_subscription$current3 = subscription.current) === null || _subscription$current3 === void 0 ? void 0 : _subscription$current3.remove();\n    } else {\n      _reactNative.BackHandler.removeEventListener('hardwareBackPress', handleBack);\n    }\n  };\n\n  var hideModal = function hideModal() {\n    removeListeners();\n\n    _reactNative.Animated.timing(opacity, {\n      toValue: 0,\n      duration: scale * DEFAULT_DURATION,\n      easing: _reactNative.Easing.out(_reactNative.Easing.cubic),\n      useNativeDriver: true\n    }).start(function (_ref2) {\n      var finished = _ref2.finished;\n\n      if (!finished) {\n        return;\n      }\n\n      if (visible && onDismiss) {\n        onDismiss();\n      }\n\n      if (visibleRef.current) {\n        showModal();\n      } else {\n        setRendered(false);\n      }\n    });\n  };\n\n  var prevVisible = React.useRef(null);\n  React.useEffect(function () {\n    if (prevVisible.current !== visible) {\n      if (visible) {\n        showModal();\n      } else {\n        hideModal();\n      }\n    }\n\n    prevVisible.current = visible;\n  });\n  React.useEffect(function () {\n    return removeListeners;\n  }, []);\n  if (!rendered) return null;\n  return React.createElement(_reactNative.Animated.View, {\n    pointerEvents: visible ? 'auto' : 'none',\n    accessibilityViewIsModal: true,\n    accessibilityLiveRegion: \"polite\",\n    style: _reactNative.StyleSheet.absoluteFill,\n    onAccessibilityEscape: hideModal,\n    testID: testID\n  }, React.createElement(_reactNative.TouchableWithoutFeedback, {\n    accessibilityLabel: overlayAccessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: !dismissable,\n    onPress: dismissable ? hideModal : undefined,\n    importantForAccessibility: \"no\"\n  }, React.createElement(_reactNative.Animated.View, {\n    testID: testID + \"-backdrop\",\n    style: [styles.backdrop, {\n      backgroundColor: (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.backdrop,\n      opacity: opacity\n    }]\n  })), React.createElement(_reactNative.View, {\n    style: [styles.wrapper, {\n      marginTop: TOP_INSET,\n      marginBottom: BOTTOM_INSET\n    }, style],\n    pointerEvents: \"box-none\"\n  }, React.createElement(_Surface.default, {\n    style: [{\n      opacity: opacity\n    }, styles.content, contentContainerStyle]\n  }, children)));\n}\n\nvar _default = (0, _theming.withTheme)(Modal);\n\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  backdrop: {\n    flex: 1\n  },\n  wrapper: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n    justifyContent: 'center'\n  }),\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"mappings":"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","names":["DEFAULT_DURATION","TOP_INSET","getStatusBarHeight","BOTTOM_INSET","getBottomSpace","Modal","dismissable","visible","overlayAccessibilityLabel","onDismiss","children","contentContainerStyle","style","theme","testID","visibleRef","React","useRef","useEffect","current","scale","animation","opacity","useAnimatedValue","useState","rendered","setRendered","handleBack","hideModal","subscription","undefined","showModal","remove","addEventListener","BackHandler","Animated","timing","toValue","duration","easing","Easing","out","cubic","useNativeDriver","start","removeListeners","_subscription$current2","removeEventListener","finished","prevVisible","View","pointerEvents","accessibilityViewIsModal","accessibilityLiveRegion","StyleSheet","absoluteFill","onAccessibilityEscape","TouchableWithoutFeedback","accessibilityLabel","accessibilityRole","disabled","onPress","importantForAccessibility","styles","backdrop","backgroundColor","colors","_theme$colors","wrapper","marginTop","marginBottom","Surface","content","withTheme","create","flex","absoluteFillObject","justifyContent"],"sources":["Modal.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  BackHandler,\n  Easing,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  ViewStyle,\n  View,\n  NativeEventSubscription,\n} from 'react-native';\nimport {\n  getStatusBarHeight,\n  getBottomSpace,\n} from 'react-native-iphone-x-helper';\nimport Surface from './Surface';\nimport { withTheme } from '../core/theming';\nimport useAnimatedValue from '../utils/useAnimatedValue';\nimport { addEventListener } from '../utils/addEventListener';\n\nexport type Props = {\n  /**\n   * Determines whether clicking outside the modal dismiss it.\n   */\n  dismissable?: boolean;\n  /**\n   * Callback that is called when the user dismisses the modal.\n   */\n  onDismiss?: () => void;\n  /**\n   * Accessibility label for the overlay. This is read by the screen reader when the user taps outside the modal.\n   */\n  overlayAccessibilityLabel?: string;\n  /**\n   * Determines Whether the modal is visible.\n   */\n  visible: boolean;\n  /**\n   * Content of the `Modal`.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the content of the modal\n   */\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style for the wrapper of the modal.\n   * Use this prop to change the default wrapper style or to override safe area insets with marginTop and marginBottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst DEFAULT_DURATION = 220;\nconst TOP_INSET = getStatusBarHeight(true);\nconst BOTTOM_INSET = getBottomSpace();\n\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n * To render the `Modal` above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/modal.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Modal, Portal, Text, Button, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const showModal = () => setVisible(true);\n *   const hideModal = () => setVisible(false);\n *   const containerStyle = {backgroundColor: 'white', padding: 20};\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={containerStyle}>\n *           <Text>Example Modal.  Click outside this area to dismiss.</Text>\n *         </Modal>\n *       </Portal>\n *       <Button style={{marginTop: 30}} onPress={showModal}>\n *         Show\n *       </Button>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nfunction Modal({\n  dismissable = true,\n  visible = false,\n  overlayAccessibilityLabel = 'Close modal',\n  onDismiss,\n  children,\n  contentContainerStyle,\n  style,\n  theme,\n  testID = 'modal',\n}: Props) {\n  const visibleRef = React.useRef(visible);\n\n  React.useEffect(() => {\n    visibleRef.current = visible;\n  });\n\n  const { scale } = theme.animation;\n\n  const opacity = useAnimatedValue(visible ? 1 : 0);\n\n  const [rendered, setRendered] = React.useState(visible);\n\n  if (visible && !rendered) {\n    setRendered(true);\n  }\n\n  const handleBack = () => {\n    if (dismissable) {\n      hideModal();\n    }\n    return true;\n  };\n\n  const subscription = React.useRef<NativeEventSubscription | undefined>(\n    undefined\n  );\n\n  const showModal = () => {\n    subscription.current?.remove();\n    subscription.current = addEventListener(\n      BackHandler,\n      'hardwareBackPress',\n      handleBack\n    );\n\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const removeListeners = () => {\n    if (subscription.current?.remove) {\n      subscription.current?.remove();\n    } else {\n      BackHandler.removeEventListener('hardwareBackPress', handleBack);\n    }\n  };\n\n  const hideModal = () => {\n    removeListeners();\n\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (!finished) {\n        return;\n      }\n\n      if (visible && onDismiss) {\n        onDismiss();\n      }\n\n      if (visibleRef.current) {\n        showModal();\n      } else {\n        setRendered(false);\n      }\n    });\n  };\n\n  const prevVisible = React.useRef<boolean | null>(null);\n\n  React.useEffect(() => {\n    if (prevVisible.current !== visible) {\n      if (visible) {\n        showModal();\n      } else {\n        hideModal();\n      }\n    }\n    prevVisible.current = visible;\n  });\n\n  React.useEffect(() => {\n    return removeListeners;\n  }, []);\n\n  if (!rendered) return null;\n\n  return (\n    <Animated.View\n      pointerEvents={visible ? 'auto' : 'none'}\n      accessibilityViewIsModal\n      accessibilityLiveRegion=\"polite\"\n      style={StyleSheet.absoluteFill}\n      onAccessibilityEscape={hideModal}\n      testID={testID}\n    >\n      <TouchableWithoutFeedback\n        accessibilityLabel={overlayAccessibilityLabel}\n        accessibilityRole=\"button\"\n        disabled={!dismissable}\n        onPress={dismissable ? hideModal : undefined}\n        importantForAccessibility=\"no\"\n      >\n        <Animated.View\n          testID={`${testID}-backdrop`}\n          style={[\n            styles.backdrop,\n            {\n              backgroundColor: theme.colors?.backdrop,\n              opacity,\n            },\n          ]}\n        />\n      </TouchableWithoutFeedback>\n      <View\n        style={[\n          styles.wrapper,\n          { marginTop: TOP_INSET, marginBottom: BOTTOM_INSET },\n          style,\n        ]}\n        pointerEvents=\"box-none\"\n      >\n        <Surface\n          style={\n            [\n              { opacity },\n              styles.content,\n              contentContainerStyle,\n            ] as StyleProp<ViewStyle>\n          }\n        >\n          {children}\n        </Surface>\n      </View>\n    </Animated.View>\n  );\n}\n\nexport default withTheme(Modal);\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    flex: 1,\n  },\n  wrapper: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n  },\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}