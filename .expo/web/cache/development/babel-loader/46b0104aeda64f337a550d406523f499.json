{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = PreventRemoveProvider;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _nonSecure = require(\"nanoid/non-secure\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _useLatestCallback = _interopRequireDefault(require(\"use-latest-callback\"));\n\nvar _NavigationHelpersContext = _interopRequireDefault(require(\"./NavigationHelpersContext\"));\n\nvar _NavigationRouteContext = _interopRequireDefault(require(\"./NavigationRouteContext\"));\n\nvar _PreventRemoveContext = _interopRequireDefault(require(\"./PreventRemoveContext\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar transformPreventedRoutes = function transformPreventedRoutes(preventedRoutesMap) {\n  var preventedRoutesToTransform = (0, _toConsumableArray2.default)(preventedRoutesMap.values());\n  var preventedRoutes = preventedRoutesToTransform.reduce(function (acc, _ref) {\n    var _acc$routeKey;\n\n    var routeKey = _ref.routeKey,\n        preventRemove = _ref.preventRemove;\n    acc[routeKey] = {\n      preventRemove: ((_acc$routeKey = acc[routeKey]) === null || _acc$routeKey === void 0 ? void 0 : _acc$routeKey.preventRemove) || preventRemove\n    };\n    return acc;\n  }, {});\n  return preventedRoutes;\n};\n\nfunction PreventRemoveProvider(_ref2) {\n  var children = _ref2.children;\n\n  var _React$useState = React.useState(function () {\n    return (0, _nonSecure.nanoid)();\n  }),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),\n      parentId = _React$useState2[0];\n\n  var _React$useState3 = React.useState(new Map()),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      preventedRoutesMap = _React$useState4[0],\n      setPreventedRoutesMap = _React$useState4[1];\n\n  var navigation = React.useContext(_NavigationHelpersContext.default);\n  var route = React.useContext(_NavigationRouteContext.default);\n  var preventRemoveContextValue = React.useContext(_PreventRemoveContext.default);\n  var setParentPrevented = preventRemoveContextValue === null || preventRemoveContextValue === void 0 ? void 0 : preventRemoveContextValue.setPreventRemove;\n  var setPreventRemove = (0, _useLatestCallback.default)(function (id, routeKey, preventRemove) {\n    if (preventRemove && (navigation == null || navigation !== null && navigation !== void 0 && navigation.getState().routes.every(function (route) {\n      return route.key !== routeKey;\n    }))) {\n      throw new Error(\"Couldn't find a route with the key \" + routeKey + \". Is your component inside NavigationContent?\");\n    }\n\n    setPreventedRoutesMap(function (prevPrevented) {\n      var _prevPrevented$get, _prevPrevented$get2;\n\n      if (routeKey === ((_prevPrevented$get = prevPrevented.get(id)) === null || _prevPrevented$get === void 0 ? void 0 : _prevPrevented$get.routeKey) && preventRemove === ((_prevPrevented$get2 = prevPrevented.get(id)) === null || _prevPrevented$get2 === void 0 ? void 0 : _prevPrevented$get2.preventRemove)) {\n        return prevPrevented;\n      }\n\n      var nextPrevented = new Map(prevPrevented);\n\n      if (preventRemove) {\n        nextPrevented.set(id, {\n          routeKey: routeKey,\n          preventRemove: preventRemove\n        });\n      } else {\n        nextPrevented.delete(id);\n      }\n\n      return nextPrevented;\n    });\n  });\n  var isPrevented = (0, _toConsumableArray2.default)(preventedRoutesMap.values()).some(function (_ref3) {\n    var preventRemove = _ref3.preventRemove;\n    return preventRemove;\n  });\n  React.useEffect(function () {\n    if ((route === null || route === void 0 ? void 0 : route.key) !== undefined && setParentPrevented !== undefined) {\n      setParentPrevented(parentId, route.key, isPrevented);\n      return function () {\n        setParentPrevented(parentId, route.key, false);\n      };\n    }\n\n    return;\n  }, [parentId, isPrevented, route === null || route === void 0 ? void 0 : route.key, setParentPrevented]);\n  var value = React.useMemo(function () {\n    return {\n      setPreventRemove: setPreventRemove,\n      preventedRoutes: transformPreventedRoutes(preventedRoutesMap)\n    };\n  }, [setPreventRemove, preventedRoutesMap]);\n  return React.createElement(_PreventRemoveContext.default.Provider, {\n    value: value\n  }, children);\n}","map":{"version":3,"sources":["PreventRemoveProvider.tsx"],"names":["transformPreventedRoutes","preventedRoutesMap","preventedRoutesToTransform","preventedRoutes","preventRemove","acc","children","React","navigation","route","preventRemoveContextValue","setParentPrevented","setPreventRemove","useLatestCallback","setPreventedRoutesMap","prevPrevented","routeKey","nextPrevented","isPrevented","value"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAiBA,IAAMA,wBAAwB,GAC5BC,SADID,wBACJC,CAAAA,kBAD+B,EAEX;EACpB,IAAMC,0BAA0B,oCAAOD,kBAAkB,CAAzD,MAAuCA,EAAP,CAAhC;EAEA,IAAME,eAAe,GAAG,0BAA0B,CAA1B,MAAA,CACtB,UAAA,GAAA,EAAA,IAAA,EAAsC;IAAA,IAAA,aAAA;;IAAhC,IAAA,QAAA,GAAgC,IAAhC,CAAA,QAAA;IAAA,IAAYC,aAAZ,GAAgC,IAAhC,CAAYA,aAAZ;IACJC,GAAG,CAAHA,QAAG,CAAHA,GAAgB;MACdD,aAAa,EAAE,CAAA,CAAA,aAAA,GAAA,GAAG,CAAH,QAAG,CAAH,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,aAAA,CAAA,aAAA,KAAgCA;IADjC,CAAhBC;IAGA,OAAA,GAAA;EALoB,CAAA,EAAxB,EAAwB,CAAxB;EAUA,OAAA,eAAA;AAfF,CAAA;;AAqBe,SAAA,qBAAA,CAAA,KAAA,EAAoD;EAArB,IAAEC,QAAF,GAAqB,KAArB,CAAEA,QAAF;;EAC5C,sBAAmBC,KAAK,CAALA,QAAAA,CAAe;IAAA,OAAlC,IAAA,iBAAA,GAAkC;EAAA,CAAfA,CAAnB;EAAA;EAAA,IAAM,QAAN;;EACA,uBACEA,KAAK,CAALA,QAAAA,CAAmC,IADrC,GACqC,EAAnCA,CADF;EAAA;EAAA,IAAM,kBAAN;EAAA,IAAM,qBAAN;;EAGA,IAAMC,UAAU,GAAGD,KAAK,CAALA,UAAAA,CAAnB,iCAAmBA,CAAnB;EACA,IAAME,KAAK,GAAGF,KAAK,CAALA,UAAAA,CAAd,+BAAcA,CAAd;EAEA,IAAMG,yBAAyB,GAAGH,KAAK,CAALA,UAAAA,CAR+B,6BAQ/BA,CAAlC;EAEA,IAAMI,kBAAkB,GAAGD,yBAAH,KAAA,IAAGA,IAAAA,yBAAH,KAAA,KAAA,CAAGA,GAAH,KAAA,CAAGA,GAAAA,yBAAyB,CAApD,gBAAA;EAEA,IAAME,gBAAgB,GAAGC,IAAAA,0BAAAA,EACvB,UAAA,EAAA,EAAA,QAAA,EAAA,aAAA,EAAgE;IAC9D,IACET,aAAa,KACZI,UAAU,IAAVA,IAAAA,IACCA,UADDA,KAAAA,IACCA,IAAAA,UADDA,KAAAA,KAAAA,CACCA,IAAAA,UAAU,CAAVA,QAAAA,GAAAA,MAAAA,CAAAA,KAAAA,CAEiBC,UAAAA,KAAD;MAAA,OAAWA,KAAK,CAALA,GAAAA,KAL/B,QAKoB;IAAA,CAFhBD,CAFW,CADf,EAME;MACA,MAAM,IAAA,KAAA,yCAAN,QAAM,mDAAN;IAGD;;IAEDM,qBAAqB,CAAEC,UAAAA,aAAD,EAAmB;MAAA,IAAA,kBAAA,EAAA,mBAAA;;MAEvC,IACEC,QAAQ,MAAA,CAAA,kBAAA,GAAKD,aAAa,CAAbA,GAAAA,CAAL,EAAKA,CAAL,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAKA,kBAAAA,CAAbC,QAAQ,CAARA,IACAZ,aAAa,MAAA,CAAA,mBAAA,GAAKW,aAAa,CAAbA,GAAAA,CAAL,EAAKA,CAAL,MAAA,IAAA,IAAA,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAKA,mBAAAA,CAFpB,aAEe,CAFf,EAGE;QACA,OAAA,aAAA;MACD;;MAED,IAAME,aAAa,GAAG,IAAA,GAAA,CAAtB,aAAsB,CAAtB;;MAEA,IAAA,aAAA,EAAmB;QACjBA,aAAa,CAAbA,GAAAA,CAAAA,EAAAA,EAAsB;UACpBD,QADoB,EACpBA,QADoB;UAEpBZ,aAAAA,EAAAA;QAFoB,CAAtBa;MADF,CAAA,MAKO;QACLA,aAAa,CAAbA,MAAAA,CAAAA,EAAAA;MACD;;MAED,OAAA,aAAA;IApBFH,CAAqB,CAArBA;EAdJ,CAAyBD,CAAzB;EAuCA,IAAMK,WAAW,GAAG,iCAAIjB,kBAAkB,CAAtB,MAAIA,EAAJ,EAAA,IAAA,CAClB,UAAA,KAAA,EAAA;IAAA,IAAGG,aAAH,GAAA,KAAA,CAAGA,aAAH;IAAA,OAAA,aAAA;EADF,CAAoB,CAApB;EAIAG,KAAK,CAALA,SAAAA,CAAgB,YAAM;IACpB,IAAI,CAAA,KAAK,KAAL,IAAA,IAAA,KAAK,KAAA,KAAL,CAAA,GAAA,KAAA,CAAA,GAAA,KAAK,CAAL,GAAA,MAAA,SAAA,IAA4BI,kBAAkB,KAAlD,SAAA,EAAkE;MAGhEA,kBAAkB,CAAA,QAAA,EAAWF,KAAK,CAAhB,GAAA,EAAlBE,WAAkB,CAAlBA;MACA,OAAO,YAAM;QACXA,kBAAkB,CAAA,QAAA,EAAWF,KAAK,CAAhB,GAAA,EAAlBE,KAAkB,CAAlBA;MADF,CAAA;IAGD;;IAED;EAVFJ,CAAAA,EAWG,CAAA,QAAA,EAAA,WAAA,EAAwBE,KAAxB,KAAA,IAAwBA,IAAAA,KAAxB,KAAA,KAAA,CAAwBA,GAAxB,KAAA,CAAwBA,GAAAA,KAAK,CAA7B,GAAA,EAXHF,kBAWG,CAXHA;EAaA,IAAMY,KAAK,GAAG,KAAK,CAAL,OAAA,CACZ;IAAA,OAAO;MACLP,gBADK,EACLA,gBADK;MAELT,eAAe,EAAEH,wBAAwB,CAAA,kBAAA;IAFpC,CAAP;EAAA,CADY,EAKZ,CAAA,gBAAA,EALF,kBAKE,CALY,CAAd;EAQA,OACE,KAAA,CAAA,aAAA,CAAA,6BAAA,CAAA,QAAA,EAAA;IAA+B,KAAK,EAAEmB;EAAtC,CAAA,EADF,QACE,CADF;AAKD","sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport useLatestCallback from 'use-latest-callback';\n\nimport NavigationHelpersContext from './NavigationHelpersContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport PreventRemoveContext, { PreventedRoutes } from './PreventRemoveContext';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype PreventedRoutesMap = Map<\n  string,\n  {\n    routeKey: string;\n    preventRemove: boolean;\n  }\n>;\n\n/**\n * Util function to transform map of prevented routes to a simpler object.\n */\nconst transformPreventedRoutes = (\n  preventedRoutesMap: PreventedRoutesMap\n): PreventedRoutes => {\n  const preventedRoutesToTransform = [...preventedRoutesMap.values()];\n\n  const preventedRoutes = preventedRoutesToTransform.reduce<PreventedRoutes>(\n    (acc, { routeKey, preventRemove }) => {\n      acc[routeKey] = {\n        preventRemove: acc[routeKey]?.preventRemove || preventRemove,\n      };\n      return acc;\n    },\n    {}\n  );\n\n  return preventedRoutes;\n};\n\n/**\n * Component used for managing which routes have to be prevented from removal in native-stack.\n */\nexport default function PreventRemoveProvider({ children }: Props) {\n  const [parentId] = React.useState(() => nanoid());\n  const [preventedRoutesMap, setPreventedRoutesMap] =\n    React.useState<PreventedRoutesMap>(new Map());\n\n  const navigation = React.useContext(NavigationHelpersContext);\n  const route = React.useContext(NavigationRouteContext);\n\n  const preventRemoveContextValue = React.useContext(PreventRemoveContext);\n  // take `setPreventRemove` from parent context - if exist it means we're in a nested context\n  const setParentPrevented = preventRemoveContextValue?.setPreventRemove;\n\n  const setPreventRemove = useLatestCallback(\n    (id: string, routeKey: string, preventRemove: boolean): void => {\n      if (\n        preventRemove &&\n        (navigation == null ||\n          navigation\n            ?.getState()\n            .routes.every((route) => route.key !== routeKey))\n      ) {\n        throw new Error(\n          `Couldn't find a route with the key ${routeKey}. Is your component inside NavigationContent?`\n        );\n      }\n\n      setPreventedRoutesMap((prevPrevented) => {\n        // values haven't changed - do nothing\n        if (\n          routeKey === prevPrevented.get(id)?.routeKey &&\n          preventRemove === prevPrevented.get(id)?.preventRemove\n        ) {\n          return prevPrevented;\n        }\n\n        const nextPrevented = new Map(prevPrevented);\n\n        if (preventRemove) {\n          nextPrevented.set(id, {\n            routeKey,\n            preventRemove,\n          });\n        } else {\n          nextPrevented.delete(id);\n        }\n\n        return nextPrevented;\n      });\n    }\n  );\n\n  const isPrevented = [...preventedRoutesMap.values()].some(\n    ({ preventRemove }) => preventRemove\n  );\n\n  React.useEffect(() => {\n    if (route?.key !== undefined && setParentPrevented !== undefined) {\n      // when route is defined (and setParentPrevented) it means we're in a nested stack\n      // route.key then will be the route key of parent\n      setParentPrevented(parentId, route.key, isPrevented);\n      return () => {\n        setParentPrevented(parentId, route.key, false);\n      };\n    }\n\n    return;\n  }, [parentId, isPrevented, route?.key, setParentPrevented]);\n\n  const value = React.useMemo(\n    () => ({\n      setPreventRemove,\n      preventedRoutes: transformPreventedRoutes(preventedRoutesMap),\n    }),\n    [setPreventRemove, preventedRoutesMap]\n  );\n\n  return (\n    <PreventRemoveContext.Provider value={value}>\n      {children}\n    </PreventRemoveContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}