{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _theming = require(\"../../core/theming\");\n\nvar _utils = require(\"./utils\");\n\nvar _excluded = [\"style\", \"background\", \"borderless\", \"disabled\", \"rippleColor\", \"underlayColor\", \"children\", \"theme\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar TouchableRipple = function TouchableRipple(_ref) {\n  var style = _ref.style,\n      _background = _ref.background,\n      _ref$borderless = _ref.borderless,\n      borderless = _ref$borderless === void 0 ? false : _ref$borderless,\n      disabledProp = _ref.disabled,\n      rippleColor = _ref.rippleColor,\n      _underlayColor = _ref.underlayColor,\n      children = _ref.children,\n      theme = _ref.theme,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n\n  var handlePressIn = function handlePressIn(e) {\n    var _touches$;\n\n    var centered = rest.centered,\n        onPressIn = rest.onPressIn;\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(e);\n\n    var _getTouchableRippleCo = (0, _utils.getTouchableRippleColors)({\n      theme: theme,\n      rippleColor: rippleColor\n    }),\n        calculatedRippleColor = _getTouchableRippleCo.calculatedRippleColor;\n\n    var button = e.currentTarget;\n    var style = window.getComputedStyle(button);\n    var dimensions = button.getBoundingClientRect();\n    var touchX;\n    var touchY;\n    var _e$nativeEvent = e.nativeEvent,\n        changedTouches = _e$nativeEvent.changedTouches,\n        touches = _e$nativeEvent.touches;\n    var touch = (_touches$ = touches === null || touches === void 0 ? void 0 : touches[0]) !== null && _touches$ !== void 0 ? _touches$ : changedTouches === null || changedTouches === void 0 ? void 0 : changedTouches[0];\n\n    if (centered || !touch) {\n      touchX = dimensions.width / 2;\n      touchY = dimensions.height / 2;\n    } else {\n      var _touch$locationX, _touch$locationY;\n\n      touchX = (_touch$locationX = touch.locationX) !== null && _touch$locationX !== void 0 ? _touch$locationX : e.pageX;\n      touchY = (_touch$locationY = touch.locationY) !== null && _touch$locationY !== void 0 ? _touch$locationY : e.pageY;\n    }\n\n    var size = centered ? Math.min(dimensions.width, dimensions.height) * 1.25 : Math.max(dimensions.width, dimensions.height) * 2;\n    var container = document.createElement('span');\n    container.setAttribute('data-paper-ripple', '');\n    Object.assign(container.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      borderTopLeftRadius: style.borderTopLeftRadius,\n      borderTopRightRadius: style.borderTopRightRadius,\n      borderBottomRightRadius: style.borderBottomRightRadius,\n      borderBottomLeftRadius: style.borderBottomLeftRadius,\n      overflow: centered ? 'visible' : 'hidden'\n    });\n    var ripple = document.createElement('span');\n    Object.assign(ripple.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      backgroundColor: calculatedRippleColor,\n      borderRadius: '50%',\n      transitionProperty: 'transform opacity',\n      transitionDuration: Math.min(size * 1.5, 350) + \"ms\",\n      transitionTimingFunction: 'linear',\n      transformOrigin: 'center',\n      transform: 'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',\n      opacity: '0.5',\n      left: touchX + \"px\",\n      top: touchY + \"px\",\n      width: size + \"px\",\n      height: size + \"px\"\n    });\n    container.appendChild(ripple);\n    button.appendChild(container);\n    requestAnimationFrame(function () {\n      requestAnimationFrame(function () {\n        Object.assign(ripple.style, {\n          transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',\n          opacity: '1'\n        });\n      });\n    });\n  };\n\n  var handlePressOut = function handlePressOut(e) {\n    var _rest$onPressOut;\n\n    (_rest$onPressOut = rest.onPressOut) === null || _rest$onPressOut === void 0 ? void 0 : _rest$onPressOut.call(rest, e);\n    var containers = e.currentTarget.querySelectorAll('[data-paper-ripple]');\n    requestAnimationFrame(function () {\n      requestAnimationFrame(function () {\n        containers.forEach(function (container) {\n          var ripple = container.firstChild;\n          Object.assign(ripple.style, {\n            transitionDuration: '250ms',\n            opacity: 0\n          });\n          setTimeout(function () {\n            var parentNode = container.parentNode;\n\n            if (parentNode) {\n              parentNode.removeChild(container);\n            }\n          }, 500);\n        });\n      });\n    });\n  };\n\n  var disabled = disabledProp || !rest.onPress;\n  return React.createElement(_reactNative.TouchableWithoutFeedback, _extends({}, rest, {\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    disabled: disabled\n  }), React.createElement(_reactNative.View, {\n    style: [styles.touchable, borderless && styles.borderless, style]\n  }, React.Children.only(children)));\n};\n\nTouchableRipple.supported = true;\n\nvar styles = _reactNative.StyleSheet.create({\n  touchable: Object.assign({\n    position: 'relative'\n  }, _reactNative.Platform.OS === 'web' && {\n    cursor: 'pointer'\n  }),\n  borderless: {\n    overflow: 'hidden'\n  }\n});\n\nvar _default = (0, _theming.withTheme)(TouchableRipple);\n\nexports.default = _default;","map":{"version":3,"sources":["TouchableRipple.tsx"],"names":["TouchableRipple","background","borderless","disabled","underlayColor","rest","handlePressIn","e","onPressIn","calculatedRippleColor","getTouchableRippleColors","theme","rippleColor","button","style","window","dimensions","touches","touch","changedTouches","centered","touchX","touchY","size","Math","container","document","Object","position","pointerEvents","top","left","right","bottom","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","overflow","ripple","backgroundColor","borderRadius","transitionProperty","transitionDuration","transitionTimingFunction","transformOrigin","transform","opacity","width","height","requestAnimationFrame","handlePressOut","containers","setTimeout","parentNode","disabledProp","styles","React","touchable","Platform","cursor","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  GestureResponderEvent,\n  Platform,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\nimport { getTouchableRippleColors } from './utils';\n\nexport type Props = React.ComponentPropsWithRef<\n  typeof TouchableWithoutFeedback\n> & {\n  /**\n   * Whether to render the ripple outside the view bounds.\n   */\n  borderless?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/touchablenativefeedback#background\n   */\n  background?: Object;\n  /**\n   * Whether to start the ripple at the center (Web).\n   */\n  centered?: boolean;\n  /**\n   * Whether to prevent interaction with the touchable.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press. If not set, will cause the touchable to be disabled.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Color of the ripple effect (Android >= 5.0 and Web).\n   */\n  rippleColor?: string;\n  /**\n   * Color of the underlay for the highlight effect (Android < 5.0 and iOS).\n   */\n  underlayColor?: string;\n  /**\n   * Content of the `TouchableRipple`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A wrapper for views that should respond to touches.\n * Provides a material \"ink ripple\" interaction effect for supported platforms (>= Android Lollipop).\n * On unsupported platforms, it falls back to a highlight effect.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/touchable-ripple.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Text, TouchableRipple } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <TouchableRipple\n *     onPress={() => console.log('Pressed')}\n *     rippleColor=\"rgba(0, 0, 0, .32)\"\n *   >\n *     <Text>Press anywhere</Text>\n *   </TouchableRipple>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableWithoutFeedback props https://reactnative.dev/docs/touchablewithoutfeedback#props\n */\nconst TouchableRipple = ({\n  style,\n  background: _background,\n  borderless = false,\n  disabled: disabledProp,\n  rippleColor,\n  underlayColor: _underlayColor,\n  children,\n  theme,\n  ...rest\n}: Props) => {\n  const handlePressIn = (e: any) => {\n    const { centered, onPressIn } = rest;\n\n    onPressIn?.(e);\n\n    const { calculatedRippleColor } = getTouchableRippleColors({\n      theme,\n      rippleColor,\n    });\n\n    const button = e.currentTarget;\n    const style = window.getComputedStyle(button);\n    const dimensions = button.getBoundingClientRect();\n\n    let touchX;\n    let touchY;\n\n    const { changedTouches, touches } = e.nativeEvent;\n    const touch = touches?.[0] ?? changedTouches?.[0];\n\n    // If centered or it was pressed using keyboard - enter or space\n    if (centered || !touch) {\n      touchX = dimensions.width / 2;\n      touchY = dimensions.height / 2;\n    } else {\n      touchX = touch.locationX ?? e.pageX;\n      touchY = touch.locationY ?? e.pageY;\n    }\n\n    // Get the size of the button to determine how big the ripple should be\n    const size = centered\n      ? // If ripple is always centered, we don't need to make it too big\n        Math.min(dimensions.width, dimensions.height) * 1.25\n      : // Otherwise make it twice as big so clicking on one end spreads ripple to other\n        Math.max(dimensions.width, dimensions.height) * 2;\n\n    // Create a container for our ripple effect so we don't need to change the parent's style\n    const container = document.createElement('span');\n\n    container.setAttribute('data-paper-ripple', '');\n\n    Object.assign(container.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      borderTopLeftRadius: style.borderTopLeftRadius,\n      borderTopRightRadius: style.borderTopRightRadius,\n      borderBottomRightRadius: style.borderBottomRightRadius,\n      borderBottomLeftRadius: style.borderBottomLeftRadius,\n      overflow: centered ? 'visible' : 'hidden',\n    });\n\n    // Create span to show the ripple effect\n    const ripple = document.createElement('span');\n\n    Object.assign(ripple.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      backgroundColor: calculatedRippleColor,\n      borderRadius: '50%',\n\n      /* Transition configuration */\n      transitionProperty: 'transform opacity',\n      transitionDuration: `${Math.min(size * 1.5, 350)}ms`,\n      transitionTimingFunction: 'linear',\n      transformOrigin: 'center',\n\n      /* We'll animate these properties */\n      transform: 'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',\n      opacity: '0.5',\n\n      // Position the ripple where cursor was\n      left: `${touchX}px`,\n      top: `${touchY}px`,\n      width: `${size}px`,\n      height: `${size}px`,\n    });\n\n    // Finally, append it to DOM\n    container.appendChild(ripple);\n    button.appendChild(container);\n\n    // rAF runs in the same frame as the event handler\n    // Use double rAF to ensure the transition class is added in next frame\n    // This will make sure that the transition animation is triggered\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        Object.assign(ripple.style, {\n          transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',\n          opacity: '1',\n        });\n      });\n    });\n  };\n\n  const handlePressOut = (e: any) => {\n    rest.onPressOut?.(e);\n\n    const containers = e.currentTarget.querySelectorAll(\n      '[data-paper-ripple]'\n    ) as HTMLElement[];\n\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        containers.forEach((container) => {\n          const ripple = container.firstChild as HTMLSpanElement;\n\n          Object.assign(ripple.style, {\n            transitionDuration: '250ms',\n            opacity: 0,\n          });\n\n          // Finally remove the span after the transition\n          setTimeout(() => {\n            const { parentNode } = container;\n\n            if (parentNode) {\n              parentNode.removeChild(container);\n            }\n          }, 500);\n        });\n      });\n    });\n  };\n\n  const disabled = disabledProp || !rest.onPress;\n\n  return (\n    <TouchableWithoutFeedback\n      {...rest}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      disabled={disabled}\n    >\n      <View style={[styles.touchable, borderless && styles.borderless, style]}>\n        {React.Children.only(children)}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\n/**\n * Whether ripple effect is supported.\n */\nTouchableRipple.supported = true;\n\nconst styles = StyleSheet.create({\n  touchable: {\n    position: 'relative',\n    ...(Platform.OS === 'web' && { cursor: 'pointer' }),\n  },\n  borderless: {\n    overflow: 'hidden',\n  },\n});\n\nexport default withTheme(TouchableRipple);\n"]},"metadata":{},"sourceType":"script"}