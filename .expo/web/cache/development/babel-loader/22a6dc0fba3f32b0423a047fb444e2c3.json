{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useIsKeyboardShown;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction useIsKeyboardShown(_ref) {\n  var onShow = _ref.onShow,\n      onHide = _ref.onHide;\n  React.useEffect(function () {\n    var willShowSubscription;\n    var willHideSubscription;\n    var didShowSubscription;\n    var didHideSubscription;\n\n    if (_reactNative.Platform.OS === 'ios') {\n      willShowSubscription = _reactNative.Keyboard.addListener('keyboardWillShow', onShow);\n      willHideSubscription = _reactNative.Keyboard.addListener('keyboardWillHide', onHide);\n    } else {\n      didShowSubscription = _reactNative.Keyboard.addListener('keyboardDidShow', onShow);\n      didHideSubscription = _reactNative.Keyboard.addListener('keyboardDidHide', onHide);\n    }\n\n    return function () {\n      if (_reactNative.Platform.OS === 'ios') {\n        var _willShowSubscription, _willHideSubscription;\n\n        if ((_willShowSubscription = willShowSubscription) !== null && _willShowSubscription !== void 0 && _willShowSubscription.remove) {\n          willShowSubscription.remove();\n        } else {\n          _reactNative.Keyboard.removeListener('keyboardWillShow', onShow);\n        }\n\n        if ((_willHideSubscription = willHideSubscription) !== null && _willHideSubscription !== void 0 && _willHideSubscription.remove) {\n          willHideSubscription.remove();\n        } else {\n          _reactNative.Keyboard.removeListener('keyboardWillHide', onHide);\n        }\n      } else {\n        var _didShowSubscription, _didHideSubscription;\n\n        if ((_didShowSubscription = didShowSubscription) !== null && _didShowSubscription !== void 0 && _didShowSubscription.remove) {\n          didShowSubscription.remove();\n        } else {\n          _reactNative.Keyboard.removeListener('keyboardDidShow', onShow);\n        }\n\n        if ((_didHideSubscription = didHideSubscription) !== null && _didHideSubscription !== void 0 && _didHideSubscription.remove) {\n          didHideSubscription.remove();\n        } else {\n          _reactNative.Keyboard.removeListener('keyboardDidHide', onHide);\n        }\n      }\n    };\n  }, [onHide, onShow]);\n}","map":{"version":3,"mappings":";;;;;AAAA;;AACA;;;;;;AAMe,SAASA,kBAAT,OAAuD;EAAA,IAAzBC,MAAyB,QAAzBA,MAAyB;EAAA,IAAjBC,MAAiB,QAAjBA,MAAiB;EACpEC,KAAK,CAACC,SAAND,CAAgB,YAAM;IACpB,IAAIE,oBAAJ;IACA,IAAIC,oBAAJ;IACA,IAAIC,mBAAJ;IACA,IAAIC,mBAAJ;;IAEA,IAAIC,sBAASC,EAATD,KAAgB,KAApB,EAA2B;MACzBJ,oBAAoB,GAAGM,sBAASC,WAATD,CAAqB,kBAArBA,EAAyCV,MAAzCU,CAAvBN;MACAC,oBAAoB,GAAGK,sBAASC,WAATD,CAAqB,kBAArBA,EAAyCT,MAAzCS,CAAvBL;IAFF,OAGO;MACLC,mBAAmB,GAAGI,sBAASC,WAATD,CAAqB,iBAArBA,EAAwCV,MAAxCU,CAAtBJ;MACAC,mBAAmB,GAAGG,sBAASC,WAATD,CAAqB,iBAArBA,EAAwCT,MAAxCS,CAAtBH;IACD;;IAED,OAAO,YAAM;MACX,IAAIC,sBAASC,EAATD,KAAgB,KAApB,EAA2B;QAAA;;QACzB,6BAAIJ,oBAAJ,kDAAIQ,sBAAsBC,MAA1B,EAAkC;UAChCT,oBAAoB,CAACS,MAArBT;QADF,OAEO;UACLM,sBAASI,cAATJ,CAAwB,kBAAxBA,EAA4CV,MAA5CU;QACD;;QAED,6BAAIL,oBAAJ,kDAAIU,sBAAsBF,MAA1B,EAAkC;UAChCR,oBAAoB,CAACQ,MAArBR;QADF,OAEO;UACLK,sBAASI,cAATJ,CAAwB,kBAAxBA,EAA4CT,MAA5CS;QACD;MAXH,OAYO;QAAA;;QACL,4BAAIJ,mBAAJ,iDAAIU,qBAAqBH,MAAzB,EAAiC;UAC/BP,mBAAmB,CAACO,MAApBP;QADF,OAEO;UACLI,sBAASI,cAATJ,CAAwB,iBAAxBA,EAA2CV,MAA3CU;QACD;;QAED,4BAAIH,mBAAJ,iDAAIU,qBAAqBJ,MAAzB,EAAiC;UAC/BN,mBAAmB,CAACM,MAApBN;QADF,OAEO;UACLG,sBAASI,cAATJ,CAAwB,iBAAxBA,EAA2CT,MAA3CS;QACD;MACF;IAzBH;EAdF,GAyCG,CAACT,MAAD,EAASD,MAAT,CAzCHE;AA0CD","names":["useIsKeyboardShown","onShow","onHide","React","useEffect","willShowSubscription","willHideSubscription","didShowSubscription","didHideSubscription","Platform","OS","Keyboard","addListener","_willShowSubscription","remove","removeListener","_willHideSubscription","_didShowSubscription","_didHideSubscription"],"sources":["useIsKeyboardShown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Keyboard, NativeEventSubscription, Platform } from 'react-native';\n\ntype Props = {\n  onShow: () => void;\n  onHide: () => void;\n};\nexport default function useIsKeyboardShown({ onShow, onHide }: Props) {\n  React.useEffect(() => {\n    let willShowSubscription: NativeEventSubscription | undefined;\n    let willHideSubscription: NativeEventSubscription | undefined;\n    let didShowSubscription: NativeEventSubscription | undefined;\n    let didHideSubscription: NativeEventSubscription | undefined;\n\n    if (Platform.OS === 'ios') {\n      willShowSubscription = Keyboard.addListener('keyboardWillShow', onShow);\n      willHideSubscription = Keyboard.addListener('keyboardWillHide', onHide);\n    } else {\n      didShowSubscription = Keyboard.addListener('keyboardDidShow', onShow);\n      didHideSubscription = Keyboard.addListener('keyboardDidHide', onHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        if (willShowSubscription?.remove) {\n          willShowSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardWillShow', onShow);\n        }\n\n        if (willHideSubscription?.remove) {\n          willHideSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardWillHide', onHide);\n        }\n      } else {\n        if (didShowSubscription?.remove) {\n          didShowSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidShow', onShow);\n        }\n\n        if (didHideSubscription?.remove) {\n          didHideSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidHide', onHide);\n        }\n      }\n    };\n  }, [onHide, onShow]);\n}\n"]},"metadata":{},"sourceType":"script"}