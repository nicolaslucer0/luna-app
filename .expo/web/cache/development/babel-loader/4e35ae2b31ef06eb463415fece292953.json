{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _shadow = _interopRequireDefault(require(\"../styles/shadow\"));\n\nvar _theming = require(\"../core/theming\");\n\nvar _overlay = _interopRequireWildcard(require(\"../styles/overlay\"));\n\nvar _excluded = [\"style\", \"theme\"],\n    _excluded2 = [\"elevation\", \"children\", \"theme\", \"style\", \"testID\"],\n    _excluded3 = [\"position\", \"alignSelf\", \"top\", \"left\", \"right\", \"bottom\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar MD2Surface = function MD2Surface(_ref) {\n  var style = _ref.style,\n      overrideTheme = _ref.theme,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n\n  var _ref3 = _reactNative.StyleSheet.flatten(style) || {},\n      _ref3$elevation = _ref3.elevation,\n      elevation = _ref3$elevation === void 0 ? 4 : _ref3$elevation;\n\n  var _useTheme = (0, _theming.useTheme)(overrideTheme),\n      isDarkTheme = _useTheme.dark,\n      mode = _useTheme.mode,\n      colors = _useTheme.colors;\n\n  return React.createElement(_reactNative.Animated.View, _extends({}, rest, {\n    style: [{\n      backgroundColor: isDarkTheme && mode === 'adaptive' ? (0, _overlay.default)(elevation, colors === null || colors === void 0 ? void 0 : colors.surface) : colors === null || colors === void 0 ? void 0 : colors.surface\n    }, elevation ? (0, _shadow.default)(elevation) : null, style]\n  }));\n};\n\nvar Surface = function Surface(_ref2) {\n  var _ref2$elevation = _ref2.elevation,\n      elevation = _ref2$elevation === void 0 ? 1 : _ref2$elevation,\n      children = _ref2.children,\n      overridenTheme = _ref2.theme,\n      style = _ref2.style,\n      testID = _ref2.testID,\n      props = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);\n  var theme = (0, _theming.useTheme)(overridenTheme);\n  if (!theme.isV3) return React.createElement(MD2Surface, _extends({}, props, {\n    theme: theme,\n    style: style\n  }), children);\n  var colors = theme.colors;\n  var inputRange = [0, 1, 2, 3, 4, 5];\n\n  var backgroundColor = function () {\n    var _colors$elevation2;\n\n    if ((0, _overlay.isAnimatedValue)(elevation)) {\n      return elevation.interpolate({\n        inputRange: inputRange,\n        outputRange: inputRange.map(function (elevation) {\n          var _colors$elevation;\n\n          return (_colors$elevation = colors.elevation) === null || _colors$elevation === void 0 ? void 0 : _colors$elevation[\"level\" + elevation];\n        })\n      });\n    }\n\n    return (_colors$elevation2 = colors.elevation) === null || _colors$elevation2 === void 0 ? void 0 : _colors$elevation2[\"level\" + elevation];\n  }();\n\n  if (_reactNative.Platform.OS === 'web') {\n    return React.createElement(_reactNative.Animated.View, _extends({}, props, {\n      testID: testID,\n      style: [{\n        backgroundColor: backgroundColor\n      }, elevation ? (0, _shadow.default)(elevation, theme.isV3) : null, style]\n    }), children);\n  }\n\n  if (_reactNative.Platform.OS === 'android') {\n    var elevationLevel = [0, 3, 6, 9, 12, 15];\n\n    var getElevationAndroid = function getElevationAndroid() {\n      if ((0, _overlay.isAnimatedValue)(elevation)) {\n        return elevation.interpolate({\n          inputRange: inputRange,\n          outputRange: elevationLevel\n        });\n      }\n\n      return elevationLevel[elevation];\n    };\n\n    var _ref4 = _reactNative.StyleSheet.flatten(style) || {},\n        margin = _ref4.margin,\n        padding = _ref4.padding,\n        transform = _ref4.transform,\n        borderRadius = _ref4.borderRadius;\n\n    var outerLayerStyles = {\n      margin: margin,\n      padding: padding,\n      transform: transform,\n      borderRadius: borderRadius\n    };\n    var _sharedStyle = [{\n      backgroundColor: backgroundColor\n    }, style];\n    return React.createElement(_reactNative.Animated.View, _extends({}, props, {\n      testID: testID,\n      style: [{\n        backgroundColor: backgroundColor,\n        transform: transform\n      }, outerLayerStyles, _sharedStyle, {\n        elevation: getElevationAndroid()\n      }]\n    }), children);\n  }\n\n  var iOSShadowOutputRanges = [{\n    shadowOpacity: 0.15,\n    height: [0, 1, 2, 4, 6, 8],\n    shadowRadius: [0, 3, 6, 8, 10, 12]\n  }, {\n    shadowOpacity: 0.3,\n    height: [0, 1, 1, 1, 2, 4],\n    shadowRadius: [0, 1, 2, 3, 3, 4]\n  }];\n  var shadowColor = '#000';\n\n  var _ref5 = _reactNative.StyleSheet.flatten(style) || {},\n      position = _ref5.position,\n      alignSelf = _ref5.alignSelf,\n      top = _ref5.top,\n      left = _ref5.left,\n      right = _ref5.right,\n      bottom = _ref5.bottom,\n      restStyle = (0, _objectWithoutProperties2.default)(_ref5, _excluded3);\n\n  var absoluteStyles = {\n    position: position,\n    alignSelf: alignSelf,\n    top: top,\n    right: right,\n    bottom: bottom,\n    left: left\n  };\n  var sharedStyle = [{\n    backgroundColor: backgroundColor\n  }, restStyle];\n\n  if ((0, _overlay.isAnimatedValue)(elevation)) {\n    var _inputRange = [0, 1, 2, 3, 4, 5];\n\n    var getStyleForAnimatedShadowLayer = function getStyleForAnimatedShadowLayer(layer) {\n      return {\n        shadowColor: shadowColor,\n        shadowOpacity: elevation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, iOSShadowOutputRanges[layer].shadowOpacity],\n          extrapolate: 'clamp'\n        }),\n        shadowOffset: {\n          width: 0,\n          height: elevation.interpolate({\n            inputRange: _inputRange,\n            outputRange: iOSShadowOutputRanges[layer].height\n          })\n        },\n        shadowRadius: elevation.interpolate({\n          inputRange: _inputRange,\n          outputRange: iOSShadowOutputRanges[layer].shadowRadius\n        })\n      };\n    };\n\n    return React.createElement(_reactNative.Animated.View, {\n      style: [getStyleForAnimatedShadowLayer(0), absoluteStyles]\n    }, React.createElement(_reactNative.Animated.View, {\n      style: getStyleForAnimatedShadowLayer(1)\n    }, React.createElement(_reactNative.Animated.View, _extends({}, props, {\n      testID: testID,\n      style: sharedStyle\n    }), children)));\n  }\n\n  var getStyleForShadowLayer = function getStyleForShadowLayer(layer) {\n    return {\n      shadowColor: shadowColor,\n      shadowOpacity: elevation ? iOSShadowOutputRanges[layer].shadowOpacity : 0,\n      shadowOffset: {\n        width: 0,\n        height: iOSShadowOutputRanges[layer].height[elevation]\n      },\n      shadowRadius: iOSShadowOutputRanges[layer].shadowRadius[elevation]\n    };\n  };\n\n  return React.createElement(_reactNative.Animated.View, {\n    style: [getStyleForShadowLayer(0), absoluteStyles]\n  }, React.createElement(_reactNative.Animated.View, {\n    style: [getStyleForShadowLayer(1)]\n  }, React.createElement(_reactNative.Animated.View, _extends({}, props, {\n    testID: testID,\n    style: sharedStyle\n  }), children)));\n};\n\nvar _default = Surface;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["MD2Surface","style","overrideTheme","theme","rest","StyleSheet","flatten","elevation","useTheme","isDarkTheme","dark","mode","colors","React","Animated","View","backgroundColor","overlay","surface","shadow","Surface","children","overridenTheme","testID","props","isV3","inputRange","isAnimatedValue","interpolate","outputRange","map","_colors$elevation","_colors$elevation2","Platform","OS","elevationLevel","getElevationAndroid","margin","padding","transform","borderRadius","outerLayerStyles","sharedStyle","iOSShadowOutputRanges","shadowOpacity","height","shadowRadius","shadowColor","position","alignSelf","top","left","right","bottom","restStyle","absoluteStyles","getStyleForAnimatedShadowLayer","layer","extrapolate","shadowOffset","width","getStyleForShadowLayer"],"sources":["Surface.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  StyleProp,\n  ViewStyle,\n  Platform,\n} from 'react-native';\nimport shadow from '../styles/shadow';\nimport { useTheme } from '../core/theming';\nimport overlay, { isAnimatedValue } from '../styles/overlay';\nimport type { MD3Elevation, Theme } from '../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.ReactNode;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes shadows and background on iOS and Android.\n   * Used to create UI hierarchy between components.\n   *\n   * Note: In version 2 the `elevation` prop was accepted via `style` prop i.e. `style={{ elevation: 4 }}`.\n   * It's no longer supported with theme version 3 and you should use `elevation` property instead.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  /**\n   * @optional\n   */\n  theme?: Theme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\nconst MD2Surface = ({\n  style,\n  theme: overrideTheme,\n  ...rest\n}: Omit<Props, 'elevation'>) => {\n  const { elevation = 4 } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n  const { dark: isDarkTheme, mode, colors } = useTheme(overrideTheme);\n\n  return (\n    <Animated.View\n      {...rest}\n      style={[\n        {\n          backgroundColor:\n            isDarkTheme && mode === 'adaptive'\n              ? overlay(elevation, colors?.surface)\n              : colors?.surface,\n        },\n        elevation ? shadow(elevation) : null,\n        style,\n      ]}\n    />\n  );\n};\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * On dark theme with `adaptive` mode, surface is constructed by also placing a semi-transparent white overlay over a component surface.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more information.\n * Overlay and shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/surface-android.png\" />\n *     <figcaption>Surface on Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/surface-ios.png\" />\n *     <figcaption>Surface on iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface} elevation={4}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *   },\n * });\n * ```\n */\nconst Surface = ({\n  elevation = 1,\n  children,\n  theme: overridenTheme,\n  style,\n  testID,\n  ...props\n}: Props) => {\n  const theme = useTheme(overridenTheme);\n\n  if (!theme.isV3)\n    return (\n      <MD2Surface {...props} theme={theme} style={style}>\n        {children}\n      </MD2Surface>\n    );\n\n  const { colors } = theme;\n\n  const inputRange = [0, 1, 2, 3, 4, 5];\n\n  const backgroundColor = (() => {\n    if (isAnimatedValue(elevation)) {\n      return elevation.interpolate({\n        inputRange,\n        outputRange: inputRange.map((elevation) => {\n          return colors.elevation?.[`level${elevation as MD3Elevation}`];\n        }),\n      });\n    }\n\n    return colors.elevation?.[`level${elevation}`];\n  })();\n\n  if (Platform.OS === 'web') {\n    return (\n      <Animated.View\n        {...props}\n        testID={testID}\n        style={[\n          { backgroundColor },\n          elevation ? shadow(elevation, theme.isV3) : null,\n          style,\n        ]}\n      >\n        {children}\n      </Animated.View>\n    );\n  }\n\n  if (Platform.OS === 'android') {\n    const elevationLevel = [0, 3, 6, 9, 12, 15];\n\n    const getElevationAndroid = () => {\n      if (isAnimatedValue(elevation)) {\n        return elevation.interpolate({\n          inputRange,\n          outputRange: elevationLevel,\n        });\n      }\n\n      return elevationLevel[elevation];\n    };\n\n    const { margin, padding, transform, borderRadius } = (StyleSheet.flatten(\n      style\n    ) || {}) as ViewStyle;\n\n    const outerLayerStyles = { margin, padding, transform, borderRadius };\n    const sharedStyle = [{ backgroundColor }, style];\n\n    return (\n      <Animated.View\n        {...props}\n        testID={testID}\n        style={[\n          {\n            backgroundColor,\n            transform,\n          },\n          outerLayerStyles,\n          sharedStyle,\n          {\n            elevation: getElevationAndroid(),\n          },\n        ]}\n      >\n        {children}\n      </Animated.View>\n    );\n  }\n\n  const iOSShadowOutputRanges = [\n    {\n      shadowOpacity: 0.15,\n      height: [0, 1, 2, 4, 6, 8],\n      shadowRadius: [0, 3, 6, 8, 10, 12],\n    },\n    {\n      shadowOpacity: 0.3,\n      height: [0, 1, 1, 1, 2, 4],\n      shadowRadius: [0, 1, 2, 3, 3, 4],\n    },\n  ];\n\n  const shadowColor = '#000';\n\n  const { position, alignSelf, top, left, right, bottom, ...restStyle } =\n    (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n  const absoluteStyles = { position, alignSelf, top, right, bottom, left };\n  const sharedStyle = [{ backgroundColor }, restStyle];\n\n  if (isAnimatedValue(elevation)) {\n    const inputRange = [0, 1, 2, 3, 4, 5];\n\n    const getStyleForAnimatedShadowLayer = (layer: 0 | 1) => {\n      return {\n        shadowColor,\n        shadowOpacity: elevation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, iOSShadowOutputRanges[layer].shadowOpacity],\n          extrapolate: 'clamp',\n        }),\n        shadowOffset: {\n          width: 0,\n          height: elevation.interpolate({\n            inputRange,\n            outputRange: iOSShadowOutputRanges[layer].height,\n          }),\n        },\n        shadowRadius: elevation.interpolate({\n          inputRange,\n          outputRange: iOSShadowOutputRanges[layer].shadowRadius,\n        }),\n      };\n    };\n\n    return (\n      <Animated.View\n        style={[getStyleForAnimatedShadowLayer(0), absoluteStyles]}\n      >\n        <Animated.View style={getStyleForAnimatedShadowLayer(1)}>\n          <Animated.View {...props} testID={testID} style={sharedStyle}>\n            {children}\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n    );\n  }\n\n  const getStyleForShadowLayer = (layer: 0 | 1) => {\n    return {\n      shadowColor,\n      shadowOpacity: elevation ? iOSShadowOutputRanges[layer].shadowOpacity : 0,\n      shadowOffset: {\n        width: 0,\n        height: iOSShadowOutputRanges[layer].height[elevation],\n      },\n      shadowRadius: iOSShadowOutputRanges[layer].shadowRadius[elevation],\n    };\n  };\n\n  return (\n    <Animated.View style={[getStyleForShadowLayer(0), absoluteStyles]}>\n      <Animated.View style={[getStyleForShadowLayer(1)]}>\n        <Animated.View {...props} testID={testID} style={sharedStyle}>\n          {children}\n        </Animated.View>\n      </Animated.View>\n    </Animated.View>\n  );\n};\n\nexport default Surface;\n"]},"metadata":{},"sourceType":"script"}