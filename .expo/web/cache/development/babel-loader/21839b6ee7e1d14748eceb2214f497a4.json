{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _theming = require(\"../../core/theming\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DialogActions = function DialogActions(props) {\n  var _useTheme = (0, _theming.useTheme)(),\n      isV3 = _useTheme.isV3;\n\n  var actionsLength = React.Children.toArray(props.children).length;\n  return React.createElement(_reactNative.View, _extends({}, props, {\n    style: [isV3 ? styles.v3Container : styles.container, props.style]\n  }), React.Children.map(props.children, function (child, i) {\n    return React.isValidElement(child) ? React.cloneElement(child, {\n      compact: true,\n      uppercase: !isV3,\n      style: isV3 && {\n        paddingRight: i + 1 === actionsLength ? 0 : 8\n      }\n    }) : child;\n  }));\n};\n\nDialogActions.displayName = 'Dialog.Actions';\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8\n  },\n  v3Container: {\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    paddingBottom: 24,\n    paddingHorizontal: 24\n  }\n});\n\nvar _default = DialogActions;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,IAAMA,aAAa,GAAIC,SAAjBD,aAAiBC,MAAD,EAAkB;EACtC,gBAAiBC,wBAAjB;EAAA,IAAQC,IAAR,aAAQA,IAAR;;EACA,IAAMC,aAAa,GAAGC,KAAK,CAACC,QAAND,CAAeE,OAAfF,CAAuBJ,KAAK,CAACO,QAA7BH,EAAuCI,MAA7D;EAEA,OACEJ,oBAACK,iBAAD,eACMT,KADN;IAEEU,KAAK,EAAE,CAACR,IAAI,GAAGS,MAAM,CAACC,WAAV,GAAwBD,MAAM,CAACE,SAApC,EAA+Cb,KAAK,CAACU,KAArD;EAFT,IAIGN,KAAK,CAACC,QAAND,CAAeU,GAAfV,CAAmBJ,KAAK,CAACO,QAAzBH,EAAmC,UAACW,KAAD,EAAQC,CAAR;IAAA,OAClCZ,KAAK,CAACa,cAANb,CAAqBW,KAArBX,IACIA,KAAK,CAACc,YAANd,CAAmBW,KAAnBX,EAA0B;MACxBe,OAAO,EAAE,IADe;MAExBC,SAAS,EAAE,CAAClB,IAFY;MAGxBQ,KAAK,EAAER,IAAI,IAAI;QACbmB,YAAY,EAAEL,CAAC,GAAG,CAAJA,KAAUb,aAAVa,GAA0B,CAA1BA,GAA8B;MAD/B;IAHS,CAA1BZ,CADJA,GAQIW,KAT8B;EAAA,CAAnCX,CAJH,CADF;AAJF;;AAwBAL,aAAa,CAACuB,WAAdvB,GAA4B,gBAA5BA;;AAEA,IAAMY,MAAM,GAAGY,wBAAWC,MAAXD,CAAkB;EAC/BV,SAAS,EAAE;IACTY,aAAa,EAAE,KADN;IAETC,UAAU,EAAE,QAFH;IAGTC,cAAc,EAAE,UAHP;IAITC,OAAO,EAAE;EAJA,CADoB;EAO/BhB,WAAW,EAAE;IACXa,aAAa,EAAE,KADJ;IAEXI,QAAQ,EAAE,CAFC;IAGXH,UAAU,EAAE,QAHD;IAIXC,cAAc,EAAE,UAJL;IAKXG,aAAa,EAAE,EALJ;IAMXC,iBAAiB,EAAE;EANR;AAPkB,CAAlBR,CAAf;;eAiBexB,a","names":["DialogActions","props","useTheme","isV3","actionsLength","React","Children","toArray","children","length","View","style","styles","v3Container","container","map","child","i","isValidElement","cloneElement","compact","uppercase","paddingRight","displayName","StyleSheet","create","flexDirection","alignItems","justifyContent","padding","flexGrow","paddingBottom","paddingHorizontal"],"sources":["DialogActions.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport { useTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogActions`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a list of actions in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/dialog-actions.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Actions>\n *           <Button onPress={() => console.log('Cancel')}>Cancel</Button>\n *           <Button onPress={() => console.log('Ok')}>Ok</Button>\n *         </Dialog.Actions>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogActions = (props: Props) => {\n  const { isV3 } = useTheme();\n  const actionsLength = React.Children.toArray(props.children).length;\n\n  return (\n    <View\n      {...props}\n      style={[isV3 ? styles.v3Container : styles.container, props.style]}\n    >\n      {React.Children.map(props.children, (child, i) =>\n        React.isValidElement(child)\n          ? React.cloneElement(child, {\n              compact: true,\n              uppercase: !isV3,\n              style: isV3 && {\n                paddingRight: i + 1 === actionsLength ? 0 : 8,\n              },\n            })\n          : child\n      )}\n    </View>\n  );\n};\n\nDialogActions.displayName = 'Dialog.Actions';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8,\n  },\n  v3Container: {\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    paddingBottom: 24,\n    paddingHorizontal: 24,\n  },\n});\n\nexport default DialogActions;\n"]},"metadata":{},"sourceType":"script"}