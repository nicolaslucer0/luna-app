{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSwitchColor = void 0;\n\nvar _reactNative = require(\"react-native\");\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _colors = require(\"../../styles/themes/v2/colors\");\n\nvar getCheckedColor = function getCheckedColor(_ref) {\n  var theme = _ref.theme,\n      color = _ref.color;\n\n  if (color) {\n    return color;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nvar getThumbTintColor = function getThumbTintColor(_ref2) {\n  var theme = _ref2.theme,\n      disabled = _ref2.disabled,\n      value = _ref2.value,\n      checkedColor = _ref2.checkedColor;\n  var isIOS = _reactNative.Platform.OS === 'ios';\n\n  if (isIOS) {\n    return undefined;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      return _colors.grey800;\n    }\n\n    return _colors.grey400;\n  }\n\n  if (value) {\n    return checkedColor;\n  }\n\n  if (theme.dark) {\n    return _colors.grey400;\n  }\n\n  return _colors.grey50;\n};\n\nvar getOnTintColor = function getOnTintColor(_ref3) {\n  var theme = _ref3.theme,\n      disabled = _ref3.disabled,\n      value = _ref3.value,\n      checkedColor = _ref3.checkedColor;\n  var isIOS = _reactNative.Platform.OS === 'ios';\n\n  if (isIOS) {\n    return checkedColor;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      if (theme.isV3) {\n        return (0, _color.default)(_colors.white).alpha(0.06).rgb().string();\n      }\n\n      return (0, _color.default)(_colors.white).alpha(0.1).rgb().string();\n    }\n\n    return (0, _color.default)(_colors.black).alpha(0.12).rgb().string();\n  }\n\n  if (value) {\n    return (0, _color.default)(checkedColor).alpha(0.5).rgb().string();\n  }\n\n  if (theme.dark) {\n    return _colors.grey700;\n  }\n\n  return 'rgb(178, 175, 177)';\n};\n\nvar getSwitchColor = function getSwitchColor(_ref4) {\n  var theme = _ref4.theme,\n      disabled = _ref4.disabled,\n      value = _ref4.value,\n      color = _ref4.color;\n  var checkedColor = getCheckedColor({\n    theme: theme,\n    color: color\n  });\n  return {\n    onTintColor: getOnTintColor({\n      theme: theme,\n      disabled: disabled,\n      value: value,\n      checkedColor: checkedColor\n    }),\n    thumbTintColor: getThumbTintColor({\n      theme: theme,\n      disabled: disabled,\n      value: value,\n      checkedColor: checkedColor\n    }),\n    checkedColor: checkedColor\n  };\n};\n\nexports.getSwitchColor = getSwitchColor;","map":{"version":3,"sources":["utils.ts"],"names":["getCheckedColor","color","theme","getThumbTintColor","checkedColor","isIOS","Platform","getOnTintColor","setColor","getSwitchColor","onTintColor","disabled","value","thumbTintColor"],"mappings":"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","sourcesContent":["import { Platform } from 'react-native';\nimport setColor from 'color';\n\nimport {\n  grey400,\n  grey800,\n  grey50,\n  grey700,\n  white,\n  black,\n} from '../../styles/themes/v2/colors';\nimport type { Theme } from '../../types';\n\ntype BaseProps = {\n  theme: Theme;\n  disabled?: boolean;\n  value?: boolean;\n};\n\nconst getCheckedColor = ({\n  theme,\n  color,\n}: {\n  theme: Theme;\n  color?: string;\n}) => {\n  if (color) {\n    return color;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getThumbTintColor = ({\n  theme,\n  disabled,\n  value,\n  checkedColor,\n}: BaseProps & { checkedColor: string }) => {\n  const isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return undefined;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      return grey800;\n    }\n    return grey400;\n  }\n\n  if (value) {\n    return checkedColor;\n  }\n\n  if (theme.dark) {\n    return grey400;\n  }\n  return grey50;\n};\n\nconst getOnTintColor = ({\n  theme,\n  disabled,\n  value,\n  checkedColor,\n}: BaseProps & { checkedColor: string }) => {\n  const isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return checkedColor;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      if (theme.isV3) {\n        return setColor(white).alpha(0.06).rgb().string();\n      }\n      return setColor(white).alpha(0.1).rgb().string();\n    }\n    return setColor(black).alpha(0.12).rgb().string();\n  }\n\n  if (value) {\n    return setColor(checkedColor).alpha(0.5).rgb().string();\n  }\n\n  if (theme.dark) {\n    return grey700;\n  }\n  return 'rgb(178, 175, 177)';\n};\n\nexport const getSwitchColor = ({\n  theme,\n  disabled,\n  value,\n  color,\n}: BaseProps & { color?: string }) => {\n  const checkedColor = getCheckedColor({ theme, color });\n\n  return {\n    onTintColor: getOnTintColor({ theme, disabled, value, checkedColor }),\n    thumbTintColor: getThumbTintColor({ theme, disabled, value, checkedColor }),\n    checkedColor,\n  };\n};\n"]},"metadata":{},"sourceType":"script"}