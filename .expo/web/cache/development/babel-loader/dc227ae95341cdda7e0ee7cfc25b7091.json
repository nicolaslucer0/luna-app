{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.AppbarContent = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _colors = require(\"../../styles/themes/v2/colors\");\n\nvar _utils = require(\"./utils\");\n\nvar _excluded = [\"color\", \"subtitle\", \"subtitleStyle\", \"onPress\", \"style\", \"titleRef\", \"titleStyle\", \"theme\", \"title\", \"mode\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar AppbarContent = function AppbarContent(_ref) {\n  var titleColor = _ref.color,\n      subtitle = _ref.subtitle,\n      subtitleStyle = _ref.subtitleStyle,\n      onPress = _ref.onPress,\n      style = _ref.style,\n      titleRef = _ref.titleRef,\n      titleStyle = _ref.titleStyle,\n      theme = _ref.theme,\n      title = _ref.title,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'small' : _ref$mode,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var isV3 = theme.isV3,\n      colors = theme.colors;\n  var titleTextColor = titleColor ? titleColor : isV3 ? colors.onSurface : _colors.white;\n  var subtitleColor = (0, _color.default)(titleTextColor).alpha(0.7).rgb().string();\n  var modeContainerStyles = {\n    small: styles.v3DefaultContainer,\n    medium: styles.v3MediumContainer,\n    large: styles.v3LargeContainer,\n    'center-aligned': styles.v3DefaultContainer\n  };\n  var variant = _utils.modeTextVariant[mode];\n  return React.createElement(_reactNative.TouchableWithoutFeedback, {\n    onPress: onPress,\n    disabled: !onPress\n  }, React.createElement(_reactNative.View, _extends({\n    pointerEvents: \"box-none\",\n    style: [styles.container, isV3 && modeContainerStyles[mode], style]\n  }, rest), React.createElement(_Text.default, _extends({}, isV3 && {\n    variant: variant\n  }, {\n    ref: titleRef,\n    style: [Object.assign({\n      color: titleTextColor\n    }, isV3 ? theme.typescale[variant] : _reactNative.Platform.OS === 'ios' ? theme.fonts.regular : theme.fonts.medium), !isV3 && styles.title, titleStyle],\n    numberOfLines: 1,\n    accessible: true,\n    accessibilityRole: _reactNative.Platform.OS === 'web' ? 'heading' : 'header'\n  }), title), !isV3 && subtitle ? React.createElement(_Text.default, {\n    style: [styles.subtitle, {\n      color: subtitleColor\n    }, subtitleStyle],\n    numberOfLines: 1\n  }, subtitle) : null));\n};\n\nAppbarContent.displayName = 'Appbar.Content';\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12\n  },\n  v3DefaultContainer: {\n    paddingHorizontal: 0\n  },\n  v3MediumContainer: {\n    paddingHorizontal: 0,\n    justifyContent: 'flex-end',\n    paddingBottom: 24\n  },\n  v3LargeContainer: {\n    paddingHorizontal: 0,\n    paddingTop: 36,\n    justifyContent: 'flex-end',\n    paddingBottom: 28\n  },\n  title: {\n    fontSize: _reactNative.Platform.OS === 'ios' ? 17 : 20\n  },\n  subtitle: {\n    fontSize: _reactNative.Platform.OS === 'ios' ? 11 : 14\n  }\n});\n\nvar _default = (0, _theming.withTheme)(AppbarContent);\n\nexports.default = _default;\nvar AppbarContentWithTheme = (0, _theming.withTheme)(AppbarContent);\nexports.AppbarContent = AppbarContentWithTheme;","map":{"version":3,"mappings":"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","names":["AppbarContent","titleColor","color","subtitle","subtitleStyle","onPress","style","titleRef","titleStyle","theme","title","mode","rest","isV3","colors","titleTextColor","onSurface","white","subtitleColor","alpha","rgb","string","modeContainerStyles","small","styles","v3DefaultContainer","medium","v3MediumContainer","large","v3LargeContainer","variant","modeTextVariant","React","TouchableWithoutFeedback","disabled","View","pointerEvents","container","Text","ref","typescale","Platform","OS","fonts","regular","numberOfLines","accessible","accessibilityRole","displayName","StyleSheet","create","flex","paddingHorizontal","justifyContent","paddingBottom","paddingTop","fontSize","withTheme","AppbarContentWithTheme"],"sources":["AppbarContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport Text from '../Typography/Text';\n\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\n\nimport type { $RemoveChildren, MD3TypescaleKey, Theme } from '../../types';\nimport { modeTextVariant } from './utils';\n\nexport type Props = $RemoveChildren<typeof View> & {\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Text for the title.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Reference for the title.\n   */\n  titleRef?: React.RefObject<Text>;\n  /**\n   * @deprecated Deprecated in v5.x\n   * Text for the subtitle.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * @deprecated Deprecated in v5.x\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * @internal\n   */\n  mode?: 'small' | 'medium' | 'large' | 'center-aligned';\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component used to display a title and optional subtitle in an appbar.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/appbar-content.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarContent = ({\n  color: titleColor,\n  subtitle,\n  subtitleStyle,\n  onPress,\n  style,\n  titleRef,\n  titleStyle,\n  theme,\n  title,\n  mode = 'small',\n  ...rest\n}: Props) => {\n  const { isV3, colors } = theme;\n\n  const titleTextColor = titleColor\n    ? titleColor\n    : isV3\n    ? colors.onSurface\n    : white;\n\n  const subtitleColor = color(titleTextColor).alpha(0.7).rgb().string();\n\n  const modeContainerStyles = {\n    small: styles.v3DefaultContainer,\n    medium: styles.v3MediumContainer,\n    large: styles.v3LargeContainer,\n    'center-aligned': styles.v3DefaultContainer,\n  };\n\n  const variant = modeTextVariant[mode] as MD3TypescaleKey;\n\n  return (\n    <TouchableWithoutFeedback onPress={onPress} disabled={!onPress}>\n      <View\n        pointerEvents=\"box-none\"\n        style={[styles.container, isV3 && modeContainerStyles[mode], style]}\n        {...rest}\n      >\n        <Text\n          {...(isV3 && { variant })}\n          ref={titleRef}\n          style={[\n            {\n              color: titleTextColor,\n              ...(isV3\n                ? theme.typescale[variant]\n                : Platform.OS === 'ios'\n                ? theme.fonts.regular\n                : theme.fonts.medium),\n            },\n            !isV3 && styles.title,\n            titleStyle,\n          ]}\n          numberOfLines={1}\n          accessible\n          // @ts-ignore Type '\"heading\"' is not assignable to type ...\n          accessibilityRole={Platform.OS === 'web' ? 'heading' : 'header'}\n        >\n          {title}\n        </Text>\n        {!isV3 && subtitle ? (\n          <Text\n            style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n            numberOfLines={1}\n          >\n            {subtitle}\n          </Text>\n        ) : null}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nAppbarContent.displayName = 'Appbar.Content';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  v3DefaultContainer: {\n    paddingHorizontal: 0,\n  },\n  v3MediumContainer: {\n    paddingHorizontal: 0,\n    justifyContent: 'flex-end',\n    paddingBottom: 24,\n  },\n  v3LargeContainer: {\n    paddingHorizontal: 0,\n    paddingTop: 36,\n    justifyContent: 'flex-end',\n    paddingBottom: 28,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nexport default withTheme(AppbarContent);\n\n// @component-docs ignore-next-line\nconst AppbarContentWithTheme = withTheme(AppbarContent);\n// @component-docs ignore-next-line\nexport { AppbarContentWithTheme as AppbarContent };\n"]},"metadata":{},"sourceType":"script"}