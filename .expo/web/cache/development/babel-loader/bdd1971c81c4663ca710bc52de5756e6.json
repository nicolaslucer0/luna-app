{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _theming = require(\"../../../core/theming\");\n\nvar _excluded = [\"style\", \"theme\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar Text = function Text(_ref, ref) {\n  var _theme$fonts, _theme$colors;\n\n  var style = _ref.style,\n      overrideTheme = _ref.theme,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var root = React.useRef(null);\n  var theme = (0, _theming.useTheme)(overrideTheme);\n  React.useImperativeHandle(ref, function () {\n    return {\n      setNativeProps: function setNativeProps(args) {\n        var _root$current;\n\n        return (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.setNativeProps(args);\n      }\n    };\n  });\n  return React.createElement(_reactNative.Text, _extends({}, rest, {\n    ref: root,\n    style: [Object.assign({}, !theme.isV3 && ((_theme$fonts = theme.fonts) === null || _theme$fonts === void 0 ? void 0 : _theme$fonts.regular), {\n      color: theme.isV3 ? (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.onSurface : theme.colors.text\n    }), styles.text, style]\n  }));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\n\nvar _default = React.forwardRef(Text);\n\nexports.default = _default;","map":{"version":3,"sources":["Text.tsx"],"names":["Text","theme","rest","root","React","useTheme","setNativeProps","args","color","text","styles","textAlign"],"mappings":";;;;;;;;;AAAA;;AACA;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,IAAMA,IAA+C,GAAG,SAAlDA,IAAkD,CAAA,IAAA,EAAA,GAAA,EAGnD;EAAA,IAAA,YAAA,EAAA,aAAA;;EAFH,IAAA,KAAA,GAEG,IAFH,CAAA,KAAA;EAAA,IAAA,aAAA,GAEG,IAFH,CAASC,KAAT;EAAA,IAAkCC,IAAlC,0CAEG,IAFH;EAGA,IAAMC,IAAI,GAAGC,KAAK,CAALA,MAAAA,CAAb,IAAaA,CAAb;EACA,IAAMH,KAAK,GAAGI,IAAAA,iBAAAA,EAAd,aAAcA,CAAd;EAEAD,KAAK,CAALA,mBAAAA,CAAAA,GAAAA,EAA+B;IAAA,OAAO;MACpCE,cAAc,EAAGC,wBAAAA,IAAD,EAAA;QAAA,IAAA,aAAA;;QAAA,OAAA,CAAA,aAAA,GAAkBJ,IAAI,CAAtB,OAAA,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAkBA,aAAAA,CAAAA,cAAAA,CAAlB,IAAkBA,CAAlB;MAAA;IADoB,CAAP;EAAA,CAA/BC;EAIA,OACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;IAEE,GAAG,EAFL,IAAA;IAGE,KAAK,EAAE,mBAEC,CAACH,KAAK,CAAN,IAAA,KAAA,CAAA,YAAA,GAAeA,KAAK,CAApB,KAAA,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAeA,YAAAA,CADrB,OACM,CAFD;MAGHO,KAAK,EAAEP,KAAK,CAALA,IAAAA,GAAAA,CAAAA,aAAAA,GAAaA,KAAK,CAAlBA,MAAAA,MAAAA,IAAAA,IAAAA,aAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAaA,aAAAA,CAAbA,SAAAA,GAAuCA,KAAK,CAALA,MAAAA,CAAaQ;IAHxD,IAKLC,MAAM,CALD,IAAA,EAAA,KAAA;EAHT,CAAA,CAAA,CADF;AAXF,CAAA;;AA2BA,IAAMA,MAAM,GAAG,uBAAA,CAAA,MAAA,CAAkB;EAC/BD,IAAI,EAAE;IACJE,SAAS,EAAE;EADP;AADyB,CAAlB,CAAf;;eAMeP,KAAK,CAALA,UAAAA,CAAf,IAAeA,C","sourcesContent":["import * as React from 'react';\nimport {\n  Text as NativeText,\n  TextStyle,\n  StyleProp,\n  StyleSheet,\n} from 'react-native';\nimport type { Theme } from '../../../types';\nimport { useTheme } from '../../../core/theming';\n\ntype Props = React.ComponentProps<typeof NativeText> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: Theme;\n};\n\n// @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nconst Text: React.ForwardRefRenderFunction<{}, Props> = (\n  { style, theme: overrideTheme, ...rest }: Props,\n  ref\n) => {\n  const root = React.useRef<NativeText | null>(null);\n  const theme = useTheme(overrideTheme);\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  return (\n    <NativeText\n      {...rest}\n      ref={root}\n      style={[\n        {\n          ...(!theme.isV3 && theme.fonts?.regular),\n          color: theme.isV3 ? theme.colors?.onSurface : theme.colors.text,\n        },\n        styles.text,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default React.forwardRef(Text);\n"]},"metadata":{},"sourceType":"script"}